// Code generated by protoc-gen-go.
// source: gooption.proto
// DO NOT EDIT!

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	gooption.proto

It has these top-level messages:
	Contract
	PriceRequest
	PriceResponse
	GreekRequest
	GreekResponse
	ImpliedVolRequest
	ImpliedVolResponse
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Contract_OptionType int32

const (
	Contract_PUT  Contract_OptionType = 0
	Contract_CALL Contract_OptionType = 1
)

var Contract_OptionType_name = map[int32]string{
	0: "PUT",
	1: "CALL",
}
var Contract_OptionType_value = map[string]int32{
	"PUT":  0,
	"CALL": 1,
}

func (x Contract_OptionType) String() string {
	return proto.EnumName(Contract_OptionType_name, int32(x))
}
func (Contract_OptionType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type Contract struct {
	Strike  float64             `protobuf:"fixed64,1,opt,name=strike" json:"strike,omitempty"`
	Expiry  string              `protobuf:"bytes,2,opt,name=expiry" json:"expiry,omitempty"`
	Putcall Contract_OptionType `protobuf:"varint,3,opt,name=putcall,enum=pb.Contract_OptionType" json:"putcall,omitempty"`
}

func (m *Contract) Reset()                    { *m = Contract{} }
func (m *Contract) String() string            { return proto.CompactTextString(m) }
func (*Contract) ProtoMessage()               {}
func (*Contract) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Contract) GetStrike() float64 {
	if m != nil {
		return m.Strike
	}
	return 0
}

func (m *Contract) GetExpiry() string {
	if m != nil {
		return m.Expiry
	}
	return ""
}

func (m *Contract) GetPutcall() Contract_OptionType {
	if m != nil {
		return m.Putcall
	}
	return Contract_PUT
}

type PriceRequest struct {
	Pricingdate string                     `protobuf:"bytes,1,opt,name=pricingdate" json:"pricingdate,omitempty"`
	Contracts   []*Contract                `protobuf:"bytes,2,rep,name=contracts" json:"contracts,omitempty"`
	Marketdata  []*PriceRequest_MarketData `protobuf:"bytes,3,rep,name=marketdata" json:"marketdata,omitempty"`
}

func (m *PriceRequest) Reset()                    { *m = PriceRequest{} }
func (m *PriceRequest) String() string            { return proto.CompactTextString(m) }
func (*PriceRequest) ProtoMessage()               {}
func (*PriceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PriceRequest) GetPricingdate() string {
	if m != nil {
		return m.Pricingdate
	}
	return ""
}

func (m *PriceRequest) GetContracts() []*Contract {
	if m != nil {
		return m.Contracts
	}
	return nil
}

func (m *PriceRequest) GetMarketdata() []*PriceRequest_MarketData {
	if m != nil {
		return m.Marketdata
	}
	return nil
}

type PriceRequest_MarketData struct {
	Spot         float64 `protobuf:"fixed64,1,opt,name=spot" json:"spot,omitempty"`
	Volatility   float64 `protobuf:"fixed64,2,opt,name=volatility" json:"volatility,omitempty"`
	Riskfreerate float64 `protobuf:"fixed64,3,opt,name=riskfreerate" json:"riskfreerate,omitempty"`
}

func (m *PriceRequest_MarketData) Reset()                    { *m = PriceRequest_MarketData{} }
func (m *PriceRequest_MarketData) String() string            { return proto.CompactTextString(m) }
func (*PriceRequest_MarketData) ProtoMessage()               {}
func (*PriceRequest_MarketData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

func (m *PriceRequest_MarketData) GetSpot() float64 {
	if m != nil {
		return m.Spot
	}
	return 0
}

func (m *PriceRequest_MarketData) GetVolatility() float64 {
	if m != nil {
		return m.Volatility
	}
	return 0
}

func (m *PriceRequest_MarketData) GetRiskfreerate() float64 {
	if m != nil {
		return m.Riskfreerate
	}
	return 0
}

type PriceResponse struct {
	Price []float64 `protobuf:"fixed64,1,rep,packed,name=price" json:"price,omitempty"`
	Error []string  `protobuf:"bytes,2,rep,name=error" json:"error,omitempty"`
}

func (m *PriceResponse) Reset()                    { *m = PriceResponse{} }
func (m *PriceResponse) String() string            { return proto.CompactTextString(m) }
func (*PriceResponse) ProtoMessage()               {}
func (*PriceResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *PriceResponse) GetPrice() []float64 {
	if m != nil {
		return m.Price
	}
	return nil
}

func (m *PriceResponse) GetError() []string {
	if m != nil {
		return m.Error
	}
	return nil
}

type GreekRequest struct {
	Request *PriceRequest `protobuf:"bytes,1,opt,name=request" json:"request,omitempty"`
	Greek   []string      `protobuf:"bytes,2,rep,name=greek" json:"greek,omitempty"`
}

func (m *GreekRequest) Reset()                    { *m = GreekRequest{} }
func (m *GreekRequest) String() string            { return proto.CompactTextString(m) }
func (*GreekRequest) ProtoMessage()               {}
func (*GreekRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GreekRequest) GetRequest() *PriceRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *GreekRequest) GetGreek() []string {
	if m != nil {
		return m.Greek
	}
	return nil
}

type GreekResponse struct {
	Greeks []*GreekResponse_Greek `protobuf:"bytes,1,rep,name=greeks" json:"greeks,omitempty"`
	Errors []string               `protobuf:"bytes,2,rep,name=errors" json:"errors,omitempty"`
}

func (m *GreekResponse) Reset()                    { *m = GreekResponse{} }
func (m *GreekResponse) String() string            { return proto.CompactTextString(m) }
func (*GreekResponse) ProtoMessage()               {}
func (*GreekResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GreekResponse) GetGreeks() []*GreekResponse_Greek {
	if m != nil {
		return m.Greeks
	}
	return nil
}

func (m *GreekResponse) GetErrors() []string {
	if m != nil {
		return m.Errors
	}
	return nil
}

type GreekResponse_Greek struct {
	Labels []string  `protobuf:"bytes,1,rep,name=labels" json:"labels,omitempty"`
	Values []float64 `protobuf:"fixed64,2,rep,packed,name=values" json:"values,omitempty"`
	Errors []string  `protobuf:"bytes,3,rep,name=errors" json:"errors,omitempty"`
}

func (m *GreekResponse_Greek) Reset()                    { *m = GreekResponse_Greek{} }
func (m *GreekResponse_Greek) String() string            { return proto.CompactTextString(m) }
func (*GreekResponse_Greek) ProtoMessage()               {}
func (*GreekResponse_Greek) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4, 0} }

func (m *GreekResponse_Greek) GetLabels() []string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *GreekResponse_Greek) GetValues() []float64 {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *GreekResponse_Greek) GetErrors() []string {
	if m != nil {
		return m.Errors
	}
	return nil
}

type ImpliedVolRequest struct {
	Pricingdate string                                  `protobuf:"bytes,1,opt,name=pricingdate" json:"pricingdate,omitempty"`
	Marketdata  *ImpliedVolRequest_MarketData           `protobuf:"bytes,2,opt,name=marketdata" json:"marketdata,omitempty"`
	Quotes      []*ImpliedVolRequest_QuoteTermStructure `protobuf:"bytes,3,rep,name=quotes" json:"quotes,omitempty"`
}

func (m *ImpliedVolRequest) Reset()                    { *m = ImpliedVolRequest{} }
func (m *ImpliedVolRequest) String() string            { return proto.CompactTextString(m) }
func (*ImpliedVolRequest) ProtoMessage()               {}
func (*ImpliedVolRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ImpliedVolRequest) GetPricingdate() string {
	if m != nil {
		return m.Pricingdate
	}
	return ""
}

func (m *ImpliedVolRequest) GetMarketdata() *ImpliedVolRequest_MarketData {
	if m != nil {
		return m.Marketdata
	}
	return nil
}

func (m *ImpliedVolRequest) GetQuotes() []*ImpliedVolRequest_QuoteTermStructure {
	if m != nil {
		return m.Quotes
	}
	return nil
}

type ImpliedVolRequest_Quote struct {
	Strike       float64 `protobuf:"fixed64,8,opt,name=strike" json:"strike,omitempty"`
	Bid          float64 `protobuf:"fixed64,9,opt,name=bid" json:"bid,omitempty"`
	Ask          float64 `protobuf:"fixed64,10,opt,name=ask" json:"ask,omitempty"`
	Volume       int32   `protobuf:"varint,11,opt,name=volume" json:"volume,omitempty"`
	Openinterest int32   `protobuf:"varint,12,opt,name=openinterest" json:"openinterest,omitempty"`
}

func (m *ImpliedVolRequest_Quote) Reset()                    { *m = ImpliedVolRequest_Quote{} }
func (m *ImpliedVolRequest_Quote) String() string            { return proto.CompactTextString(m) }
func (*ImpliedVolRequest_Quote) ProtoMessage()               {}
func (*ImpliedVolRequest_Quote) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5, 0} }

func (m *ImpliedVolRequest_Quote) GetStrike() float64 {
	if m != nil {
		return m.Strike
	}
	return 0
}

func (m *ImpliedVolRequest_Quote) GetBid() float64 {
	if m != nil {
		return m.Bid
	}
	return 0
}

func (m *ImpliedVolRequest_Quote) GetAsk() float64 {
	if m != nil {
		return m.Ask
	}
	return 0
}

func (m *ImpliedVolRequest_Quote) GetVolume() int32 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *ImpliedVolRequest_Quote) GetOpeninterest() int32 {
	if m != nil {
		return m.Openinterest
	}
	return 0
}

type ImpliedVolRequest_QuoteTermStructure struct {
	Expiry float64                    `protobuf:"fixed64,1,opt,name=expiry" json:"expiry,omitempty"`
	Puts   []*ImpliedVolRequest_Quote `protobuf:"bytes,2,rep,name=puts" json:"puts,omitempty"`
	Calls  []*ImpliedVolRequest_Quote `protobuf:"bytes,3,rep,name=calls" json:"calls,omitempty"`
}

func (m *ImpliedVolRequest_QuoteTermStructure) Reset()         { *m = ImpliedVolRequest_QuoteTermStructure{} }
func (m *ImpliedVolRequest_QuoteTermStructure) String() string { return proto.CompactTextString(m) }
func (*ImpliedVolRequest_QuoteTermStructure) ProtoMessage()    {}
func (*ImpliedVolRequest_QuoteTermStructure) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{5, 1}
}

func (m *ImpliedVolRequest_QuoteTermStructure) GetExpiry() float64 {
	if m != nil {
		return m.Expiry
	}
	return 0
}

func (m *ImpliedVolRequest_QuoteTermStructure) GetPuts() []*ImpliedVolRequest_Quote {
	if m != nil {
		return m.Puts
	}
	return nil
}

func (m *ImpliedVolRequest_QuoteTermStructure) GetCalls() []*ImpliedVolRequest_Quote {
	if m != nil {
		return m.Calls
	}
	return nil
}

type ImpliedVolRequest_MarketData struct {
	Spot         float64 `protobuf:"fixed64,1,opt,name=spot" json:"spot,omitempty"`
	Riskfreerate float64 `protobuf:"fixed64,2,opt,name=riskfreerate" json:"riskfreerate,omitempty"`
}

func (m *ImpliedVolRequest_MarketData) Reset()                    { *m = ImpliedVolRequest_MarketData{} }
func (m *ImpliedVolRequest_MarketData) String() string            { return proto.CompactTextString(m) }
func (*ImpliedVolRequest_MarketData) ProtoMessage()               {}
func (*ImpliedVolRequest_MarketData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5, 2} }

func (m *ImpliedVolRequest_MarketData) GetSpot() float64 {
	if m != nil {
		return m.Spot
	}
	return 0
}

func (m *ImpliedVolRequest_MarketData) GetRiskfreerate() float64 {
	if m != nil {
		return m.Riskfreerate
	}
	return 0
}

type ImpliedVolResponse struct {
	Volsurface []*ImpliedVolResponse_ImpliedVolTermStructure `protobuf:"bytes,1,rep,name=volsurface" json:"volsurface,omitempty"`
}

func (m *ImpliedVolResponse) Reset()                    { *m = ImpliedVolResponse{} }
func (m *ImpliedVolResponse) String() string            { return proto.CompactTextString(m) }
func (*ImpliedVolResponse) ProtoMessage()               {}
func (*ImpliedVolResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ImpliedVolResponse) GetVolsurface() []*ImpliedVolResponse_ImpliedVolTermStructure {
	if m != nil {
		return m.Volsurface
	}
	return nil
}

type ImpliedVolResponse_ImpliedVolTermStructure struct {
	Iserror bool      `protobuf:"varint,2,opt,name=iserror" json:"iserror,omitempty"`
	Expiry  float64   `protobuf:"fixed64,3,opt,name=expiry" json:"expiry,omitempty"`
	Errors  []string  `protobuf:"bytes,4,rep,name=errors" json:"errors,omitempty"`
	Strikes []float64 `protobuf:"fixed64,5,rep,packed,name=strikes" json:"strikes,omitempty"`
	Vols    []float64 `protobuf:"fixed64,6,rep,packed,name=vols" json:"vols,omitempty"`
}

func (m *ImpliedVolResponse_ImpliedVolTermStructure) Reset() {
	*m = ImpliedVolResponse_ImpliedVolTermStructure{}
}
func (m *ImpliedVolResponse_ImpliedVolTermStructure) String() string {
	return proto.CompactTextString(m)
}
func (*ImpliedVolResponse_ImpliedVolTermStructure) ProtoMessage() {}
func (*ImpliedVolResponse_ImpliedVolTermStructure) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{6, 0}
}

func (m *ImpliedVolResponse_ImpliedVolTermStructure) GetIserror() bool {
	if m != nil {
		return m.Iserror
	}
	return false
}

func (m *ImpliedVolResponse_ImpliedVolTermStructure) GetExpiry() float64 {
	if m != nil {
		return m.Expiry
	}
	return 0
}

func (m *ImpliedVolResponse_ImpliedVolTermStructure) GetErrors() []string {
	if m != nil {
		return m.Errors
	}
	return nil
}

func (m *ImpliedVolResponse_ImpliedVolTermStructure) GetStrikes() []float64 {
	if m != nil {
		return m.Strikes
	}
	return nil
}

func (m *ImpliedVolResponse_ImpliedVolTermStructure) GetVols() []float64 {
	if m != nil {
		return m.Vols
	}
	return nil
}

func init() {
	proto.RegisterType((*Contract)(nil), "pb.Contract")
	proto.RegisterType((*PriceRequest)(nil), "pb.PriceRequest")
	proto.RegisterType((*PriceRequest_MarketData)(nil), "pb.PriceRequest.MarketData")
	proto.RegisterType((*PriceResponse)(nil), "pb.PriceResponse")
	proto.RegisterType((*GreekRequest)(nil), "pb.GreekRequest")
	proto.RegisterType((*GreekResponse)(nil), "pb.GreekResponse")
	proto.RegisterType((*GreekResponse_Greek)(nil), "pb.GreekResponse.Greek")
	proto.RegisterType((*ImpliedVolRequest)(nil), "pb.ImpliedVolRequest")
	proto.RegisterType((*ImpliedVolRequest_Quote)(nil), "pb.ImpliedVolRequest.Quote")
	proto.RegisterType((*ImpliedVolRequest_QuoteTermStructure)(nil), "pb.ImpliedVolRequest.QuoteTermStructure")
	proto.RegisterType((*ImpliedVolRequest_MarketData)(nil), "pb.ImpliedVolRequest.MarketData")
	proto.RegisterType((*ImpliedVolResponse)(nil), "pb.ImpliedVolResponse")
	proto.RegisterType((*ImpliedVolResponse_ImpliedVolTermStructure)(nil), "pb.ImpliedVolResponse.ImpliedVolTermStructure")
	proto.RegisterEnum("pb.Contract_OptionType", Contract_OptionType_name, Contract_OptionType_value)
}

func init() { proto.RegisterFile("gooption.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 659 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x54, 0x4d, 0x6f, 0x13, 0x31,
	0x14, 0xc4, 0xd9, 0x7c, 0xbe, 0xa4, 0x55, 0xb0, 0x10, 0x5d, 0xa5, 0x12, 0xac, 0xf6, 0xb4, 0xea,
	0x21, 0x55, 0xc3, 0xb1, 0x97, 0xa2, 0x56, 0x42, 0x48, 0x85, 0x16, 0x53, 0xb8, 0x3b, 0x89, 0x5b,
	0x59, 0xd9, 0xc4, 0xae, 0xed, 0xad, 0xe8, 0x89, 0x7f, 0x80, 0x40, 0xfc, 0x0a, 0xfe, 0x21, 0x37,
	0x90, 0xbd, 0x5e, 0xe2, 0x6d, 0x1b, 0xe0, 0xe6, 0x19, 0x8f, 0x9f, 0x9f, 0xdf, 0xce, 0x2c, 0x6c,
	0x5f, 0x09, 0x21, 0x0d, 0x17, 0xab, 0xb1, 0x54, 0xc2, 0x08, 0xdc, 0x90, 0xd3, 0xf4, 0x0b, 0x82,
	0xee, 0xb1, 0x58, 0x19, 0x45, 0x67, 0x06, 0x3f, 0x85, 0xb6, 0x36, 0x8a, 0x2f, 0x58, 0x8c, 0x12,
	0x94, 0x21, 0xe2, 0x91, 0xe5, 0xd9, 0x27, 0xc9, 0xd5, 0x6d, 0xdc, 0x48, 0x50, 0xd6, 0x23, 0x1e,
	0xe1, 0x03, 0xe8, 0xc8, 0xc2, 0xcc, 0x68, 0x9e, 0xc7, 0x51, 0x82, 0xb2, 0xed, 0xc9, 0xce, 0x58,
	0x4e, 0xc7, 0x55, 0xb9, 0xf1, 0x99, 0xbb, 0xec, 0xe2, 0x56, 0x32, 0x52, 0xe9, 0xd2, 0xe7, 0x00,
	0x6b, 0x1a, 0x77, 0x20, 0x3a, 0xff, 0x70, 0x31, 0x7c, 0x84, 0xbb, 0xd0, 0x3c, 0x7e, 0x79, 0x7a,
	0x3a, 0x44, 0xe9, 0x2f, 0x04, 0x83, 0x73, 0xc5, 0x67, 0x8c, 0xb0, 0xeb, 0x82, 0x69, 0x83, 0x13,
	0xe8, 0x4b, 0xc5, 0x67, 0x7c, 0x75, 0x35, 0xa7, 0xa6, 0xec, 0xac, 0x47, 0x42, 0x0a, 0xef, 0x41,
	0x6f, 0xe6, 0xef, 0xd4, 0x71, 0x23, 0x89, 0xb2, 0xfe, 0x64, 0x10, 0x36, 0x42, 0xd6, 0xdb, 0xf8,
	0x10, 0x60, 0x49, 0xd5, 0x82, 0x99, 0x39, 0x35, 0x34, 0x8e, 0x9c, 0x78, 0xd7, 0x8a, 0xc3, 0x3b,
	0xc7, 0x6f, 0x9c, 0xe4, 0x84, 0x1a, 0x4a, 0x02, 0xf9, 0x68, 0x0e, 0xb0, 0xde, 0xc1, 0x18, 0x9a,
	0x5a, 0x0a, 0xe3, 0x67, 0xe5, 0xd6, 0xf8, 0x19, 0xc0, 0x8d, 0xc8, 0xa9, 0xe1, 0x39, 0x37, 0xe5,
	0xb4, 0x10, 0x09, 0x18, 0x9c, 0xc2, 0x40, 0x71, 0xbd, 0xb8, 0x54, 0x8c, 0x29, 0xfb, 0x9a, 0xc8,
	0x29, 0x6a, 0x5c, 0x7a, 0x08, 0x5b, 0xbe, 0x19, 0x2d, 0xc5, 0x4a, 0x33, 0xfc, 0x04, 0x5a, 0xf6,
	0xb9, 0xf6, 0xed, 0x51, 0x86, 0x48, 0x09, 0x2c, 0xcb, 0x94, 0x12, 0xca, 0xbd, 0xb8, 0x47, 0x4a,
	0x90, 0x9e, 0xc3, 0xe0, 0x95, 0x62, 0x6c, 0x51, 0x4d, 0x6f, 0x0f, 0x3a, 0xaa, 0x5c, 0xba, 0x3e,
	0xfb, 0x93, 0xe1, 0xdd, 0xc7, 0x92, 0x4a, 0x60, 0x2b, 0x5e, 0xd9, 0xb3, 0x55, 0x45, 0x07, 0xd2,
	0x1f, 0x08, 0xb6, 0x7c, 0x49, 0xdf, 0xcf, 0x3e, 0xb4, 0xdd, 0x96, 0x76, 0x0d, 0xf5, 0xcb, 0xaf,
	0x5e, 0x93, 0x78, 0xe4, 0x65, 0xce, 0x3f, 0xb6, 0x3b, 0xed, 0x2b, 0x7b, 0x34, 0x3a, 0x83, 0x96,
	0x13, 0x5a, 0x41, 0x4e, 0xa7, 0x2c, 0x2f, 0x2b, 0xf6, 0x88, 0x47, 0x96, 0xbf, 0xa1, 0x79, 0xc1,
	0xca, 0x83, 0x88, 0x78, 0x14, 0x14, 0x8c, 0xc2, 0x82, 0xe9, 0xf7, 0x26, 0x3c, 0x7e, 0xbd, 0x94,
	0x39, 0x67, 0xf3, 0x8f, 0x22, 0xff, 0x7f, 0x07, 0x1d, 0xd5, 0x5c, 0xd1, 0x70, 0x83, 0x4a, 0xec,
	0xab, 0xee, 0x15, 0xdb, 0x60, 0x0d, 0x7c, 0x04, 0xed, 0xeb, 0x42, 0x18, 0xa6, 0xbd, 0xa7, 0xb2,
	0x87, 0x4f, 0xbf, 0xb3, 0x9a, 0x0b, 0xa6, 0x96, 0xef, 0x8d, 0x2a, 0x66, 0xa6, 0x50, 0x8c, 0xf8,
	0x73, 0xa3, 0xcf, 0xd0, 0x72, 0xbb, 0x41, 0x0a, 0xbb, 0xb5, 0x14, 0x0e, 0x21, 0x9a, 0xf2, 0x79,
	0xdc, 0x73, 0xa4, 0x5d, 0x5a, 0x86, 0xea, 0x45, 0x0c, 0x25, 0x43, 0xb5, 0x1b, 0xe4, 0x8d, 0xc8,
	0x8b, 0x25, 0x8b, 0xfb, 0x09, 0xca, 0x5a, 0xc4, 0x23, 0xeb, 0x3b, 0x21, 0xd9, 0x8a, 0xaf, 0x0c,
	0x53, 0xd6, 0x0b, 0x03, 0xb7, 0x5b, 0xe3, 0x46, 0x5f, 0x11, 0xe0, 0xfb, 0xfd, 0x05, 0xe1, 0xf7,
	0x3f, 0x05, 0x1f, 0xfe, 0x7d, 0x68, 0xca, 0xe2, 0x4f, 0xe0, 0x76, 0xff, 0xf2, 0x5e, 0xe2, 0x84,
	0xf8, 0x00, 0x5a, 0xf6, 0x17, 0xa0, 0xc3, 0xd4, 0x6d, 0x3a, 0x51, 0x2a, 0x47, 0x27, 0xff, 0x0c,
	0xdc, 0xdd, 0x40, 0x35, 0x1e, 0x08, 0xd4, 0x4f, 0x04, 0x38, 0xbc, 0xc8, 0xdb, 0xf8, 0xad, 0xcb,
	0xaa, 0x2e, 0xd4, 0x25, 0xf5, 0xd9, 0xea, 0x4f, 0xc6, 0x77, 0x9b, 0xf2, 0x7e, 0x5e, 0x53, 0xf5,
	0x8f, 0x17, 0x54, 0x18, 0x7d, 0x43, 0xb0, 0xb3, 0x41, 0x87, 0x63, 0xe8, 0x70, 0x5d, 0xc5, 0x15,
	0x65, 0x5d, 0x52, 0xc1, 0x60, 0xbc, 0x51, 0x6d, 0xbc, 0x6b, 0x8b, 0x37, 0x43, 0x8b, 0xdb, 0x4a,
	0xa5, 0x1f, 0x74, 0xdc, 0x72, 0x99, 0xa8, 0xa0, 0x1d, 0x8f, 0xed, 0x26, 0x6e, 0x3b, 0xda, 0xad,
	0xa7, 0x6d, 0xf7, 0xa7, 0x7f, 0xf1, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x49, 0x83, 0xde, 0xe5, 0xfb,
	0x05, 0x00, 0x00,
}

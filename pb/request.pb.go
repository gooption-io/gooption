// Code generated by protoc-gen-go.
// source: request.proto
// DO NOT EDIT!

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Contract struct {
	Strike  float64    `protobuf:"fixed64,1,opt,name=strike" json:"strike,omitempty"`
	Expiry  float32    `protobuf:"fixed32,2,opt,name=expiry" json:"expiry,omitempty"`
	Putcall OptionType `protobuf:"varint,3,opt,name=putcall,enum=pb.OptionType" json:"putcall,omitempty"`
}

func (m *Contract) Reset()                    { *m = Contract{} }
func (m *Contract) String() string            { return proto.CompactTextString(m) }
func (*Contract) ProtoMessage()               {}
func (*Contract) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Contract) GetStrike() float64 {
	if m != nil {
		return m.Strike
	}
	return 0
}

func (m *Contract) GetExpiry() float32 {
	if m != nil {
		return m.Expiry
	}
	return 0
}

func (m *Contract) GetPutcall() OptionType {
	if m != nil {
		return m.Putcall
	}
	return OptionType_PUT
}

type PriceRequest struct {
	Pricingdate float32       `protobuf:"fixed32,1,opt,name=pricingdate" json:"pricingdate,omitempty"`
	Contract    *Contract     `protobuf:"bytes,2,opt,name=contract" json:"contract,omitempty"`
	Marketdata  *OptionMarket `protobuf:"bytes,3,opt,name=marketdata" json:"marketdata,omitempty"`
}

func (m *PriceRequest) Reset()                    { *m = PriceRequest{} }
func (m *PriceRequest) String() string            { return proto.CompactTextString(m) }
func (*PriceRequest) ProtoMessage()               {}
func (*PriceRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *PriceRequest) GetPricingdate() float32 {
	if m != nil {
		return m.Pricingdate
	}
	return 0
}

func (m *PriceRequest) GetContract() *Contract {
	if m != nil {
		return m.Contract
	}
	return nil
}

func (m *PriceRequest) GetMarketdata() *OptionMarket {
	if m != nil {
		return m.Marketdata
	}
	return nil
}

type PriceResponse struct {
	Price float64 `protobuf:"fixed64,2,opt,name=price" json:"price,omitempty"`
	Error string  `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
}

func (m *PriceResponse) Reset()                    { *m = PriceResponse{} }
func (m *PriceResponse) String() string            { return proto.CompactTextString(m) }
func (*PriceResponse) ProtoMessage()               {}
func (*PriceResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *PriceResponse) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *PriceResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type GreekRequest struct {
	Request *PriceRequest `protobuf:"bytes,1,opt,name=request" json:"request,omitempty"`
	Greek   []string      `protobuf:"bytes,2,rep,name=greek" json:"greek,omitempty"`
}

func (m *GreekRequest) Reset()                    { *m = GreekRequest{} }
func (m *GreekRequest) String() string            { return proto.CompactTextString(m) }
func (*GreekRequest) ProtoMessage()               {}
func (*GreekRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *GreekRequest) GetRequest() *PriceRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *GreekRequest) GetGreek() []string {
	if m != nil {
		return m.Greek
	}
	return nil
}

type GreekResponse struct {
	Greeks []*GreekResponse_Greek `protobuf:"bytes,1,rep,name=greeks" json:"greeks,omitempty"`
	Error  string                 `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
}

func (m *GreekResponse) Reset()                    { *m = GreekResponse{} }
func (m *GreekResponse) String() string            { return proto.CompactTextString(m) }
func (*GreekResponse) ProtoMessage()               {}
func (*GreekResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *GreekResponse) GetGreeks() []*GreekResponse_Greek {
	if m != nil {
		return m.Greeks
	}
	return nil
}

func (m *GreekResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type GreekResponse_Greek struct {
	Label string  `protobuf:"bytes,1,opt,name=label" json:"label,omitempty"`
	Value float64 `protobuf:"fixed64,2,opt,name=value" json:"value,omitempty"`
	Error string  `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
}

func (m *GreekResponse_Greek) Reset()                    { *m = GreekResponse_Greek{} }
func (m *GreekResponse_Greek) String() string            { return proto.CompactTextString(m) }
func (*GreekResponse_Greek) ProtoMessage()               {}
func (*GreekResponse_Greek) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4, 0} }

func (m *GreekResponse_Greek) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *GreekResponse_Greek) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *GreekResponse_Greek) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type ImpliedVolRequest struct {
	Pricingdate float32             `protobuf:"fixed32,1,opt,name=pricingdate" json:"pricingdate,omitempty"`
	Marketdata  *OptionMarket       `protobuf:"bytes,2,opt,name=marketdata" json:"marketdata,omitempty"`
	Quotes      []*OptionQuoteSlice `protobuf:"bytes,3,rep,name=quotes" json:"quotes,omitempty"`
}

func (m *ImpliedVolRequest) Reset()                    { *m = ImpliedVolRequest{} }
func (m *ImpliedVolRequest) String() string            { return proto.CompactTextString(m) }
func (*ImpliedVolRequest) ProtoMessage()               {}
func (*ImpliedVolRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *ImpliedVolRequest) GetPricingdate() float32 {
	if m != nil {
		return m.Pricingdate
	}
	return 0
}

func (m *ImpliedVolRequest) GetMarketdata() *OptionMarket {
	if m != nil {
		return m.Marketdata
	}
	return nil
}

func (m *ImpliedVolRequest) GetQuotes() []*OptionQuoteSlice {
	if m != nil {
		return m.Quotes
	}
	return nil
}

type ImpliedVolResponse struct {
	Volsurface *ImpliedVolSurface `protobuf:"bytes,1,opt,name=volsurface" json:"volsurface,omitempty"`
	Error      string             `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
}

func (m *ImpliedVolResponse) Reset()                    { *m = ImpliedVolResponse{} }
func (m *ImpliedVolResponse) String() string            { return proto.CompactTextString(m) }
func (*ImpliedVolResponse) ProtoMessage()               {}
func (*ImpliedVolResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *ImpliedVolResponse) GetVolsurface() *ImpliedVolSurface {
	if m != nil {
		return m.Volsurface
	}
	return nil
}

func (m *ImpliedVolResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func init() {
	proto.RegisterType((*Contract)(nil), "pb.Contract")
	proto.RegisterType((*PriceRequest)(nil), "pb.PriceRequest")
	proto.RegisterType((*PriceResponse)(nil), "pb.PriceResponse")
	proto.RegisterType((*GreekRequest)(nil), "pb.GreekRequest")
	proto.RegisterType((*GreekResponse)(nil), "pb.GreekResponse")
	proto.RegisterType((*GreekResponse_Greek)(nil), "pb.GreekResponse.Greek")
	proto.RegisterType((*ImpliedVolRequest)(nil), "pb.ImpliedVolRequest")
	proto.RegisterType((*ImpliedVolResponse)(nil), "pb.ImpliedVolResponse")
}

func init() { proto.RegisterFile("request.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 415 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x53, 0xc1, 0x8e, 0xd3, 0x30,
	0x14, 0x94, 0x13, 0x6d, 0x76, 0xf7, 0xa5, 0x5d, 0x2d, 0xd6, 0x02, 0xd1, 0x9e, 0xa2, 0x9c, 0x22,
	0x84, 0x0a, 0x0a, 0xe2, 0xc4, 0x91, 0x03, 0xda, 0x03, 0x62, 0x71, 0x11, 0x77, 0x27, 0x79, 0x54,
	0x51, 0xdd, 0xd8, 0x75, 0x9c, 0x8a, 0xfe, 0x03, 0x57, 0x3e, 0x80, 0x3f, 0x45, 0x76, 0x9c, 0x26,
	0x95, 0x40, 0x70, 0x9c, 0x37, 0x93, 0x79, 0x33, 0x7e, 0x0a, 0x2c, 0x35, 0xee, 0x7b, 0xec, 0xcc,
	0x4a, 0x69, 0x69, 0x24, 0x0d, 0x54, 0x79, 0x7f, 0xbb, 0xe3, 0x7a, 0x8b, 0xa6, 0xe6, 0x86, 0x0f,
	0xd3, 0xac, 0x86, 0xab, 0xf7, 0xb2, 0x35, 0x9a, 0x57, 0x86, 0x3e, 0x83, 0xa8, 0x33, 0xba, 0xd9,
	0x62, 0x42, 0x52, 0x92, 0x13, 0xe6, 0x91, 0x9d, 0xe3, 0x77, 0xd5, 0xe8, 0x63, 0x12, 0xa4, 0x24,
	0x0f, 0x98, 0x47, 0x34, 0x87, 0x4b, 0xd5, 0x9b, 0x8a, 0x0b, 0x91, 0x84, 0x29, 0xc9, 0x6f, 0x8a,
	0x9b, 0x95, 0x2a, 0x57, 0x9f, 0x94, 0x69, 0x64, 0xfb, 0xe5, 0xa8, 0x90, 0x8d, 0x74, 0xf6, 0x83,
	0xc0, 0xe2, 0x51, 0x37, 0x15, 0xb2, 0x21, 0x12, 0x4d, 0x21, 0x56, 0xba, 0xa9, 0x9a, 0x76, 0x53,
	0x73, 0x33, 0xec, 0x0b, 0xd8, 0x7c, 0x44, 0x73, 0xb8, 0xaa, 0x7c, 0x30, 0xb7, 0x36, 0x2e, 0x16,
	0xd6, 0x7d, 0x0c, 0xcb, 0x4e, 0x2c, 0x7d, 0x0d, 0x30, 0xd5, 0x72, 0x49, 0xe2, 0xe2, 0x76, 0x4a,
	0xf2, 0xd1, 0x71, 0x6c, 0xa6, 0xc9, 0xde, 0xc1, 0xd2, 0xa7, 0xe9, 0x94, 0x6c, 0x3b, 0xa4, 0x77,
	0x70, 0x61, 0x77, 0xa3, 0xdb, 0x44, 0xd8, 0x00, 0xec, 0x14, 0xb5, 0x96, 0xda, 0x79, 0x5e, 0xb3,
	0x01, 0x64, 0x8f, 0xb0, 0xf8, 0xa0, 0x11, 0xb7, 0x63, 0x95, 0x17, 0x70, 0xe9, 0x1f, 0xda, 0xd5,
	0xf0, 0xbb, 0xe7, 0x6d, 0xd9, 0x28, 0xb0, 0x8e, 0x1b, 0xfb, 0x6d, 0x12, 0xa4, 0xa1, 0x75, 0x74,
	0x20, 0xfb, 0x45, 0x60, 0xe9, 0x2d, 0x7d, 0x9e, 0x57, 0x10, 0x39, 0xaa, 0x4b, 0x48, 0x1a, 0xe6,
	0x71, 0xf1, 0xdc, 0x5a, 0x9e, 0x49, 0x3c, 0xf2, 0xb2, 0x29, 0x6a, 0x30, 0x8b, 0x7a, 0xff, 0x00,
	0x17, 0x4e, 0x66, 0x69, 0xc1, 0x4b, 0x14, 0x2e, 0xe1, 0x35, 0x1b, 0x80, 0x9d, 0x1e, 0xb8, 0xe8,
	0x4f, 0xad, 0x1d, 0xf8, 0x4b, 0xeb, 0x9f, 0x04, 0x9e, 0x3c, 0xec, 0x94, 0x68, 0xb0, 0xfe, 0x2a,
	0xc5, 0xff, 0x9f, 0xf1, 0xfc, 0x38, 0xc1, 0xbf, 0x8f, 0x43, 0x5f, 0x42, 0xb4, 0xef, 0xa5, 0xc1,
	0x2e, 0x09, 0x5d, 0xf7, 0xbb, 0x49, 0xfd, 0xd9, 0xce, 0xd7, 0xc2, 0xbe, 0xac, 0xd7, 0x64, 0x1c,
	0xe8, 0x3c, 0x96, 0x7f, 0xbf, 0xb7, 0x00, 0x07, 0x29, 0xba, 0x5e, 0x7f, 0xe3, 0x15, 0xfa, 0xb3,
	0x3c, 0xb5, 0x3e, 0x93, 0x76, 0x3d, 0x90, 0x6c, 0x26, 0xfc, 0xf3, 0x2b, 0x96, 0x91, 0xfb, 0x53,
	0xde, 0xfc, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x3f, 0x5f, 0xa4, 0x27, 0x50, 0x03, 0x00, 0x00,
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: stock.proto

package api_pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Stock struct {
	StockId              string   `protobuf:"bytes,1,opt,name=stock_id,json=stockId,proto3" json:"stock_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Stock) Reset()         { *m = Stock{} }
func (m *Stock) String() string { return proto.CompactTextString(m) }
func (*Stock) ProtoMessage()    {}
func (*Stock) Descriptor() ([]byte, []int) {
	return fileDescriptor_c87a7814fbd674bd, []int{0}
}

func (m *Stock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Stock.Unmarshal(m, b)
}
func (m *Stock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Stock.Marshal(b, m, deterministic)
}
func (m *Stock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stock.Merge(m, src)
}
func (m *Stock) XXX_Size() int {
	return xxx_messageInfo_Stock.Size(m)
}
func (m *Stock) XXX_DiscardUnknown() {
	xxx_messageInfo_Stock.DiscardUnknown(m)
}

var xxx_messageInfo_Stock proto.InternalMessageInfo

func (m *Stock) GetStockId() string {
	if m != nil {
		return m.StockId
	}
	return ""
}

type ListStocksRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListStocksRequest) Reset()         { *m = ListStocksRequest{} }
func (m *ListStocksRequest) String() string { return proto.CompactTextString(m) }
func (*ListStocksRequest) ProtoMessage()    {}
func (*ListStocksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c87a7814fbd674bd, []int{1}
}

func (m *ListStocksRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListStocksRequest.Unmarshal(m, b)
}
func (m *ListStocksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListStocksRequest.Marshal(b, m, deterministic)
}
func (m *ListStocksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListStocksRequest.Merge(m, src)
}
func (m *ListStocksRequest) XXX_Size() int {
	return xxx_messageInfo_ListStocksRequest.Size(m)
}
func (m *ListStocksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListStocksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListStocksRequest proto.InternalMessageInfo

type ListStocksResponse struct {
	Stocks               []*Stock `protobuf:"bytes,1,rep,name=stocks,proto3" json:"stocks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListStocksResponse) Reset()         { *m = ListStocksResponse{} }
func (m *ListStocksResponse) String() string { return proto.CompactTextString(m) }
func (*ListStocksResponse) ProtoMessage()    {}
func (*ListStocksResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c87a7814fbd674bd, []int{2}
}

func (m *ListStocksResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListStocksResponse.Unmarshal(m, b)
}
func (m *ListStocksResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListStocksResponse.Marshal(b, m, deterministic)
}
func (m *ListStocksResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListStocksResponse.Merge(m, src)
}
func (m *ListStocksResponse) XXX_Size() int {
	return xxx_messageInfo_ListStocksResponse.Size(m)
}
func (m *ListStocksResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListStocksResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListStocksResponse proto.InternalMessageInfo

func (m *ListStocksResponse) GetStocks() []*Stock {
	if m != nil {
		return m.Stocks
	}
	return nil
}

type GetStockRequest struct {
	StockId              string   `protobuf:"bytes,1,opt,name=stock_id,json=stockId,proto3" json:"stock_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetStockRequest) Reset()         { *m = GetStockRequest{} }
func (m *GetStockRequest) String() string { return proto.CompactTextString(m) }
func (*GetStockRequest) ProtoMessage()    {}
func (*GetStockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c87a7814fbd674bd, []int{3}
}

func (m *GetStockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetStockRequest.Unmarshal(m, b)
}
func (m *GetStockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetStockRequest.Marshal(b, m, deterministic)
}
func (m *GetStockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStockRequest.Merge(m, src)
}
func (m *GetStockRequest) XXX_Size() int {
	return xxx_messageInfo_GetStockRequest.Size(m)
}
func (m *GetStockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetStockRequest proto.InternalMessageInfo

func (m *GetStockRequest) GetStockId() string {
	if m != nil {
		return m.StockId
	}
	return ""
}

type CreateStockRequest struct {
	Stock                *Stock   `protobuf:"bytes,1,opt,name=stock,proto3" json:"stock,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateStockRequest) Reset()         { *m = CreateStockRequest{} }
func (m *CreateStockRequest) String() string { return proto.CompactTextString(m) }
func (*CreateStockRequest) ProtoMessage()    {}
func (*CreateStockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c87a7814fbd674bd, []int{4}
}

func (m *CreateStockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateStockRequest.Unmarshal(m, b)
}
func (m *CreateStockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateStockRequest.Marshal(b, m, deterministic)
}
func (m *CreateStockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateStockRequest.Merge(m, src)
}
func (m *CreateStockRequest) XXX_Size() int {
	return xxx_messageInfo_CreateStockRequest.Size(m)
}
func (m *CreateStockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateStockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateStockRequest proto.InternalMessageInfo

func (m *CreateStockRequest) GetStock() *Stock {
	if m != nil {
		return m.Stock
	}
	return nil
}

type UpdateStockRequest struct {
	Stock                *Stock   `protobuf:"bytes,1,opt,name=stock,proto3" json:"stock,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateStockRequest) Reset()         { *m = UpdateStockRequest{} }
func (m *UpdateStockRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateStockRequest) ProtoMessage()    {}
func (*UpdateStockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c87a7814fbd674bd, []int{5}
}

func (m *UpdateStockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateStockRequest.Unmarshal(m, b)
}
func (m *UpdateStockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateStockRequest.Marshal(b, m, deterministic)
}
func (m *UpdateStockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateStockRequest.Merge(m, src)
}
func (m *UpdateStockRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateStockRequest.Size(m)
}
func (m *UpdateStockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateStockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateStockRequest proto.InternalMessageInfo

func (m *UpdateStockRequest) GetStock() *Stock {
	if m != nil {
		return m.Stock
	}
	return nil
}

type DeleteStockRequest struct {
	StockId              string   `protobuf:"bytes,1,opt,name=stock_id,json=stockId,proto3" json:"stock_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteStockRequest) Reset()         { *m = DeleteStockRequest{} }
func (m *DeleteStockRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteStockRequest) ProtoMessage()    {}
func (*DeleteStockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c87a7814fbd674bd, []int{6}
}

func (m *DeleteStockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteStockRequest.Unmarshal(m, b)
}
func (m *DeleteStockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteStockRequest.Marshal(b, m, deterministic)
}
func (m *DeleteStockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteStockRequest.Merge(m, src)
}
func (m *DeleteStockRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteStockRequest.Size(m)
}
func (m *DeleteStockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteStockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteStockRequest proto.InternalMessageInfo

func (m *DeleteStockRequest) GetStockId() string {
	if m != nil {
		return m.StockId
	}
	return ""
}

func init() {
	proto.RegisterType((*Stock)(nil), "gooption_io.gooption.Stock")
	proto.RegisterType((*ListStocksRequest)(nil), "gooption_io.gooption.ListStocksRequest")
	proto.RegisterType((*ListStocksResponse)(nil), "gooption_io.gooption.ListStocksResponse")
	proto.RegisterType((*GetStockRequest)(nil), "gooption_io.gooption.GetStockRequest")
	proto.RegisterType((*CreateStockRequest)(nil), "gooption_io.gooption.CreateStockRequest")
	proto.RegisterType((*UpdateStockRequest)(nil), "gooption_io.gooption.UpdateStockRequest")
	proto.RegisterType((*DeleteStockRequest)(nil), "gooption_io.gooption.DeleteStockRequest")
}

func init() { proto.RegisterFile("stock.proto", fileDescriptor_c87a7814fbd674bd) }

var fileDescriptor_c87a7814fbd674bd = []byte{
	// 422 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0xcb, 0x8e, 0xd3, 0x30,
	0x14, 0x55, 0x81, 0x79, 0xdd, 0x20, 0x0d, 0x5c, 0x46, 0xa3, 0x92, 0x61, 0x51, 0x2c, 0xa1, 0x56,
	0x55, 0x71, 0x44, 0xbb, 0x83, 0x1d, 0x0f, 0x55, 0x95, 0x58, 0xb5, 0x62, 0xc3, 0xa6, 0x4a, 0x5a,
	0x13, 0x4c, 0xdb, 0xd8, 0xd4, 0x2e, 0x12, 0x42, 0xdd, 0xf0, 0x0b, 0xfc, 0x13, 0x3f, 0xc0, 0x2f,
	0xf0, 0x21, 0x28, 0x76, 0x5c, 0xd2, 0xe6, 0xd1, 0xcd, 0xec, 0x62, 0xfb, 0xdc, 0x73, 0x7c, 0xcf,
	0xf1, 0x0d, 0x78, 0x4a, 0x8b, 0xd9, 0x82, 0xca, 0xb5, 0xd0, 0x02, 0xaf, 0x62, 0x21, 0xa4, 0xe6,
	0x22, 0x99, 0x72, 0x41, 0xdd, 0xb7, 0xff, 0x24, 0x16, 0x22, 0x5e, 0xb2, 0x20, 0x94, 0x3c, 0x08,
	0x93, 0x44, 0xe8, 0x30, 0xdd, 0x56, 0xb6, 0xc6, 0xbf, 0xc9, 0x4e, 0xcd, 0x2a, 0xda, 0x7c, 0x0a,
	0xd8, 0x4a, 0xea, 0xef, 0xf6, 0x90, 0x10, 0x38, 0x99, 0xa4, 0xfc, 0xf8, 0x18, 0xce, 0x8d, 0xd0,
	0x94, 0xcf, 0x9b, 0x8d, 0x56, 0xa3, 0x73, 0x31, 0x3e, 0x33, 0xeb, 0xd1, 0x9c, 0x3c, 0x82, 0x87,
	0xef, 0xb9, 0xd2, 0x06, 0xa7, 0xc6, 0xec, 0xeb, 0x86, 0x29, 0x4d, 0x46, 0x80, 0xf9, 0x4d, 0x25,
	0x45, 0xa2, 0x18, 0x0e, 0xe0, 0xd4, 0x54, 0xa9, 0x66, 0xa3, 0x75, 0xb7, 0xe3, 0xf5, 0x6f, 0x68,
	0xd9, 0x85, 0xa9, 0xa9, 0x1a, 0x67, 0x50, 0xd2, 0x83, 0xcb, 0x21, 0xb3, 0x4c, 0x19, 0x7b, 0xdd,
	0x6d, 0x86, 0x80, 0x6f, 0xd6, 0x2c, 0xd4, 0x6c, 0xaf, 0xe0, 0x05, 0x9c, 0x18, 0x80, 0x41, 0x1f,
	0xd1, 0xb5, 0xc8, 0x94, 0xe8, 0x83, 0x9c, 0xdf, 0x02, 0x51, 0x00, 0xf8, 0x96, 0x2d, 0xd9, 0x01,
	0x51, 0x75, 0x0b, 0xfd, 0xdf, 0xf7, 0xe0, 0xbe, 0xc1, 0x4e, 0xd8, 0xfa, 0x1b, 0x9f, 0x31, 0x94,
	0x00, 0xff, 0xcd, 0xc4, 0x76, 0xb9, 0x66, 0x21, 0x03, 0xbf, 0x73, 0x1c, 0x68, 0x73, 0x21, 0x97,
	0x3f, 0xff, 0xfc, 0xfd, 0x75, 0xe7, 0x02, 0xcf, 0x02, 0xeb, 0x39, 0x7e, 0x81, 0x73, 0xe7, 0x39,
	0x3e, 0x2b, 0xa7, 0x39, 0xc8, 0xc4, 0xaf, 0xb3, 0x82, 0xf8, 0x46, 0xe0, 0x0a, 0x31, 0x13, 0x08,
	0x7e, 0xb8, 0xe6, 0xb7, 0xb8, 0x04, 0x2f, 0x97, 0x18, 0x56, 0xdc, 0xba, 0x18, 0x6a, 0xbd, 0xe2,
	0xb5, 0x51, 0x7c, 0x40, 0x5c, 0x4b, 0x2f, 0x6d, 0x1a, 0xb8, 0x05, 0x2f, 0x17, 0x6b, 0x95, 0x5a,
	0x31, 0xf9, 0x7a, 0xb5, 0xb6, 0x51, 0x7b, 0xda, 0x6f, 0xee, 0xf7, 0x47, 0x77, 0x5d, 0x3a, 0xf9,
	0x05, 0x78, 0xb9, 0xc7, 0x50, 0x25, 0x5f, 0x7c, 0x2f, 0xfe, 0x35, 0xb5, 0x73, 0x4a, 0xdd, 0x9c,
	0xd2, 0x77, 0xe9, 0x9c, 0x3a, 0x67, 0xbb, 0x25, 0xce, 0xbe, 0xee, 0x7d, 0xec, 0xc6, 0x5c, 0x7f,
	0xde, 0x44, 0x74, 0x26, 0x56, 0x81, 0x63, 0x7f, 0xce, 0xc5, 0xee, 0x3b, 0xfd, 0x27, 0xbc, 0x0a,
	0x25, 0x9f, 0xca, 0x28, 0x3a, 0x35, 0xcc, 0x83, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x13, 0xd0,
	0xe6, 0x6b, 0x52, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StockServiceClient is the client API for StockService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StockServiceClient interface {
	ListStocks(ctx context.Context, in *ListStocksRequest, opts ...grpc.CallOption) (*ListStocksResponse, error)
	GetStock(ctx context.Context, in *GetStockRequest, opts ...grpc.CallOption) (*Stock, error)
	CreateStock(ctx context.Context, in *CreateStockRequest, opts ...grpc.CallOption) (*Stock, error)
	UpdateStock(ctx context.Context, in *UpdateStockRequest, opts ...grpc.CallOption) (*Stock, error)
	DeleteStock(ctx context.Context, in *DeleteStockRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type stockServiceClient struct {
	cc *grpc.ClientConn
}

func NewStockServiceClient(cc *grpc.ClientConn) StockServiceClient {
	return &stockServiceClient{cc}
}

func (c *stockServiceClient) ListStocks(ctx context.Context, in *ListStocksRequest, opts ...grpc.CallOption) (*ListStocksResponse, error) {
	out := new(ListStocksResponse)
	err := c.cc.Invoke(ctx, "/gooption_io.gooption.StockService/ListStocks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stockServiceClient) GetStock(ctx context.Context, in *GetStockRequest, opts ...grpc.CallOption) (*Stock, error) {
	out := new(Stock)
	err := c.cc.Invoke(ctx, "/gooption_io.gooption.StockService/GetStock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stockServiceClient) CreateStock(ctx context.Context, in *CreateStockRequest, opts ...grpc.CallOption) (*Stock, error) {
	out := new(Stock)
	err := c.cc.Invoke(ctx, "/gooption_io.gooption.StockService/CreateStock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stockServiceClient) UpdateStock(ctx context.Context, in *UpdateStockRequest, opts ...grpc.CallOption) (*Stock, error) {
	out := new(Stock)
	err := c.cc.Invoke(ctx, "/gooption_io.gooption.StockService/UpdateStock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stockServiceClient) DeleteStock(ctx context.Context, in *DeleteStockRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/gooption_io.gooption.StockService/DeleteStock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StockServiceServer is the server API for StockService service.
type StockServiceServer interface {
	ListStocks(context.Context, *ListStocksRequest) (*ListStocksResponse, error)
	GetStock(context.Context, *GetStockRequest) (*Stock, error)
	CreateStock(context.Context, *CreateStockRequest) (*Stock, error)
	UpdateStock(context.Context, *UpdateStockRequest) (*Stock, error)
	DeleteStock(context.Context, *DeleteStockRequest) (*empty.Empty, error)
}

// UnimplementedStockServiceServer can be embedded to have forward compatible implementations.
type UnimplementedStockServiceServer struct {
}

func (*UnimplementedStockServiceServer) ListStocks(ctx context.Context, req *ListStocksRequest) (*ListStocksResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListStocks not implemented")
}
func (*UnimplementedStockServiceServer) GetStock(ctx context.Context, req *GetStockRequest) (*Stock, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStock not implemented")
}
func (*UnimplementedStockServiceServer) CreateStock(ctx context.Context, req *CreateStockRequest) (*Stock, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateStock not implemented")
}
func (*UnimplementedStockServiceServer) UpdateStock(ctx context.Context, req *UpdateStockRequest) (*Stock, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateStock not implemented")
}
func (*UnimplementedStockServiceServer) DeleteStock(ctx context.Context, req *DeleteStockRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteStock not implemented")
}

func RegisterStockServiceServer(s *grpc.Server, srv StockServiceServer) {
	s.RegisterService(&_StockService_serviceDesc, srv)
}

func _StockService_ListStocks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListStocksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StockServiceServer).ListStocks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gooption_io.gooption.StockService/ListStocks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StockServiceServer).ListStocks(ctx, req.(*ListStocksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StockService_GetStock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StockServiceServer).GetStock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gooption_io.gooption.StockService/GetStock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StockServiceServer).GetStock(ctx, req.(*GetStockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StockService_CreateStock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateStockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StockServiceServer).CreateStock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gooption_io.gooption.StockService/CreateStock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StockServiceServer).CreateStock(ctx, req.(*CreateStockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StockService_UpdateStock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateStockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StockServiceServer).UpdateStock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gooption_io.gooption.StockService/UpdateStock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StockServiceServer).UpdateStock(ctx, req.(*UpdateStockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StockService_DeleteStock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteStockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StockServiceServer).DeleteStock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gooption_io.gooption.StockService/DeleteStock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StockServiceServer).DeleteStock(ctx, req.(*DeleteStockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _StockService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gooption_io.gooption.StockService",
	HandlerType: (*StockServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListStocks",
			Handler:    _StockService_ListStocks_Handler,
		},
		{
			MethodName: "GetStock",
			Handler:    _StockService_GetStock_Handler,
		},
		{
			MethodName: "CreateStock",
			Handler:    _StockService_CreateStock_Handler,
		},
		{
			MethodName: "UpdateStock",
			Handler:    _StockService_UpdateStock_Handler,
		},
		{
			MethodName: "DeleteStock",
			Handler:    _StockService_DeleteStock_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "stock.proto",
}

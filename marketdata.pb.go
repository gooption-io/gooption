// Code generated by protoc-gen-go.
// source: marketdata.proto
// DO NOT EDIT!

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	marketdata.proto

It has these top-level messages:
	Spot
	RiskFreeRate
	FlatVol
	OptionQuoteSurface
	ImpliedVolMarket
	ImpliedVolSlice
	ImpliedVolSurface
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Spot struct {
	Timestamp float64 `protobuf:"fixed64,1,opt,name=timestamp" json:"timestamp,omitempty"`
	Value     float64 `protobuf:"fixed64,2,opt,name=value" json:"value,omitempty"`
	Ticker    string  `protobuf:"bytes,3,opt,name=ticker" json:"ticker,omitempty"`
}

func (m *Spot) Reset()                    { *m = Spot{} }
func (m *Spot) String() string            { return proto.CompactTextString(m) }
func (*Spot) ProtoMessage()               {}
func (*Spot) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Spot) GetTimestamp() float64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Spot) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Spot) GetTicker() string {
	if m != nil {
		return m.Ticker
	}
	return ""
}

type RiskFreeRate struct {
	Timestamp float64 `protobuf:"fixed64,1,opt,name=timestamp" json:"timestamp,omitempty"`
	Ticker    string  `protobuf:"bytes,2,opt,name=ticker" json:"ticker,omitempty"`
	Value     float64 `protobuf:"fixed64,3,opt,name=value" json:"value,omitempty"`
}

func (m *RiskFreeRate) Reset()                    { *m = RiskFreeRate{} }
func (m *RiskFreeRate) String() string            { return proto.CompactTextString(m) }
func (*RiskFreeRate) ProtoMessage()               {}
func (*RiskFreeRate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *RiskFreeRate) GetTimestamp() float64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *RiskFreeRate) GetTicker() string {
	if m != nil {
		return m.Ticker
	}
	return ""
}

func (m *RiskFreeRate) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type FlatVol struct {
	Timestamp float64 `protobuf:"fixed64,1,opt,name=timestamp" json:"timestamp,omitempty"`
	Ticker    string  `protobuf:"bytes,2,opt,name=ticker" json:"ticker,omitempty"`
	Value     float64 `protobuf:"fixed64,3,opt,name=value" json:"value,omitempty"`
}

func (m *FlatVol) Reset()                    { *m = FlatVol{} }
func (m *FlatVol) String() string            { return proto.CompactTextString(m) }
func (*FlatVol) ProtoMessage()               {}
func (*FlatVol) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *FlatVol) GetTimestamp() float64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *FlatVol) GetTicker() string {
	if m != nil {
		return m.Ticker
	}
	return ""
}

func (m *FlatVol) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type OptionQuoteSurface struct {
	Timestamp float64                           `protobuf:"fixed64,1,opt,name=timestamp" json:"timestamp,omitempty"`
	Expiry    float64                           `protobuf:"fixed64,2,opt,name=expiry" json:"expiry,omitempty"`
	Puts      []*OptionQuoteSurface_OptionQuote `protobuf:"bytes,3,rep,name=puts" json:"puts,omitempty"`
	Calls     []*OptionQuoteSurface_OptionQuote `protobuf:"bytes,4,rep,name=calls" json:"calls,omitempty"`
}

func (m *OptionQuoteSurface) Reset()                    { *m = OptionQuoteSurface{} }
func (m *OptionQuoteSurface) String() string            { return proto.CompactTextString(m) }
func (*OptionQuoteSurface) ProtoMessage()               {}
func (*OptionQuoteSurface) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *OptionQuoteSurface) GetTimestamp() float64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *OptionQuoteSurface) GetExpiry() float64 {
	if m != nil {
		return m.Expiry
	}
	return 0
}

func (m *OptionQuoteSurface) GetPuts() []*OptionQuoteSurface_OptionQuote {
	if m != nil {
		return m.Puts
	}
	return nil
}

func (m *OptionQuoteSurface) GetCalls() []*OptionQuoteSurface_OptionQuote {
	if m != nil {
		return m.Calls
	}
	return nil
}

type OptionQuoteSurface_OptionQuote struct {
	Strike       float64 `protobuf:"fixed64,8,opt,name=strike" json:"strike,omitempty"`
	Bid          float64 `protobuf:"fixed64,9,opt,name=bid" json:"bid,omitempty"`
	Ask          float64 `protobuf:"fixed64,10,opt,name=ask" json:"ask,omitempty"`
	Volume       int32   `protobuf:"varint,11,opt,name=volume" json:"volume,omitempty"`
	Openinterest int32   `protobuf:"varint,12,opt,name=openinterest" json:"openinterest,omitempty"`
}

func (m *OptionQuoteSurface_OptionQuote) Reset()         { *m = OptionQuoteSurface_OptionQuote{} }
func (m *OptionQuoteSurface_OptionQuote) String() string { return proto.CompactTextString(m) }
func (*OptionQuoteSurface_OptionQuote) ProtoMessage()    {}
func (*OptionQuoteSurface_OptionQuote) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{3, 0}
}

func (m *OptionQuoteSurface_OptionQuote) GetStrike() float64 {
	if m != nil {
		return m.Strike
	}
	return 0
}

func (m *OptionQuoteSurface_OptionQuote) GetBid() float64 {
	if m != nil {
		return m.Bid
	}
	return 0
}

func (m *OptionQuoteSurface_OptionQuote) GetAsk() float64 {
	if m != nil {
		return m.Ask
	}
	return 0
}

func (m *OptionQuoteSurface_OptionQuote) GetVolume() int32 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *OptionQuoteSurface_OptionQuote) GetOpeninterest() int32 {
	if m != nil {
		return m.Openinterest
	}
	return 0
}

type ImpliedVolMarket struct {
	Spot *Spot         `protobuf:"bytes,1,opt,name=spot" json:"spot,omitempty"`
	Rate *RiskFreeRate `protobuf:"bytes,2,opt,name=rate" json:"rate,omitempty"`
}

func (m *ImpliedVolMarket) Reset()                    { *m = ImpliedVolMarket{} }
func (m *ImpliedVolMarket) String() string            { return proto.CompactTextString(m) }
func (*ImpliedVolMarket) ProtoMessage()               {}
func (*ImpliedVolMarket) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ImpliedVolMarket) GetSpot() *Spot {
	if m != nil {
		return m.Spot
	}
	return nil
}

func (m *ImpliedVolMarket) GetRate() *RiskFreeRate {
	if m != nil {
		return m.Rate
	}
	return nil
}

type ImpliedVolSlice struct {
	Iserror bool      `protobuf:"varint,2,opt,name=iserror" json:"iserror,omitempty"`
	Expiry  float64   `protobuf:"fixed64,3,opt,name=expiry" json:"expiry,omitempty"`
	Errors  []string  `protobuf:"bytes,4,rep,name=errors" json:"errors,omitempty"`
	Strikes []float64 `protobuf:"fixed64,5,rep,packed,name=strikes" json:"strikes,omitempty"`
	Vols    []float64 `protobuf:"fixed64,6,rep,packed,name=vols" json:"vols,omitempty"`
}

func (m *ImpliedVolSlice) Reset()                    { *m = ImpliedVolSlice{} }
func (m *ImpliedVolSlice) String() string            { return proto.CompactTextString(m) }
func (*ImpliedVolSlice) ProtoMessage()               {}
func (*ImpliedVolSlice) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ImpliedVolSlice) GetIserror() bool {
	if m != nil {
		return m.Iserror
	}
	return false
}

func (m *ImpliedVolSlice) GetExpiry() float64 {
	if m != nil {
		return m.Expiry
	}
	return 0
}

func (m *ImpliedVolSlice) GetErrors() []string {
	if m != nil {
		return m.Errors
	}
	return nil
}

func (m *ImpliedVolSlice) GetStrikes() []float64 {
	if m != nil {
		return m.Strikes
	}
	return nil
}

func (m *ImpliedVolSlice) GetVols() []float64 {
	if m != nil {
		return m.Vols
	}
	return nil
}

type ImpliedVolSurface struct {
	Volsurface []*ImpliedVolSlice `protobuf:"bytes,1,rep,name=volsurface" json:"volsurface,omitempty"`
}

func (m *ImpliedVolSurface) Reset()                    { *m = ImpliedVolSurface{} }
func (m *ImpliedVolSurface) String() string            { return proto.CompactTextString(m) }
func (*ImpliedVolSurface) ProtoMessage()               {}
func (*ImpliedVolSurface) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ImpliedVolSurface) GetVolsurface() []*ImpliedVolSlice {
	if m != nil {
		return m.Volsurface
	}
	return nil
}

func init() {
	proto.RegisterType((*Spot)(nil), "pb.Spot")
	proto.RegisterType((*RiskFreeRate)(nil), "pb.RiskFreeRate")
	proto.RegisterType((*FlatVol)(nil), "pb.FlatVol")
	proto.RegisterType((*OptionQuoteSurface)(nil), "pb.OptionQuoteSurface")
	proto.RegisterType((*OptionQuoteSurface_OptionQuote)(nil), "pb.OptionQuoteSurface.OptionQuote")
	proto.RegisterType((*ImpliedVolMarket)(nil), "pb.ImpliedVolMarket")
	proto.RegisterType((*ImpliedVolSlice)(nil), "pb.ImpliedVolSlice")
	proto.RegisterType((*ImpliedVolSurface)(nil), "pb.ImpliedVolSurface")
}

func init() { proto.RegisterFile("marketdata.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 431 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x53, 0xc1, 0x8e, 0xd3, 0x30,
	0x10, 0x55, 0x9a, 0xb4, 0xdb, 0x4e, 0x2a, 0x51, 0x0c, 0x42, 0x16, 0xda, 0x43, 0x14, 0x71, 0xc8,
	0xa9, 0x87, 0xae, 0x84, 0xf8, 0x82, 0x15, 0x1c, 0x10, 0xc2, 0x15, 0x3d, 0x70, 0x73, 0xdb, 0x41,
	0xb2, 0xe2, 0xd4, 0x96, 0x3d, 0xa9, 0xe0, 0x03, 0x38, 0xf0, 0x5f, 0x7c, 0x18, 0xb2, 0x9d, 0x55,
	0xb3, 0x70, 0xa0, 0x87, 0xbd, 0xf9, 0xbd, 0x99, 0x79, 0x1e, 0xcf, 0x3c, 0xc3, 0xaa, 0x93, 0xae,
	0x45, 0x3a, 0x4a, 0x92, 0x6b, 0xeb, 0x0c, 0x19, 0x36, 0xb1, 0xfb, 0x5a, 0x40, 0xb1, 0xb5, 0x86,
	0xd8, 0x2d, 0x2c, 0x48, 0x75, 0xe8, 0x49, 0x76, 0x96, 0x67, 0x55, 0xd6, 0x64, 0xe2, 0x42, 0xb0,
	0x97, 0x30, 0x3d, 0x4b, 0xdd, 0x23, 0x9f, 0xc4, 0x48, 0x02, 0xec, 0x15, 0xcc, 0x48, 0x1d, 0x5a,
	0x74, 0x3c, 0xaf, 0xb2, 0x66, 0x21, 0x06, 0x54, 0x7f, 0x85, 0xa5, 0x50, 0xbe, 0xbd, 0x77, 0x88,
	0x42, 0x12, 0xfe, 0x47, 0xfb, 0xa2, 0x32, 0x19, 0xab, 0x5c, 0xee, 0xcc, 0x47, 0x77, 0xd6, 0x5f,
	0xe0, 0xe6, 0x5e, 0x4b, 0xda, 0x19, 0xfd, 0xa4, 0xb2, 0xbf, 0x27, 0xc0, 0x3e, 0x59, 0x52, 0xe6,
	0xf4, 0xb9, 0x37, 0x84, 0xdb, 0xde, 0x7d, 0x93, 0x87, 0x2b, 0x3a, 0xc7, 0xef, 0x56, 0xb9, 0x1f,
	0xc3, 0x58, 0x06, 0xc4, 0xde, 0x42, 0x61, 0x7b, 0xf2, 0x3c, 0xaf, 0xf2, 0xa6, 0xdc, 0xd4, 0x6b,
	0xbb, 0x5f, 0xff, 0xab, 0x3d, 0xa6, 0x44, 0xcc, 0x67, 0xef, 0x60, 0x7a, 0x90, 0x5a, 0x7b, 0x5e,
	0x5c, 0x5d, 0x98, 0x0a, 0x5e, 0xff, 0xcc, 0xa0, 0x1c, 0xd1, 0xa1, 0x33, 0x4f, 0x4e, 0xb5, 0xc8,
	0xe7, 0xa9, 0xb3, 0x84, 0xd8, 0x0a, 0xf2, 0xbd, 0x3a, 0xf2, 0x45, 0x24, 0xc3, 0x31, 0x30, 0xd2,
	0xb7, 0x1c, 0x12, 0x23, 0x7d, 0x1b, 0x6a, 0xcf, 0x46, 0xf7, 0x1d, 0xf2, 0xb2, 0xca, 0x9a, 0xa9,
	0x18, 0x10, 0xab, 0x61, 0x69, 0x2c, 0x9e, 0xd4, 0x89, 0xd0, 0xa1, 0x27, 0xbe, 0x8c, 0xd1, 0x47,
	0x5c, 0xbd, 0x83, 0xd5, 0x87, 0xce, 0x6a, 0x85, 0xc7, 0x9d, 0xd1, 0x1f, 0xa3, 0xdf, 0xd8, 0x2d,
	0x14, 0xde, 0x1a, 0x8a, 0xe3, 0x2b, 0x37, 0xf3, 0xf0, 0xa8, 0xe0, 0x38, 0x11, 0x59, 0xf6, 0x06,
	0x0a, 0x27, 0x29, 0x19, 0xab, 0xdc, 0xac, 0x42, 0x74, 0xec, 0x1d, 0x11, 0xa3, 0xf5, 0xaf, 0x0c,
	0x9e, 0x5d, 0x84, 0xb7, 0x5a, 0x1d, 0x90, 0x71, 0xb8, 0x51, 0x1e, 0x9d, 0x33, 0x69, 0xc3, 0x73,
	0xf1, 0x00, 0x47, 0x7b, 0xc9, 0x1f, 0xed, 0x25, 0xf0, 0x21, 0x21, 0x0d, 0x78, 0x21, 0x06, 0x14,
	0x94, 0xd2, 0x7c, 0x3c, 0x9f, 0x56, 0x79, 0x93, 0x89, 0x07, 0xc8, 0x18, 0x14, 0x67, 0xa3, 0x3d,
	0x9f, 0x45, 0x3a, 0x9e, 0xeb, 0xf7, 0xf0, 0x7c, 0xd4, 0xca, 0x60, 0x94, 0x3b, 0x80, 0x10, 0x4c,
	0x88, 0x67, 0x71, 0x7f, 0x2f, 0xc2, 0x63, 0xfe, 0xea, 0x5a, 0x8c, 0xd2, 0xf6, 0xb3, 0xf8, 0x0d,
	0xef, 0xfe, 0x04, 0x00, 0x00, 0xff, 0xff, 0x8b, 0x80, 0xcc, 0xc7, 0x9a, 0x03, 0x00, 0x00,
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service.proto

#include "service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_service_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_service_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_European;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_service_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GreekResponse_Greek;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_service_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Index;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_service_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_OptionQuote;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_service_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_FlatVol;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_service_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ImpliedVolQuote;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_service_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ImpliedVolSlice;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_service_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ImpliedVolSurface;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_service_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_OptionQuoteSlice;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_service_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_RiskFreeRate;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_service_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Spot;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_service_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_PriceRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_service_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_OptionMarket;
}  // namespace protobuf_service_2eproto
namespace gooption {
class EuropeanDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<European>
      _instance;
} _European_default_instance_;
class IndexDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Index>
      _instance;
} _Index_default_instance_;
class SpotDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Spot>
      _instance;
} _Spot_default_instance_;
class RiskFreeRateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RiskFreeRate>
      _instance;
} _RiskFreeRate_default_instance_;
class FlatVolDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FlatVol>
      _instance;
} _FlatVol_default_instance_;
class OptionQuoteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OptionQuote>
      _instance;
} _OptionQuote_default_instance_;
class OptionQuoteSliceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OptionQuoteSlice>
      _instance;
} _OptionQuoteSlice_default_instance_;
class OptionMarketDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OptionMarket>
      _instance;
} _OptionMarket_default_instance_;
class ImpliedVolQuoteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImpliedVolQuote>
      _instance;
} _ImpliedVolQuote_default_instance_;
class ImpliedVolSliceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImpliedVolSlice>
      _instance;
} _ImpliedVolSlice_default_instance_;
class ImpliedVolSurfaceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImpliedVolSurface>
      _instance;
} _ImpliedVolSurface_default_instance_;
class PriceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PriceRequest>
      _instance;
} _PriceRequest_default_instance_;
class PriceResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PriceResponse>
      _instance;
} _PriceResponse_default_instance_;
class GreekRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GreekRequest>
      _instance;
} _GreekRequest_default_instance_;
class GreekResponse_GreekDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GreekResponse_Greek>
      _instance;
} _GreekResponse_Greek_default_instance_;
class GreekResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GreekResponse>
      _instance;
} _GreekResponse_default_instance_;
class ImpliedVolRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImpliedVolRequest>
      _instance;
} _ImpliedVolRequest_default_instance_;
class ImpliedVolResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImpliedVolResponse>
      _instance;
} _ImpliedVolResponse_default_instance_;
}  // namespace gooption
namespace protobuf_service_2eproto {
static void InitDefaultsEuropean() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gooption::_European_default_instance_;
    new (ptr) ::gooption::European();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gooption::European::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_European =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEuropean}, {}};

static void InitDefaultsIndex() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gooption::_Index_default_instance_;
    new (ptr) ::gooption::Index();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gooption::Index::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Index =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIndex}, {}};

static void InitDefaultsSpot() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gooption::_Spot_default_instance_;
    new (ptr) ::gooption::Spot();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gooption::Spot::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Spot =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSpot}, {
      &protobuf_service_2eproto::scc_info_Index.base,}};

static void InitDefaultsRiskFreeRate() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gooption::_RiskFreeRate_default_instance_;
    new (ptr) ::gooption::RiskFreeRate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gooption::RiskFreeRate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RiskFreeRate =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRiskFreeRate}, {
      &protobuf_service_2eproto::scc_info_Index.base,}};

static void InitDefaultsFlatVol() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gooption::_FlatVol_default_instance_;
    new (ptr) ::gooption::FlatVol();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gooption::FlatVol::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_FlatVol =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsFlatVol}, {
      &protobuf_service_2eproto::scc_info_Index.base,}};

static void InitDefaultsOptionQuote() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gooption::_OptionQuote_default_instance_;
    new (ptr) ::gooption::OptionQuote();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gooption::OptionQuote::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OptionQuote =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOptionQuote}, {}};

static void InitDefaultsOptionQuoteSlice() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gooption::_OptionQuoteSlice_default_instance_;
    new (ptr) ::gooption::OptionQuoteSlice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gooption::OptionQuoteSlice::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_OptionQuoteSlice =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsOptionQuoteSlice}, {
      &protobuf_service_2eproto::scc_info_OptionQuote.base,}};

static void InitDefaultsOptionMarket() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gooption::_OptionMarket_default_instance_;
    new (ptr) ::gooption::OptionMarket();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gooption::OptionMarket::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_OptionMarket =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsOptionMarket}, {
      &protobuf_service_2eproto::scc_info_Spot.base,
      &protobuf_service_2eproto::scc_info_FlatVol.base,
      &protobuf_service_2eproto::scc_info_RiskFreeRate.base,}};

static void InitDefaultsImpliedVolQuote() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gooption::_ImpliedVolQuote_default_instance_;
    new (ptr) ::gooption::ImpliedVolQuote();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gooption::ImpliedVolQuote::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ImpliedVolQuote =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsImpliedVolQuote}, {
      &protobuf_service_2eproto::scc_info_OptionQuote.base,}};

static void InitDefaultsImpliedVolSlice() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gooption::_ImpliedVolSlice_default_instance_;
    new (ptr) ::gooption::ImpliedVolSlice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gooption::ImpliedVolSlice::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ImpliedVolSlice =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsImpliedVolSlice}, {
      &protobuf_service_2eproto::scc_info_ImpliedVolQuote.base,}};

static void InitDefaultsImpliedVolSurface() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gooption::_ImpliedVolSurface_default_instance_;
    new (ptr) ::gooption::ImpliedVolSurface();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gooption::ImpliedVolSurface::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ImpliedVolSurface =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsImpliedVolSurface}, {
      &protobuf_service_2eproto::scc_info_ImpliedVolSlice.base,}};

static void InitDefaultsPriceRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gooption::_PriceRequest_default_instance_;
    new (ptr) ::gooption::PriceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gooption::PriceRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_PriceRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsPriceRequest}, {
      &protobuf_service_2eproto::scc_info_European.base,
      &protobuf_service_2eproto::scc_info_OptionMarket.base,}};

static void InitDefaultsPriceResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gooption::_PriceResponse_default_instance_;
    new (ptr) ::gooption::PriceResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gooption::PriceResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PriceResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPriceResponse}, {}};

static void InitDefaultsGreekRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gooption::_GreekRequest_default_instance_;
    new (ptr) ::gooption::GreekRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gooption::GreekRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GreekRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGreekRequest}, {
      &protobuf_service_2eproto::scc_info_PriceRequest.base,}};

static void InitDefaultsGreekResponse_Greek() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gooption::_GreekResponse_Greek_default_instance_;
    new (ptr) ::gooption::GreekResponse_Greek();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gooption::GreekResponse_Greek::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GreekResponse_Greek =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGreekResponse_Greek}, {}};

static void InitDefaultsGreekResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gooption::_GreekResponse_default_instance_;
    new (ptr) ::gooption::GreekResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gooption::GreekResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GreekResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGreekResponse}, {
      &protobuf_service_2eproto::scc_info_GreekResponse_Greek.base,}};

static void InitDefaultsImpliedVolRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gooption::_ImpliedVolRequest_default_instance_;
    new (ptr) ::gooption::ImpliedVolRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gooption::ImpliedVolRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ImpliedVolRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsImpliedVolRequest}, {
      &protobuf_service_2eproto::scc_info_OptionMarket.base,
      &protobuf_service_2eproto::scc_info_OptionQuoteSlice.base,}};

static void InitDefaultsImpliedVolResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gooption::_ImpliedVolResponse_default_instance_;
    new (ptr) ::gooption::ImpliedVolResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gooption::ImpliedVolResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ImpliedVolResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsImpliedVolResponse}, {
      &protobuf_service_2eproto::scc_info_ImpliedVolSurface.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_European.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Index.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Spot.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RiskFreeRate.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FlatVol.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OptionQuote.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OptionQuoteSlice.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OptionMarket.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ImpliedVolQuote.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ImpliedVolSlice.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ImpliedVolSurface.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PriceRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PriceResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GreekRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GreekResponse_Greek.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GreekResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ImpliedVolRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ImpliedVolResponse.base);
}

::google::protobuf::Metadata file_level_metadata[18];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::European, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::European, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::European, ticker_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::European, undticker_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::European, strike_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::European, expiry_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::European, putcall_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::Index, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::Index, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::Index, ticker_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::Index, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::Spot, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::Spot, index_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::RiskFreeRate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::RiskFreeRate, index_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::FlatVol, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::FlatVol, index_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::OptionQuote, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::OptionQuote, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::OptionQuote, strike_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::OptionQuote, bid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::OptionQuote, ask_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::OptionQuote, volume_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::OptionQuote, openinterest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::OptionQuote, putcall_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::OptionQuoteSlice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::OptionQuoteSlice, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::OptionQuoteSlice, expiry_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::OptionQuoteSlice, puts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::OptionQuoteSlice, calls_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::OptionMarket, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::OptionMarket, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::OptionMarket, spot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::OptionMarket, vol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::OptionMarket, rate_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::ImpliedVolQuote, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::ImpliedVolQuote, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::ImpliedVolQuote, input_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::ImpliedVolQuote, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::ImpliedVolQuote, vol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::ImpliedVolQuote, nbiteration_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::ImpliedVolSlice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::ImpliedVolSlice, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::ImpliedVolSlice, iserror_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::ImpliedVolSlice, expiry_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::ImpliedVolSlice, quotes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::ImpliedVolSurface, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::ImpliedVolSurface, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::ImpliedVolSurface, slices_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::PriceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::PriceRequest, pricingdate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::PriceRequest, contract_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::PriceRequest, marketdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::PriceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::PriceResponse, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::PriceResponse, error_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::GreekRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::GreekRequest, request_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::GreekRequest, greek_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::GreekResponse_Greek, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::GreekResponse_Greek, label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::GreekResponse_Greek, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::GreekResponse_Greek, error_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::GreekResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::GreekResponse, greeks_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::GreekResponse, error_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::ImpliedVolRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::ImpliedVolRequest, pricingdate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::ImpliedVolRequest, marketdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::ImpliedVolRequest, quotes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::ImpliedVolResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::ImpliedVolResponse, volsurface_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gooption::ImpliedVolResponse, error_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::gooption::European)},
  { 11, -1, sizeof(::gooption::Index)},
  { 19, -1, sizeof(::gooption::Spot)},
  { 25, -1, sizeof(::gooption::RiskFreeRate)},
  { 31, -1, sizeof(::gooption::FlatVol)},
  { 37, -1, sizeof(::gooption::OptionQuote)},
  { 49, -1, sizeof(::gooption::OptionQuoteSlice)},
  { 58, -1, sizeof(::gooption::OptionMarket)},
  { 67, -1, sizeof(::gooption::ImpliedVolQuote)},
  { 77, -1, sizeof(::gooption::ImpliedVolSlice)},
  { 86, -1, sizeof(::gooption::ImpliedVolSurface)},
  { 93, -1, sizeof(::gooption::PriceRequest)},
  { 101, -1, sizeof(::gooption::PriceResponse)},
  { 108, -1, sizeof(::gooption::GreekRequest)},
  { 115, -1, sizeof(::gooption::GreekResponse_Greek)},
  { 123, -1, sizeof(::gooption::GreekResponse)},
  { 130, -1, sizeof(::gooption::ImpliedVolRequest)},
  { 138, -1, sizeof(::gooption::ImpliedVolResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::gooption::_European_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gooption::_Index_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gooption::_Spot_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gooption::_RiskFreeRate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gooption::_FlatVol_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gooption::_OptionQuote_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gooption::_OptionQuoteSlice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gooption::_OptionMarket_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gooption::_ImpliedVolQuote_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gooption::_ImpliedVolSlice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gooption::_ImpliedVolSurface_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gooption::_PriceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gooption::_PriceResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gooption::_GreekRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gooption::_GreekResponse_Greek_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gooption::_GreekResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gooption::_ImpliedVolRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gooption::_ImpliedVolResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "service.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 18);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rservice.proto\022\010gooption\"q\n\010European\022\021\n"
      "\ttimestamp\030\001 \001(\001\022\016\n\006ticker\030\002 \001(\t\022\021\n\tundt"
      "icker\030\003 \001(\t\022\016\n\006strike\030\004 \001(\001\022\016\n\006expiry\030\005 "
      "\001(\001\022\017\n\007putcall\030\006 \001(\t\"9\n\005Index\022\021\n\ttimesta"
      "mp\030\001 \001(\001\022\016\n\006ticker\030\002 \001(\t\022\r\n\005value\030\003 \001(\001\""
      "&\n\004Spot\022\036\n\005index\030\001 \001(\0132\017.gooption.Index\""
      ".\n\014RiskFreeRate\022\036\n\005index\030\001 \001(\0132\017.gooptio"
      "n.Index\")\n\007FlatVol\022\036\n\005index\030\001 \001(\0132\017.goop"
      "tion.Index\"\201\001\n\013OptionQuote\022\021\n\ttimestamp\030"
      "\001 \001(\001\022\016\n\006strike\030\010 \001(\001\022\013\n\003bid\030\t \001(\001\022\013\n\003as"
      "k\030\n \001(\001\022\016\n\006volume\030\013 \001(\001\022\024\n\014openinterest\030"
      "\014 \001(\001\022\017\n\007putcall\030\r \001(\t\"\200\001\n\020OptionQuoteSl"
      "ice\022\021\n\ttimestamp\030\001 \001(\001\022\016\n\006expiry\030\002 \001(\001\022#"
      "\n\004puts\030\003 \003(\0132\025.gooption.OptionQuote\022$\n\005c"
      "alls\030\004 \003(\0132\025.gooption.OptionQuote\"\205\001\n\014Op"
      "tionMarket\022\021\n\ttimestamp\030\001 \001(\001\022\034\n\004spot\030\002 "
      "\001(\0132\016.gooption.Spot\022\036\n\003vol\030\003 \001(\0132\021.goopt"
      "ion.FlatVol\022$\n\004rate\030\004 \001(\0132\026.gooption.Ris"
      "kFreeRate\"{\n\017ImpliedVolQuote\022\021\n\ttimestam"
      "p\030\001 \001(\001\022$\n\005input\030\002 \001(\0132\025.gooption.Option"
      "Quote\022\r\n\005error\030\003 \001(\t\022\013\n\003vol\030\004 \001(\001\022\023\n\013nbi"
      "teration\030\005 \001(\003\"p\n\017ImpliedVolSlice\022\021\n\ttim"
      "estamp\030\001 \001(\001\022\017\n\007iserror\030\002 \001(\010\022\016\n\006expiry\030"
      "\003 \001(\001\022)\n\006quotes\030\004 \003(\0132\031.gooption.Implied"
      "VolQuote\"Q\n\021ImpliedVolSurface\022\021\n\ttimesta"
      "mp\030\001 \001(\001\022)\n\006slices\030\002 \003(\0132\031.gooption.Impl"
      "iedVolSlice\"u\n\014PriceRequest\022\023\n\013pricingda"
      "te\030\001 \001(\001\022$\n\010contract\030\002 \001(\0132\022.gooption.Eu"
      "ropean\022*\n\nmarketdata\030\003 \001(\0132\026.gooption.Op"
      "tionMarket\"-\n\rPriceResponse\022\r\n\005price\030\002 \001"
      "(\001\022\r\n\005error\030\003 \001(\t\"F\n\014GreekRequest\022\'\n\007req"
      "uest\030\001 \001(\0132\026.gooption.PriceRequest\022\r\n\005gr"
      "eek\030\002 \003(\t\"\203\001\n\rGreekResponse\022-\n\006greeks\030\001 "
      "\003(\0132\035.gooption.GreekResponse.Greek\022\r\n\005er"
      "ror\030\002 \001(\t\0324\n\005Greek\022\r\n\005label\030\001 \001(\t\022\r\n\005val"
      "ue\030\002 \001(\001\022\r\n\005error\030\003 \001(\t\"\200\001\n\021ImpliedVolRe"
      "quest\022\023\n\013pricingdate\030\001 \001(\001\022*\n\nmarketdata"
      "\030\002 \001(\0132\026.gooption.OptionMarket\022*\n\006quotes"
      "\030\003 \003(\0132\032.gooption.OptionQuoteSlice\"T\n\022Im"
      "pliedVolResponse\022/\n\nvolsurface\030\001 \001(\0132\033.g"
      "ooption.ImpliedVolSurface\022\r\n\005error\030\002 \001(\t"
      "2\323\001\n\024EuropeanOptionPricer\0228\n\005Price\022\026.goo"
      "ption.PriceRequest\032\027.gooption.PriceRespo"
      "nse\0228\n\005Greek\022\026.gooption.GreekRequest\032\027.g"
      "ooption.GreekResponse\022G\n\nImpliedVol\022\033.go"
      "option.ImpliedVolRequest\032\034.gooption.Impl"
      "iedVolResponseb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1862);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "service.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_service_2eproto
namespace gooption {

// ===================================================================

void European::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int European::kTimestampFieldNumber;
const int European::kTickerFieldNumber;
const int European::kUndtickerFieldNumber;
const int European::kStrikeFieldNumber;
const int European::kExpiryFieldNumber;
const int European::kPutcallFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

European::European()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_European.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gooption.European)
}
European::European(const European& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ticker_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ticker().size() > 0) {
    ticker_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ticker_);
  }
  undticker_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.undticker().size() > 0) {
    undticker_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.undticker_);
  }
  putcall_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.putcall().size() > 0) {
    putcall_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.putcall_);
  }
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&expiry_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(expiry_));
  // @@protoc_insertion_point(copy_constructor:gooption.European)
}

void European::SharedCtor() {
  ticker_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  undticker_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  putcall_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expiry_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(expiry_));
}

European::~European() {
  // @@protoc_insertion_point(destructor:gooption.European)
  SharedDtor();
}

void European::SharedDtor() {
  ticker_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  undticker_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  putcall_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void European::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* European::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const European& European::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_European.base);
  return *internal_default_instance();
}


void European::Clear() {
// @@protoc_insertion_point(message_clear_start:gooption.European)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ticker_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  undticker_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  putcall_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expiry_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(expiry_));
  _internal_metadata_.Clear();
}

bool European::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gooption.European)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ticker = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ticker()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ticker().data(), static_cast<int>(this->ticker().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gooption.European.ticker"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string undticker = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_undticker()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->undticker().data(), static_cast<int>(this->undticker().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gooption.European.undticker"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double strike = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &strike_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double expiry = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &expiry_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string putcall = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_putcall()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->putcall().data(), static_cast<int>(this->putcall().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gooption.European.putcall"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gooption.European)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gooption.European)
  return false;
#undef DO_
}

void European::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gooption.European)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double timestamp = 1;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->timestamp(), output);
  }

  // string ticker = 2;
  if (this->ticker().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ticker().data(), static_cast<int>(this->ticker().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gooption.European.ticker");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->ticker(), output);
  }

  // string undticker = 3;
  if (this->undticker().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->undticker().data(), static_cast<int>(this->undticker().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gooption.European.undticker");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->undticker(), output);
  }

  // double strike = 4;
  if (this->strike() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->strike(), output);
  }

  // double expiry = 5;
  if (this->expiry() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->expiry(), output);
  }

  // string putcall = 6;
  if (this->putcall().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->putcall().data(), static_cast<int>(this->putcall().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gooption.European.putcall");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->putcall(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gooption.European)
}

::google::protobuf::uint8* European::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gooption.European)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double timestamp = 1;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->timestamp(), target);
  }

  // string ticker = 2;
  if (this->ticker().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ticker().data(), static_cast<int>(this->ticker().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gooption.European.ticker");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->ticker(), target);
  }

  // string undticker = 3;
  if (this->undticker().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->undticker().data(), static_cast<int>(this->undticker().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gooption.European.undticker");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->undticker(), target);
  }

  // double strike = 4;
  if (this->strike() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->strike(), target);
  }

  // double expiry = 5;
  if (this->expiry() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->expiry(), target);
  }

  // string putcall = 6;
  if (this->putcall().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->putcall().data(), static_cast<int>(this->putcall().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gooption.European.putcall");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->putcall(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gooption.European)
  return target;
}

size_t European::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gooption.European)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ticker = 2;
  if (this->ticker().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ticker());
  }

  // string undticker = 3;
  if (this->undticker().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->undticker());
  }

  // string putcall = 6;
  if (this->putcall().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->putcall());
  }

  // double timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 + 8;
  }

  // double strike = 4;
  if (this->strike() != 0) {
    total_size += 1 + 8;
  }

  // double expiry = 5;
  if (this->expiry() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void European::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gooption.European)
  GOOGLE_DCHECK_NE(&from, this);
  const European* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const European>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gooption.European)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gooption.European)
    MergeFrom(*source);
  }
}

void European::MergeFrom(const European& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gooption.European)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ticker().size() > 0) {

    ticker_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ticker_);
  }
  if (from.undticker().size() > 0) {

    undticker_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.undticker_);
  }
  if (from.putcall().size() > 0) {

    putcall_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.putcall_);
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.strike() != 0) {
    set_strike(from.strike());
  }
  if (from.expiry() != 0) {
    set_expiry(from.expiry());
  }
}

void European::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gooption.European)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void European::CopyFrom(const European& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gooption.European)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool European::IsInitialized() const {
  return true;
}

void European::Swap(European* other) {
  if (other == this) return;
  InternalSwap(other);
}
void European::InternalSwap(European* other) {
  using std::swap;
  ticker_.Swap(&other->ticker_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  undticker_.Swap(&other->undticker_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  putcall_.Swap(&other->putcall_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(timestamp_, other->timestamp_);
  swap(strike_, other->strike_);
  swap(expiry_, other->expiry_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata European::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Index::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Index::kTimestampFieldNumber;
const int Index::kTickerFieldNumber;
const int Index::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Index::Index()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_Index.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gooption.Index)
}
Index::Index(const Index& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ticker_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ticker().size() > 0) {
    ticker_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ticker_);
  }
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:gooption.Index)
}

void Index::SharedCtor() {
  ticker_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(value_));
}

Index::~Index() {
  // @@protoc_insertion_point(destructor:gooption.Index)
  SharedDtor();
}

void Index::SharedDtor() {
  ticker_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Index::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Index::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Index& Index::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_Index.base);
  return *internal_default_instance();
}


void Index::Clear() {
// @@protoc_insertion_point(message_clear_start:gooption.Index)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ticker_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(value_));
  _internal_metadata_.Clear();
}

bool Index::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gooption.Index)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ticker = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ticker()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ticker().data(), static_cast<int>(this->ticker().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gooption.Index.ticker"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gooption.Index)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gooption.Index)
  return false;
#undef DO_
}

void Index::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gooption.Index)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double timestamp = 1;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->timestamp(), output);
  }

  // string ticker = 2;
  if (this->ticker().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ticker().data(), static_cast<int>(this->ticker().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gooption.Index.ticker");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->ticker(), output);
  }

  // double value = 3;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gooption.Index)
}

::google::protobuf::uint8* Index::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gooption.Index)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double timestamp = 1;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->timestamp(), target);
  }

  // string ticker = 2;
  if (this->ticker().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ticker().data(), static_cast<int>(this->ticker().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gooption.Index.ticker");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->ticker(), target);
  }

  // double value = 3;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gooption.Index)
  return target;
}

size_t Index::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gooption.Index)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ticker = 2;
  if (this->ticker().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ticker());
  }

  // double timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 + 8;
  }

  // double value = 3;
  if (this->value() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Index::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gooption.Index)
  GOOGLE_DCHECK_NE(&from, this);
  const Index* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Index>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gooption.Index)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gooption.Index)
    MergeFrom(*source);
  }
}

void Index::MergeFrom(const Index& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gooption.Index)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ticker().size() > 0) {

    ticker_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ticker_);
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Index::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gooption.Index)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Index::CopyFrom(const Index& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gooption.Index)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Index::IsInitialized() const {
  return true;
}

void Index::Swap(Index* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Index::InternalSwap(Index* other) {
  using std::swap;
  ticker_.Swap(&other->ticker_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(timestamp_, other->timestamp_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Index::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Spot::InitAsDefaultInstance() {
  ::gooption::_Spot_default_instance_._instance.get_mutable()->index_ = const_cast< ::gooption::Index*>(
      ::gooption::Index::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Spot::kIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Spot::Spot()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_Spot.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gooption.Spot)
}
Spot::Spot(const Spot& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_index()) {
    index_ = new ::gooption::Index(*from.index_);
  } else {
    index_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:gooption.Spot)
}

void Spot::SharedCtor() {
  index_ = NULL;
}

Spot::~Spot() {
  // @@protoc_insertion_point(destructor:gooption.Spot)
  SharedDtor();
}

void Spot::SharedDtor() {
  if (this != internal_default_instance()) delete index_;
}

void Spot::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Spot::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Spot& Spot::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_Spot.base);
  return *internal_default_instance();
}


void Spot::Clear() {
// @@protoc_insertion_point(message_clear_start:gooption.Spot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && index_ != NULL) {
    delete index_;
  }
  index_ = NULL;
  _internal_metadata_.Clear();
}

bool Spot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gooption.Spot)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .gooption.Index index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_index()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gooption.Spot)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gooption.Spot)
  return false;
#undef DO_
}

void Spot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gooption.Spot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gooption.Index index = 1;
  if (this->has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_index(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gooption.Spot)
}

::google::protobuf::uint8* Spot::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gooption.Spot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gooption.Index index = 1;
  if (this->has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_index(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gooption.Spot)
  return target;
}

size_t Spot::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gooption.Spot)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .gooption.Index index = 1;
  if (this->has_index()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *index_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Spot::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gooption.Spot)
  GOOGLE_DCHECK_NE(&from, this);
  const Spot* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Spot>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gooption.Spot)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gooption.Spot)
    MergeFrom(*source);
  }
}

void Spot::MergeFrom(const Spot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gooption.Spot)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_index()) {
    mutable_index()->::gooption::Index::MergeFrom(from.index());
  }
}

void Spot::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gooption.Spot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Spot::CopyFrom(const Spot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gooption.Spot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Spot::IsInitialized() const {
  return true;
}

void Spot::Swap(Spot* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Spot::InternalSwap(Spot* other) {
  using std::swap;
  swap(index_, other->index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Spot::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RiskFreeRate::InitAsDefaultInstance() {
  ::gooption::_RiskFreeRate_default_instance_._instance.get_mutable()->index_ = const_cast< ::gooption::Index*>(
      ::gooption::Index::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RiskFreeRate::kIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RiskFreeRate::RiskFreeRate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_RiskFreeRate.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gooption.RiskFreeRate)
}
RiskFreeRate::RiskFreeRate(const RiskFreeRate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_index()) {
    index_ = new ::gooption::Index(*from.index_);
  } else {
    index_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:gooption.RiskFreeRate)
}

void RiskFreeRate::SharedCtor() {
  index_ = NULL;
}

RiskFreeRate::~RiskFreeRate() {
  // @@protoc_insertion_point(destructor:gooption.RiskFreeRate)
  SharedDtor();
}

void RiskFreeRate::SharedDtor() {
  if (this != internal_default_instance()) delete index_;
}

void RiskFreeRate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RiskFreeRate::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RiskFreeRate& RiskFreeRate::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_RiskFreeRate.base);
  return *internal_default_instance();
}


void RiskFreeRate::Clear() {
// @@protoc_insertion_point(message_clear_start:gooption.RiskFreeRate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && index_ != NULL) {
    delete index_;
  }
  index_ = NULL;
  _internal_metadata_.Clear();
}

bool RiskFreeRate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gooption.RiskFreeRate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .gooption.Index index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_index()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gooption.RiskFreeRate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gooption.RiskFreeRate)
  return false;
#undef DO_
}

void RiskFreeRate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gooption.RiskFreeRate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gooption.Index index = 1;
  if (this->has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_index(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gooption.RiskFreeRate)
}

::google::protobuf::uint8* RiskFreeRate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gooption.RiskFreeRate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gooption.Index index = 1;
  if (this->has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_index(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gooption.RiskFreeRate)
  return target;
}

size_t RiskFreeRate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gooption.RiskFreeRate)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .gooption.Index index = 1;
  if (this->has_index()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *index_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RiskFreeRate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gooption.RiskFreeRate)
  GOOGLE_DCHECK_NE(&from, this);
  const RiskFreeRate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RiskFreeRate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gooption.RiskFreeRate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gooption.RiskFreeRate)
    MergeFrom(*source);
  }
}

void RiskFreeRate::MergeFrom(const RiskFreeRate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gooption.RiskFreeRate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_index()) {
    mutable_index()->::gooption::Index::MergeFrom(from.index());
  }
}

void RiskFreeRate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gooption.RiskFreeRate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RiskFreeRate::CopyFrom(const RiskFreeRate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gooption.RiskFreeRate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RiskFreeRate::IsInitialized() const {
  return true;
}

void RiskFreeRate::Swap(RiskFreeRate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RiskFreeRate::InternalSwap(RiskFreeRate* other) {
  using std::swap;
  swap(index_, other->index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RiskFreeRate::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FlatVol::InitAsDefaultInstance() {
  ::gooption::_FlatVol_default_instance_._instance.get_mutable()->index_ = const_cast< ::gooption::Index*>(
      ::gooption::Index::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FlatVol::kIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FlatVol::FlatVol()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_FlatVol.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gooption.FlatVol)
}
FlatVol::FlatVol(const FlatVol& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_index()) {
    index_ = new ::gooption::Index(*from.index_);
  } else {
    index_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:gooption.FlatVol)
}

void FlatVol::SharedCtor() {
  index_ = NULL;
}

FlatVol::~FlatVol() {
  // @@protoc_insertion_point(destructor:gooption.FlatVol)
  SharedDtor();
}

void FlatVol::SharedDtor() {
  if (this != internal_default_instance()) delete index_;
}

void FlatVol::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FlatVol::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FlatVol& FlatVol::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_FlatVol.base);
  return *internal_default_instance();
}


void FlatVol::Clear() {
// @@protoc_insertion_point(message_clear_start:gooption.FlatVol)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && index_ != NULL) {
    delete index_;
  }
  index_ = NULL;
  _internal_metadata_.Clear();
}

bool FlatVol::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gooption.FlatVol)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .gooption.Index index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_index()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gooption.FlatVol)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gooption.FlatVol)
  return false;
#undef DO_
}

void FlatVol::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gooption.FlatVol)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gooption.Index index = 1;
  if (this->has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_index(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gooption.FlatVol)
}

::google::protobuf::uint8* FlatVol::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gooption.FlatVol)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gooption.Index index = 1;
  if (this->has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_index(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gooption.FlatVol)
  return target;
}

size_t FlatVol::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gooption.FlatVol)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .gooption.Index index = 1;
  if (this->has_index()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *index_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FlatVol::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gooption.FlatVol)
  GOOGLE_DCHECK_NE(&from, this);
  const FlatVol* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FlatVol>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gooption.FlatVol)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gooption.FlatVol)
    MergeFrom(*source);
  }
}

void FlatVol::MergeFrom(const FlatVol& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gooption.FlatVol)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_index()) {
    mutable_index()->::gooption::Index::MergeFrom(from.index());
  }
}

void FlatVol::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gooption.FlatVol)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FlatVol::CopyFrom(const FlatVol& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gooption.FlatVol)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FlatVol::IsInitialized() const {
  return true;
}

void FlatVol::Swap(FlatVol* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FlatVol::InternalSwap(FlatVol* other) {
  using std::swap;
  swap(index_, other->index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FlatVol::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OptionQuote::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OptionQuote::kTimestampFieldNumber;
const int OptionQuote::kStrikeFieldNumber;
const int OptionQuote::kBidFieldNumber;
const int OptionQuote::kAskFieldNumber;
const int OptionQuote::kVolumeFieldNumber;
const int OptionQuote::kOpeninterestFieldNumber;
const int OptionQuote::kPutcallFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OptionQuote::OptionQuote()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_OptionQuote.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gooption.OptionQuote)
}
OptionQuote::OptionQuote(const OptionQuote& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  putcall_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.putcall().size() > 0) {
    putcall_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.putcall_);
  }
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&openinterest_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(openinterest_));
  // @@protoc_insertion_point(copy_constructor:gooption.OptionQuote)
}

void OptionQuote::SharedCtor() {
  putcall_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&openinterest_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(openinterest_));
}

OptionQuote::~OptionQuote() {
  // @@protoc_insertion_point(destructor:gooption.OptionQuote)
  SharedDtor();
}

void OptionQuote::SharedDtor() {
  putcall_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OptionQuote::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OptionQuote::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OptionQuote& OptionQuote::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_OptionQuote.base);
  return *internal_default_instance();
}


void OptionQuote::Clear() {
// @@protoc_insertion_point(message_clear_start:gooption.OptionQuote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  putcall_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&openinterest_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(openinterest_));
  _internal_metadata_.Clear();
}

bool OptionQuote::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gooption.OptionQuote)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double strike = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &strike_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double bid = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &bid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double ask = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ask_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double volume = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 89 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &volume_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double openinterest = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(97u /* 97 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &openinterest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string putcall = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_putcall()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->putcall().data(), static_cast<int>(this->putcall().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gooption.OptionQuote.putcall"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gooption.OptionQuote)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gooption.OptionQuote)
  return false;
#undef DO_
}

void OptionQuote::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gooption.OptionQuote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double timestamp = 1;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->timestamp(), output);
  }

  // double strike = 8;
  if (this->strike() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->strike(), output);
  }

  // double bid = 9;
  if (this->bid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->bid(), output);
  }

  // double ask = 10;
  if (this->ask() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->ask(), output);
  }

  // double volume = 11;
  if (this->volume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->volume(), output);
  }

  // double openinterest = 12;
  if (this->openinterest() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->openinterest(), output);
  }

  // string putcall = 13;
  if (this->putcall().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->putcall().data(), static_cast<int>(this->putcall().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gooption.OptionQuote.putcall");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->putcall(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gooption.OptionQuote)
}

::google::protobuf::uint8* OptionQuote::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gooption.OptionQuote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double timestamp = 1;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->timestamp(), target);
  }

  // double strike = 8;
  if (this->strike() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->strike(), target);
  }

  // double bid = 9;
  if (this->bid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->bid(), target);
  }

  // double ask = 10;
  if (this->ask() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->ask(), target);
  }

  // double volume = 11;
  if (this->volume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->volume(), target);
  }

  // double openinterest = 12;
  if (this->openinterest() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->openinterest(), target);
  }

  // string putcall = 13;
  if (this->putcall().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->putcall().data(), static_cast<int>(this->putcall().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gooption.OptionQuote.putcall");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->putcall(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gooption.OptionQuote)
  return target;
}

size_t OptionQuote::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gooption.OptionQuote)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string putcall = 13;
  if (this->putcall().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->putcall());
  }

  // double timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 + 8;
  }

  // double strike = 8;
  if (this->strike() != 0) {
    total_size += 1 + 8;
  }

  // double bid = 9;
  if (this->bid() != 0) {
    total_size += 1 + 8;
  }

  // double ask = 10;
  if (this->ask() != 0) {
    total_size += 1 + 8;
  }

  // double volume = 11;
  if (this->volume() != 0) {
    total_size += 1 + 8;
  }

  // double openinterest = 12;
  if (this->openinterest() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OptionQuote::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gooption.OptionQuote)
  GOOGLE_DCHECK_NE(&from, this);
  const OptionQuote* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OptionQuote>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gooption.OptionQuote)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gooption.OptionQuote)
    MergeFrom(*source);
  }
}

void OptionQuote::MergeFrom(const OptionQuote& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gooption.OptionQuote)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.putcall().size() > 0) {

    putcall_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.putcall_);
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.strike() != 0) {
    set_strike(from.strike());
  }
  if (from.bid() != 0) {
    set_bid(from.bid());
  }
  if (from.ask() != 0) {
    set_ask(from.ask());
  }
  if (from.volume() != 0) {
    set_volume(from.volume());
  }
  if (from.openinterest() != 0) {
    set_openinterest(from.openinterest());
  }
}

void OptionQuote::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gooption.OptionQuote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OptionQuote::CopyFrom(const OptionQuote& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gooption.OptionQuote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OptionQuote::IsInitialized() const {
  return true;
}

void OptionQuote::Swap(OptionQuote* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OptionQuote::InternalSwap(OptionQuote* other) {
  using std::swap;
  putcall_.Swap(&other->putcall_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(timestamp_, other->timestamp_);
  swap(strike_, other->strike_);
  swap(bid_, other->bid_);
  swap(ask_, other->ask_);
  swap(volume_, other->volume_);
  swap(openinterest_, other->openinterest_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OptionQuote::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OptionQuoteSlice::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OptionQuoteSlice::kTimestampFieldNumber;
const int OptionQuoteSlice::kExpiryFieldNumber;
const int OptionQuoteSlice::kPutsFieldNumber;
const int OptionQuoteSlice::kCallsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OptionQuoteSlice::OptionQuoteSlice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_OptionQuoteSlice.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gooption.OptionQuoteSlice)
}
OptionQuoteSlice::OptionQuoteSlice(const OptionQuoteSlice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      puts_(from.puts_),
      calls_(from.calls_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&expiry_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(expiry_));
  // @@protoc_insertion_point(copy_constructor:gooption.OptionQuoteSlice)
}

void OptionQuoteSlice::SharedCtor() {
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expiry_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(expiry_));
}

OptionQuoteSlice::~OptionQuoteSlice() {
  // @@protoc_insertion_point(destructor:gooption.OptionQuoteSlice)
  SharedDtor();
}

void OptionQuoteSlice::SharedDtor() {
}

void OptionQuoteSlice::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OptionQuoteSlice::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OptionQuoteSlice& OptionQuoteSlice::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_OptionQuoteSlice.base);
  return *internal_default_instance();
}


void OptionQuoteSlice::Clear() {
// @@protoc_insertion_point(message_clear_start:gooption.OptionQuoteSlice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  puts_.Clear();
  calls_.Clear();
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expiry_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(expiry_));
  _internal_metadata_.Clear();
}

bool OptionQuoteSlice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gooption.OptionQuoteSlice)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double expiry = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &expiry_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .gooption.OptionQuote puts = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_puts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .gooption.OptionQuote calls = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_calls()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gooption.OptionQuoteSlice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gooption.OptionQuoteSlice)
  return false;
#undef DO_
}

void OptionQuoteSlice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gooption.OptionQuoteSlice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double timestamp = 1;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->timestamp(), output);
  }

  // double expiry = 2;
  if (this->expiry() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->expiry(), output);
  }

  // repeated .gooption.OptionQuote puts = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->puts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->puts(static_cast<int>(i)),
      output);
  }

  // repeated .gooption.OptionQuote calls = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->calls_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->calls(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gooption.OptionQuoteSlice)
}

::google::protobuf::uint8* OptionQuoteSlice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gooption.OptionQuoteSlice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double timestamp = 1;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->timestamp(), target);
  }

  // double expiry = 2;
  if (this->expiry() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->expiry(), target);
  }

  // repeated .gooption.OptionQuote puts = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->puts_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->puts(static_cast<int>(i)), deterministic, target);
  }

  // repeated .gooption.OptionQuote calls = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->calls_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->calls(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gooption.OptionQuoteSlice)
  return target;
}

size_t OptionQuoteSlice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gooption.OptionQuoteSlice)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .gooption.OptionQuote puts = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->puts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->puts(static_cast<int>(i)));
    }
  }

  // repeated .gooption.OptionQuote calls = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->calls_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->calls(static_cast<int>(i)));
    }
  }

  // double timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 + 8;
  }

  // double expiry = 2;
  if (this->expiry() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OptionQuoteSlice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gooption.OptionQuoteSlice)
  GOOGLE_DCHECK_NE(&from, this);
  const OptionQuoteSlice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OptionQuoteSlice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gooption.OptionQuoteSlice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gooption.OptionQuoteSlice)
    MergeFrom(*source);
  }
}

void OptionQuoteSlice::MergeFrom(const OptionQuoteSlice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gooption.OptionQuoteSlice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  puts_.MergeFrom(from.puts_);
  calls_.MergeFrom(from.calls_);
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.expiry() != 0) {
    set_expiry(from.expiry());
  }
}

void OptionQuoteSlice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gooption.OptionQuoteSlice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OptionQuoteSlice::CopyFrom(const OptionQuoteSlice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gooption.OptionQuoteSlice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OptionQuoteSlice::IsInitialized() const {
  return true;
}

void OptionQuoteSlice::Swap(OptionQuoteSlice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OptionQuoteSlice::InternalSwap(OptionQuoteSlice* other) {
  using std::swap;
  CastToBase(&puts_)->InternalSwap(CastToBase(&other->puts_));
  CastToBase(&calls_)->InternalSwap(CastToBase(&other->calls_));
  swap(timestamp_, other->timestamp_);
  swap(expiry_, other->expiry_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OptionQuoteSlice::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OptionMarket::InitAsDefaultInstance() {
  ::gooption::_OptionMarket_default_instance_._instance.get_mutable()->spot_ = const_cast< ::gooption::Spot*>(
      ::gooption::Spot::internal_default_instance());
  ::gooption::_OptionMarket_default_instance_._instance.get_mutable()->vol_ = const_cast< ::gooption::FlatVol*>(
      ::gooption::FlatVol::internal_default_instance());
  ::gooption::_OptionMarket_default_instance_._instance.get_mutable()->rate_ = const_cast< ::gooption::RiskFreeRate*>(
      ::gooption::RiskFreeRate::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OptionMarket::kTimestampFieldNumber;
const int OptionMarket::kSpotFieldNumber;
const int OptionMarket::kVolFieldNumber;
const int OptionMarket::kRateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OptionMarket::OptionMarket()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_OptionMarket.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gooption.OptionMarket)
}
OptionMarket::OptionMarket(const OptionMarket& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_spot()) {
    spot_ = new ::gooption::Spot(*from.spot_);
  } else {
    spot_ = NULL;
  }
  if (from.has_vol()) {
    vol_ = new ::gooption::FlatVol(*from.vol_);
  } else {
    vol_ = NULL;
  }
  if (from.has_rate()) {
    rate_ = new ::gooption::RiskFreeRate(*from.rate_);
  } else {
    rate_ = NULL;
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:gooption.OptionMarket)
}

void OptionMarket::SharedCtor() {
  ::memset(&spot_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&spot_)) + sizeof(timestamp_));
}

OptionMarket::~OptionMarket() {
  // @@protoc_insertion_point(destructor:gooption.OptionMarket)
  SharedDtor();
}

void OptionMarket::SharedDtor() {
  if (this != internal_default_instance()) delete spot_;
  if (this != internal_default_instance()) delete vol_;
  if (this != internal_default_instance()) delete rate_;
}

void OptionMarket::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OptionMarket::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OptionMarket& OptionMarket::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_OptionMarket.base);
  return *internal_default_instance();
}


void OptionMarket::Clear() {
// @@protoc_insertion_point(message_clear_start:gooption.OptionMarket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && spot_ != NULL) {
    delete spot_;
  }
  spot_ = NULL;
  if (GetArenaNoVirtual() == NULL && vol_ != NULL) {
    delete vol_;
  }
  vol_ = NULL;
  if (GetArenaNoVirtual() == NULL && rate_ != NULL) {
    delete rate_;
  }
  rate_ = NULL;
  timestamp_ = 0;
  _internal_metadata_.Clear();
}

bool OptionMarket::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gooption.OptionMarket)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gooption.Spot spot = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_spot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gooption.FlatVol vol = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vol()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gooption.RiskFreeRate rate = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gooption.OptionMarket)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gooption.OptionMarket)
  return false;
#undef DO_
}

void OptionMarket::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gooption.OptionMarket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double timestamp = 1;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->timestamp(), output);
  }

  // .gooption.Spot spot = 2;
  if (this->has_spot()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_spot(), output);
  }

  // .gooption.FlatVol vol = 3;
  if (this->has_vol()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_vol(), output);
  }

  // .gooption.RiskFreeRate rate = 4;
  if (this->has_rate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_rate(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gooption.OptionMarket)
}

::google::protobuf::uint8* OptionMarket::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gooption.OptionMarket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double timestamp = 1;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->timestamp(), target);
  }

  // .gooption.Spot spot = 2;
  if (this->has_spot()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_spot(), deterministic, target);
  }

  // .gooption.FlatVol vol = 3;
  if (this->has_vol()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_vol(), deterministic, target);
  }

  // .gooption.RiskFreeRate rate = 4;
  if (this->has_rate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_rate(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gooption.OptionMarket)
  return target;
}

size_t OptionMarket::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gooption.OptionMarket)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .gooption.Spot spot = 2;
  if (this->has_spot()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *spot_);
  }

  // .gooption.FlatVol vol = 3;
  if (this->has_vol()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *vol_);
  }

  // .gooption.RiskFreeRate rate = 4;
  if (this->has_rate()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *rate_);
  }

  // double timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OptionMarket::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gooption.OptionMarket)
  GOOGLE_DCHECK_NE(&from, this);
  const OptionMarket* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OptionMarket>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gooption.OptionMarket)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gooption.OptionMarket)
    MergeFrom(*source);
  }
}

void OptionMarket::MergeFrom(const OptionMarket& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gooption.OptionMarket)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_spot()) {
    mutable_spot()->::gooption::Spot::MergeFrom(from.spot());
  }
  if (from.has_vol()) {
    mutable_vol()->::gooption::FlatVol::MergeFrom(from.vol());
  }
  if (from.has_rate()) {
    mutable_rate()->::gooption::RiskFreeRate::MergeFrom(from.rate());
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void OptionMarket::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gooption.OptionMarket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OptionMarket::CopyFrom(const OptionMarket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gooption.OptionMarket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OptionMarket::IsInitialized() const {
  return true;
}

void OptionMarket::Swap(OptionMarket* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OptionMarket::InternalSwap(OptionMarket* other) {
  using std::swap;
  swap(spot_, other->spot_);
  swap(vol_, other->vol_);
  swap(rate_, other->rate_);
  swap(timestamp_, other->timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OptionMarket::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ImpliedVolQuote::InitAsDefaultInstance() {
  ::gooption::_ImpliedVolQuote_default_instance_._instance.get_mutable()->input_ = const_cast< ::gooption::OptionQuote*>(
      ::gooption::OptionQuote::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImpliedVolQuote::kTimestampFieldNumber;
const int ImpliedVolQuote::kInputFieldNumber;
const int ImpliedVolQuote::kErrorFieldNumber;
const int ImpliedVolQuote::kVolFieldNumber;
const int ImpliedVolQuote::kNbiterationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImpliedVolQuote::ImpliedVolQuote()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_ImpliedVolQuote.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gooption.ImpliedVolQuote)
}
ImpliedVolQuote::ImpliedVolQuote(const ImpliedVolQuote& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error().size() > 0) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.has_input()) {
    input_ = new ::gooption::OptionQuote(*from.input_);
  } else {
    input_ = NULL;
  }
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&nbiteration_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(nbiteration_));
  // @@protoc_insertion_point(copy_constructor:gooption.ImpliedVolQuote)
}

void ImpliedVolQuote::SharedCtor() {
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&input_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nbiteration_) -
      reinterpret_cast<char*>(&input_)) + sizeof(nbiteration_));
}

ImpliedVolQuote::~ImpliedVolQuote() {
  // @@protoc_insertion_point(destructor:gooption.ImpliedVolQuote)
  SharedDtor();
}

void ImpliedVolQuote::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete input_;
}

void ImpliedVolQuote::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ImpliedVolQuote::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImpliedVolQuote& ImpliedVolQuote::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_ImpliedVolQuote.base);
  return *internal_default_instance();
}


void ImpliedVolQuote::Clear() {
// @@protoc_insertion_point(message_clear_start:gooption.ImpliedVolQuote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && input_ != NULL) {
    delete input_;
  }
  input_ = NULL;
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nbiteration_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(nbiteration_));
  _internal_metadata_.Clear();
}

bool ImpliedVolQuote::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gooption.ImpliedVolQuote)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gooption.OptionQuote input = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_input()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gooption.ImpliedVolQuote.error"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double vol = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vol_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 nbiteration = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &nbiteration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gooption.ImpliedVolQuote)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gooption.ImpliedVolQuote)
  return false;
#undef DO_
}

void ImpliedVolQuote::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gooption.ImpliedVolQuote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double timestamp = 1;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->timestamp(), output);
  }

  // .gooption.OptionQuote input = 2;
  if (this->has_input()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_input(), output);
  }

  // string error = 3;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gooption.ImpliedVolQuote.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->error(), output);
  }

  // double vol = 4;
  if (this->vol() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->vol(), output);
  }

  // int64 nbiteration = 5;
  if (this->nbiteration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->nbiteration(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gooption.ImpliedVolQuote)
}

::google::protobuf::uint8* ImpliedVolQuote::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gooption.ImpliedVolQuote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double timestamp = 1;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->timestamp(), target);
  }

  // .gooption.OptionQuote input = 2;
  if (this->has_input()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_input(), deterministic, target);
  }

  // string error = 3;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gooption.ImpliedVolQuote.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->error(), target);
  }

  // double vol = 4;
  if (this->vol() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->vol(), target);
  }

  // int64 nbiteration = 5;
  if (this->nbiteration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->nbiteration(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gooption.ImpliedVolQuote)
  return target;
}

size_t ImpliedVolQuote::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gooption.ImpliedVolQuote)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string error = 3;
  if (this->error().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  // .gooption.OptionQuote input = 2;
  if (this->has_input()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *input_);
  }

  // double timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 + 8;
  }

  // double vol = 4;
  if (this->vol() != 0) {
    total_size += 1 + 8;
  }

  // int64 nbiteration = 5;
  if (this->nbiteration() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->nbiteration());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImpliedVolQuote::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gooption.ImpliedVolQuote)
  GOOGLE_DCHECK_NE(&from, this);
  const ImpliedVolQuote* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImpliedVolQuote>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gooption.ImpliedVolQuote)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gooption.ImpliedVolQuote)
    MergeFrom(*source);
  }
}

void ImpliedVolQuote::MergeFrom(const ImpliedVolQuote& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gooption.ImpliedVolQuote)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error().size() > 0) {

    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.has_input()) {
    mutable_input()->::gooption::OptionQuote::MergeFrom(from.input());
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.vol() != 0) {
    set_vol(from.vol());
  }
  if (from.nbiteration() != 0) {
    set_nbiteration(from.nbiteration());
  }
}

void ImpliedVolQuote::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gooption.ImpliedVolQuote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImpliedVolQuote::CopyFrom(const ImpliedVolQuote& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gooption.ImpliedVolQuote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImpliedVolQuote::IsInitialized() const {
  return true;
}

void ImpliedVolQuote::Swap(ImpliedVolQuote* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImpliedVolQuote::InternalSwap(ImpliedVolQuote* other) {
  using std::swap;
  error_.Swap(&other->error_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(input_, other->input_);
  swap(timestamp_, other->timestamp_);
  swap(vol_, other->vol_);
  swap(nbiteration_, other->nbiteration_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ImpliedVolQuote::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ImpliedVolSlice::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImpliedVolSlice::kTimestampFieldNumber;
const int ImpliedVolSlice::kIserrorFieldNumber;
const int ImpliedVolSlice::kExpiryFieldNumber;
const int ImpliedVolSlice::kQuotesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImpliedVolSlice::ImpliedVolSlice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_ImpliedVolSlice.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gooption.ImpliedVolSlice)
}
ImpliedVolSlice::ImpliedVolSlice(const ImpliedVolSlice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      quotes_(from.quotes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&iserror_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(iserror_));
  // @@protoc_insertion_point(copy_constructor:gooption.ImpliedVolSlice)
}

void ImpliedVolSlice::SharedCtor() {
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&iserror_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(iserror_));
}

ImpliedVolSlice::~ImpliedVolSlice() {
  // @@protoc_insertion_point(destructor:gooption.ImpliedVolSlice)
  SharedDtor();
}

void ImpliedVolSlice::SharedDtor() {
}

void ImpliedVolSlice::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ImpliedVolSlice::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImpliedVolSlice& ImpliedVolSlice::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_ImpliedVolSlice.base);
  return *internal_default_instance();
}


void ImpliedVolSlice::Clear() {
// @@protoc_insertion_point(message_clear_start:gooption.ImpliedVolSlice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  quotes_.Clear();
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&iserror_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(iserror_));
  _internal_metadata_.Clear();
}

bool ImpliedVolSlice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gooption.ImpliedVolSlice)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool iserror = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &iserror_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double expiry = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &expiry_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .gooption.ImpliedVolQuote quotes = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_quotes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gooption.ImpliedVolSlice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gooption.ImpliedVolSlice)
  return false;
#undef DO_
}

void ImpliedVolSlice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gooption.ImpliedVolSlice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double timestamp = 1;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->timestamp(), output);
  }

  // bool iserror = 2;
  if (this->iserror() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->iserror(), output);
  }

  // double expiry = 3;
  if (this->expiry() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->expiry(), output);
  }

  // repeated .gooption.ImpliedVolQuote quotes = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->quotes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->quotes(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gooption.ImpliedVolSlice)
}

::google::protobuf::uint8* ImpliedVolSlice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gooption.ImpliedVolSlice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double timestamp = 1;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->timestamp(), target);
  }

  // bool iserror = 2;
  if (this->iserror() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->iserror(), target);
  }

  // double expiry = 3;
  if (this->expiry() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->expiry(), target);
  }

  // repeated .gooption.ImpliedVolQuote quotes = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->quotes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->quotes(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gooption.ImpliedVolSlice)
  return target;
}

size_t ImpliedVolSlice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gooption.ImpliedVolSlice)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .gooption.ImpliedVolQuote quotes = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->quotes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->quotes(static_cast<int>(i)));
    }
  }

  // double timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 + 8;
  }

  // double expiry = 3;
  if (this->expiry() != 0) {
    total_size += 1 + 8;
  }

  // bool iserror = 2;
  if (this->iserror() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImpliedVolSlice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gooption.ImpliedVolSlice)
  GOOGLE_DCHECK_NE(&from, this);
  const ImpliedVolSlice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImpliedVolSlice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gooption.ImpliedVolSlice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gooption.ImpliedVolSlice)
    MergeFrom(*source);
  }
}

void ImpliedVolSlice::MergeFrom(const ImpliedVolSlice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gooption.ImpliedVolSlice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  quotes_.MergeFrom(from.quotes_);
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.expiry() != 0) {
    set_expiry(from.expiry());
  }
  if (from.iserror() != 0) {
    set_iserror(from.iserror());
  }
}

void ImpliedVolSlice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gooption.ImpliedVolSlice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImpliedVolSlice::CopyFrom(const ImpliedVolSlice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gooption.ImpliedVolSlice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImpliedVolSlice::IsInitialized() const {
  return true;
}

void ImpliedVolSlice::Swap(ImpliedVolSlice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImpliedVolSlice::InternalSwap(ImpliedVolSlice* other) {
  using std::swap;
  CastToBase(&quotes_)->InternalSwap(CastToBase(&other->quotes_));
  swap(timestamp_, other->timestamp_);
  swap(expiry_, other->expiry_);
  swap(iserror_, other->iserror_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ImpliedVolSlice::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ImpliedVolSurface::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImpliedVolSurface::kTimestampFieldNumber;
const int ImpliedVolSurface::kSlicesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImpliedVolSurface::ImpliedVolSurface()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_ImpliedVolSurface.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gooption.ImpliedVolSurface)
}
ImpliedVolSurface::ImpliedVolSurface(const ImpliedVolSurface& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      slices_(from.slices_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:gooption.ImpliedVolSurface)
}

void ImpliedVolSurface::SharedCtor() {
  timestamp_ = 0;
}

ImpliedVolSurface::~ImpliedVolSurface() {
  // @@protoc_insertion_point(destructor:gooption.ImpliedVolSurface)
  SharedDtor();
}

void ImpliedVolSurface::SharedDtor() {
}

void ImpliedVolSurface::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ImpliedVolSurface::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImpliedVolSurface& ImpliedVolSurface::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_ImpliedVolSurface.base);
  return *internal_default_instance();
}


void ImpliedVolSurface::Clear() {
// @@protoc_insertion_point(message_clear_start:gooption.ImpliedVolSurface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  slices_.Clear();
  timestamp_ = 0;
  _internal_metadata_.Clear();
}

bool ImpliedVolSurface::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gooption.ImpliedVolSurface)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .gooption.ImpliedVolSlice slices = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_slices()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gooption.ImpliedVolSurface)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gooption.ImpliedVolSurface)
  return false;
#undef DO_
}

void ImpliedVolSurface::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gooption.ImpliedVolSurface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double timestamp = 1;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->timestamp(), output);
  }

  // repeated .gooption.ImpliedVolSlice slices = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->slices_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->slices(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gooption.ImpliedVolSurface)
}

::google::protobuf::uint8* ImpliedVolSurface::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gooption.ImpliedVolSurface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double timestamp = 1;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->timestamp(), target);
  }

  // repeated .gooption.ImpliedVolSlice slices = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->slices_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->slices(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gooption.ImpliedVolSurface)
  return target;
}

size_t ImpliedVolSurface::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gooption.ImpliedVolSurface)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .gooption.ImpliedVolSlice slices = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->slices_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->slices(static_cast<int>(i)));
    }
  }

  // double timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImpliedVolSurface::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gooption.ImpliedVolSurface)
  GOOGLE_DCHECK_NE(&from, this);
  const ImpliedVolSurface* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImpliedVolSurface>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gooption.ImpliedVolSurface)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gooption.ImpliedVolSurface)
    MergeFrom(*source);
  }
}

void ImpliedVolSurface::MergeFrom(const ImpliedVolSurface& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gooption.ImpliedVolSurface)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  slices_.MergeFrom(from.slices_);
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void ImpliedVolSurface::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gooption.ImpliedVolSurface)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImpliedVolSurface::CopyFrom(const ImpliedVolSurface& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gooption.ImpliedVolSurface)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImpliedVolSurface::IsInitialized() const {
  return true;
}

void ImpliedVolSurface::Swap(ImpliedVolSurface* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImpliedVolSurface::InternalSwap(ImpliedVolSurface* other) {
  using std::swap;
  CastToBase(&slices_)->InternalSwap(CastToBase(&other->slices_));
  swap(timestamp_, other->timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ImpliedVolSurface::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PriceRequest::InitAsDefaultInstance() {
  ::gooption::_PriceRequest_default_instance_._instance.get_mutable()->contract_ = const_cast< ::gooption::European*>(
      ::gooption::European::internal_default_instance());
  ::gooption::_PriceRequest_default_instance_._instance.get_mutable()->marketdata_ = const_cast< ::gooption::OptionMarket*>(
      ::gooption::OptionMarket::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PriceRequest::kPricingdateFieldNumber;
const int PriceRequest::kContractFieldNumber;
const int PriceRequest::kMarketdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PriceRequest::PriceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_PriceRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gooption.PriceRequest)
}
PriceRequest::PriceRequest(const PriceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_contract()) {
    contract_ = new ::gooption::European(*from.contract_);
  } else {
    contract_ = NULL;
  }
  if (from.has_marketdata()) {
    marketdata_ = new ::gooption::OptionMarket(*from.marketdata_);
  } else {
    marketdata_ = NULL;
  }
  pricingdate_ = from.pricingdate_;
  // @@protoc_insertion_point(copy_constructor:gooption.PriceRequest)
}

void PriceRequest::SharedCtor() {
  ::memset(&contract_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pricingdate_) -
      reinterpret_cast<char*>(&contract_)) + sizeof(pricingdate_));
}

PriceRequest::~PriceRequest() {
  // @@protoc_insertion_point(destructor:gooption.PriceRequest)
  SharedDtor();
}

void PriceRequest::SharedDtor() {
  if (this != internal_default_instance()) delete contract_;
  if (this != internal_default_instance()) delete marketdata_;
}

void PriceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PriceRequest::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PriceRequest& PriceRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_PriceRequest.base);
  return *internal_default_instance();
}


void PriceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gooption.PriceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && contract_ != NULL) {
    delete contract_;
  }
  contract_ = NULL;
  if (GetArenaNoVirtual() == NULL && marketdata_ != NULL) {
    delete marketdata_;
  }
  marketdata_ = NULL;
  pricingdate_ = 0;
  _internal_metadata_.Clear();
}

bool PriceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gooption.PriceRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double pricingdate = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pricingdate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gooption.European contract = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_contract()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gooption.OptionMarket marketdata = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_marketdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gooption.PriceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gooption.PriceRequest)
  return false;
#undef DO_
}

void PriceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gooption.PriceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double pricingdate = 1;
  if (this->pricingdate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->pricingdate(), output);
  }

  // .gooption.European contract = 2;
  if (this->has_contract()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_contract(), output);
  }

  // .gooption.OptionMarket marketdata = 3;
  if (this->has_marketdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_marketdata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gooption.PriceRequest)
}

::google::protobuf::uint8* PriceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gooption.PriceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double pricingdate = 1;
  if (this->pricingdate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->pricingdate(), target);
  }

  // .gooption.European contract = 2;
  if (this->has_contract()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_contract(), deterministic, target);
  }

  // .gooption.OptionMarket marketdata = 3;
  if (this->has_marketdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_marketdata(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gooption.PriceRequest)
  return target;
}

size_t PriceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gooption.PriceRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .gooption.European contract = 2;
  if (this->has_contract()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *contract_);
  }

  // .gooption.OptionMarket marketdata = 3;
  if (this->has_marketdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *marketdata_);
  }

  // double pricingdate = 1;
  if (this->pricingdate() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PriceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gooption.PriceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PriceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PriceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gooption.PriceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gooption.PriceRequest)
    MergeFrom(*source);
  }
}

void PriceRequest::MergeFrom(const PriceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gooption.PriceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_contract()) {
    mutable_contract()->::gooption::European::MergeFrom(from.contract());
  }
  if (from.has_marketdata()) {
    mutable_marketdata()->::gooption::OptionMarket::MergeFrom(from.marketdata());
  }
  if (from.pricingdate() != 0) {
    set_pricingdate(from.pricingdate());
  }
}

void PriceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gooption.PriceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PriceRequest::CopyFrom(const PriceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gooption.PriceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PriceRequest::IsInitialized() const {
  return true;
}

void PriceRequest::Swap(PriceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PriceRequest::InternalSwap(PriceRequest* other) {
  using std::swap;
  swap(contract_, other->contract_);
  swap(marketdata_, other->marketdata_);
  swap(pricingdate_, other->pricingdate_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PriceRequest::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PriceResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PriceResponse::kPriceFieldNumber;
const int PriceResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PriceResponse::PriceResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_PriceResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gooption.PriceResponse)
}
PriceResponse::PriceResponse(const PriceResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error().size() > 0) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  price_ = from.price_;
  // @@protoc_insertion_point(copy_constructor:gooption.PriceResponse)
}

void PriceResponse::SharedCtor() {
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  price_ = 0;
}

PriceResponse::~PriceResponse() {
  // @@protoc_insertion_point(destructor:gooption.PriceResponse)
  SharedDtor();
}

void PriceResponse::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PriceResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PriceResponse::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PriceResponse& PriceResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_PriceResponse.base);
  return *internal_default_instance();
}


void PriceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gooption.PriceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  price_ = 0;
  _internal_metadata_.Clear();
}

bool PriceResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gooption.PriceResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double price = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gooption.PriceResponse.error"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gooption.PriceResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gooption.PriceResponse)
  return false;
#undef DO_
}

void PriceResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gooption.PriceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double price = 2;
  if (this->price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->price(), output);
  }

  // string error = 3;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gooption.PriceResponse.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->error(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gooption.PriceResponse)
}

::google::protobuf::uint8* PriceResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gooption.PriceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double price = 2;
  if (this->price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->price(), target);
  }

  // string error = 3;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gooption.PriceResponse.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->error(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gooption.PriceResponse)
  return target;
}

size_t PriceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gooption.PriceResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string error = 3;
  if (this->error().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  // double price = 2;
  if (this->price() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PriceResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gooption.PriceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PriceResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PriceResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gooption.PriceResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gooption.PriceResponse)
    MergeFrom(*source);
  }
}

void PriceResponse::MergeFrom(const PriceResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gooption.PriceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error().size() > 0) {

    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.price() != 0) {
    set_price(from.price());
  }
}

void PriceResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gooption.PriceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PriceResponse::CopyFrom(const PriceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gooption.PriceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PriceResponse::IsInitialized() const {
  return true;
}

void PriceResponse::Swap(PriceResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PriceResponse::InternalSwap(PriceResponse* other) {
  using std::swap;
  error_.Swap(&other->error_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(price_, other->price_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PriceResponse::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GreekRequest::InitAsDefaultInstance() {
  ::gooption::_GreekRequest_default_instance_._instance.get_mutable()->request_ = const_cast< ::gooption::PriceRequest*>(
      ::gooption::PriceRequest::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GreekRequest::kRequestFieldNumber;
const int GreekRequest::kGreekFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GreekRequest::GreekRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_GreekRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gooption.GreekRequest)
}
GreekRequest::GreekRequest(const GreekRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      greek_(from.greek_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_request()) {
    request_ = new ::gooption::PriceRequest(*from.request_);
  } else {
    request_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:gooption.GreekRequest)
}

void GreekRequest::SharedCtor() {
  request_ = NULL;
}

GreekRequest::~GreekRequest() {
  // @@protoc_insertion_point(destructor:gooption.GreekRequest)
  SharedDtor();
}

void GreekRequest::SharedDtor() {
  if (this != internal_default_instance()) delete request_;
}

void GreekRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GreekRequest::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GreekRequest& GreekRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_GreekRequest.base);
  return *internal_default_instance();
}


void GreekRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gooption.GreekRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  greek_.Clear();
  if (GetArenaNoVirtual() == NULL && request_ != NULL) {
    delete request_;
  }
  request_ = NULL;
  _internal_metadata_.Clear();
}

bool GreekRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gooption.GreekRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .gooption.PriceRequest request = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string greek = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_greek()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->greek(this->greek_size() - 1).data(),
            static_cast<int>(this->greek(this->greek_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gooption.GreekRequest.greek"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gooption.GreekRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gooption.GreekRequest)
  return false;
#undef DO_
}

void GreekRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gooption.GreekRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gooption.PriceRequest request = 1;
  if (this->has_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_request(), output);
  }

  // repeated string greek = 2;
  for (int i = 0, n = this->greek_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->greek(i).data(), static_cast<int>(this->greek(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gooption.GreekRequest.greek");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->greek(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gooption.GreekRequest)
}

::google::protobuf::uint8* GreekRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gooption.GreekRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gooption.PriceRequest request = 1;
  if (this->has_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_request(), deterministic, target);
  }

  // repeated string greek = 2;
  for (int i = 0, n = this->greek_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->greek(i).data(), static_cast<int>(this->greek(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gooption.GreekRequest.greek");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->greek(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gooption.GreekRequest)
  return target;
}

size_t GreekRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gooption.GreekRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string greek = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->greek_size());
  for (int i = 0, n = this->greek_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->greek(i));
  }

  // .gooption.PriceRequest request = 1;
  if (this->has_request()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *request_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GreekRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gooption.GreekRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GreekRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GreekRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gooption.GreekRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gooption.GreekRequest)
    MergeFrom(*source);
  }
}

void GreekRequest::MergeFrom(const GreekRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gooption.GreekRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  greek_.MergeFrom(from.greek_);
  if (from.has_request()) {
    mutable_request()->::gooption::PriceRequest::MergeFrom(from.request());
  }
}

void GreekRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gooption.GreekRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GreekRequest::CopyFrom(const GreekRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gooption.GreekRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GreekRequest::IsInitialized() const {
  return true;
}

void GreekRequest::Swap(GreekRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GreekRequest::InternalSwap(GreekRequest* other) {
  using std::swap;
  greek_.InternalSwap(CastToBase(&other->greek_));
  swap(request_, other->request_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GreekRequest::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GreekResponse_Greek::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GreekResponse_Greek::kLabelFieldNumber;
const int GreekResponse_Greek::kValueFieldNumber;
const int GreekResponse_Greek::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GreekResponse_Greek::GreekResponse_Greek()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_GreekResponse_Greek.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gooption.GreekResponse.Greek)
}
GreekResponse_Greek::GreekResponse_Greek(const GreekResponse_Greek& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.label().size() > 0) {
    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error().size() > 0) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:gooption.GreekResponse.Greek)
}

void GreekResponse_Greek::SharedCtor() {
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = 0;
}

GreekResponse_Greek::~GreekResponse_Greek() {
  // @@protoc_insertion_point(destructor:gooption.GreekResponse.Greek)
  SharedDtor();
}

void GreekResponse_Greek::SharedDtor() {
  label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GreekResponse_Greek::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GreekResponse_Greek::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GreekResponse_Greek& GreekResponse_Greek::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_GreekResponse_Greek.base);
  return *internal_default_instance();
}


void GreekResponse_Greek::Clear() {
// @@protoc_insertion_point(message_clear_start:gooption.GreekResponse.Greek)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = 0;
  _internal_metadata_.Clear();
}

bool GreekResponse_Greek::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gooption.GreekResponse.Greek)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string label = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->label().data(), static_cast<int>(this->label().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gooption.GreekResponse.Greek.label"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gooption.GreekResponse.Greek.error"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gooption.GreekResponse.Greek)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gooption.GreekResponse.Greek)
  return false;
#undef DO_
}

void GreekResponse_Greek::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gooption.GreekResponse.Greek)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string label = 1;
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gooption.GreekResponse.Greek.label");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->label(), output);
  }

  // double value = 2;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->value(), output);
  }

  // string error = 3;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gooption.GreekResponse.Greek.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->error(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gooption.GreekResponse.Greek)
}

::google::protobuf::uint8* GreekResponse_Greek::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gooption.GreekResponse.Greek)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string label = 1;
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gooption.GreekResponse.Greek.label");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->label(), target);
  }

  // double value = 2;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->value(), target);
  }

  // string error = 3;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gooption.GreekResponse.Greek.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->error(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gooption.GreekResponse.Greek)
  return target;
}

size_t GreekResponse_Greek::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gooption.GreekResponse.Greek)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string label = 1;
  if (this->label().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->label());
  }

  // string error = 3;
  if (this->error().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  // double value = 2;
  if (this->value() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GreekResponse_Greek::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gooption.GreekResponse.Greek)
  GOOGLE_DCHECK_NE(&from, this);
  const GreekResponse_Greek* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GreekResponse_Greek>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gooption.GreekResponse.Greek)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gooption.GreekResponse.Greek)
    MergeFrom(*source);
  }
}

void GreekResponse_Greek::MergeFrom(const GreekResponse_Greek& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gooption.GreekResponse.Greek)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.label().size() > 0) {

    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  if (from.error().size() > 0) {

    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void GreekResponse_Greek::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gooption.GreekResponse.Greek)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GreekResponse_Greek::CopyFrom(const GreekResponse_Greek& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gooption.GreekResponse.Greek)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GreekResponse_Greek::IsInitialized() const {
  return true;
}

void GreekResponse_Greek::Swap(GreekResponse_Greek* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GreekResponse_Greek::InternalSwap(GreekResponse_Greek* other) {
  using std::swap;
  label_.Swap(&other->label_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  error_.Swap(&other->error_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GreekResponse_Greek::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GreekResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GreekResponse::kGreeksFieldNumber;
const int GreekResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GreekResponse::GreekResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_GreekResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gooption.GreekResponse)
}
GreekResponse::GreekResponse(const GreekResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      greeks_(from.greeks_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error().size() > 0) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  // @@protoc_insertion_point(copy_constructor:gooption.GreekResponse)
}

void GreekResponse::SharedCtor() {
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GreekResponse::~GreekResponse() {
  // @@protoc_insertion_point(destructor:gooption.GreekResponse)
  SharedDtor();
}

void GreekResponse::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GreekResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GreekResponse::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GreekResponse& GreekResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_GreekResponse.base);
  return *internal_default_instance();
}


void GreekResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gooption.GreekResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  greeks_.Clear();
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GreekResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gooption.GreekResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .gooption.GreekResponse.Greek greeks = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_greeks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gooption.GreekResponse.error"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gooption.GreekResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gooption.GreekResponse)
  return false;
#undef DO_
}

void GreekResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gooption.GreekResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .gooption.GreekResponse.Greek greeks = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->greeks_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->greeks(static_cast<int>(i)),
      output);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gooption.GreekResponse.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gooption.GreekResponse)
}

::google::protobuf::uint8* GreekResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gooption.GreekResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .gooption.GreekResponse.Greek greeks = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->greeks_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->greeks(static_cast<int>(i)), deterministic, target);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gooption.GreekResponse.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gooption.GreekResponse)
  return target;
}

size_t GreekResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gooption.GreekResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .gooption.GreekResponse.Greek greeks = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->greeks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->greeks(static_cast<int>(i)));
    }
  }

  // string error = 2;
  if (this->error().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GreekResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gooption.GreekResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GreekResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GreekResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gooption.GreekResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gooption.GreekResponse)
    MergeFrom(*source);
  }
}

void GreekResponse::MergeFrom(const GreekResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gooption.GreekResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  greeks_.MergeFrom(from.greeks_);
  if (from.error().size() > 0) {

    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
}

void GreekResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gooption.GreekResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GreekResponse::CopyFrom(const GreekResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gooption.GreekResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GreekResponse::IsInitialized() const {
  return true;
}

void GreekResponse::Swap(GreekResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GreekResponse::InternalSwap(GreekResponse* other) {
  using std::swap;
  CastToBase(&greeks_)->InternalSwap(CastToBase(&other->greeks_));
  error_.Swap(&other->error_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GreekResponse::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ImpliedVolRequest::InitAsDefaultInstance() {
  ::gooption::_ImpliedVolRequest_default_instance_._instance.get_mutable()->marketdata_ = const_cast< ::gooption::OptionMarket*>(
      ::gooption::OptionMarket::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImpliedVolRequest::kPricingdateFieldNumber;
const int ImpliedVolRequest::kMarketdataFieldNumber;
const int ImpliedVolRequest::kQuotesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImpliedVolRequest::ImpliedVolRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_ImpliedVolRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gooption.ImpliedVolRequest)
}
ImpliedVolRequest::ImpliedVolRequest(const ImpliedVolRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      quotes_(from.quotes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_marketdata()) {
    marketdata_ = new ::gooption::OptionMarket(*from.marketdata_);
  } else {
    marketdata_ = NULL;
  }
  pricingdate_ = from.pricingdate_;
  // @@protoc_insertion_point(copy_constructor:gooption.ImpliedVolRequest)
}

void ImpliedVolRequest::SharedCtor() {
  ::memset(&marketdata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pricingdate_) -
      reinterpret_cast<char*>(&marketdata_)) + sizeof(pricingdate_));
}

ImpliedVolRequest::~ImpliedVolRequest() {
  // @@protoc_insertion_point(destructor:gooption.ImpliedVolRequest)
  SharedDtor();
}

void ImpliedVolRequest::SharedDtor() {
  if (this != internal_default_instance()) delete marketdata_;
}

void ImpliedVolRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ImpliedVolRequest::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImpliedVolRequest& ImpliedVolRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_ImpliedVolRequest.base);
  return *internal_default_instance();
}


void ImpliedVolRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gooption.ImpliedVolRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  quotes_.Clear();
  if (GetArenaNoVirtual() == NULL && marketdata_ != NULL) {
    delete marketdata_;
  }
  marketdata_ = NULL;
  pricingdate_ = 0;
  _internal_metadata_.Clear();
}

bool ImpliedVolRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gooption.ImpliedVolRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double pricingdate = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pricingdate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gooption.OptionMarket marketdata = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_marketdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .gooption.OptionQuoteSlice quotes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_quotes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gooption.ImpliedVolRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gooption.ImpliedVolRequest)
  return false;
#undef DO_
}

void ImpliedVolRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gooption.ImpliedVolRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double pricingdate = 1;
  if (this->pricingdate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->pricingdate(), output);
  }

  // .gooption.OptionMarket marketdata = 2;
  if (this->has_marketdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_marketdata(), output);
  }

  // repeated .gooption.OptionQuoteSlice quotes = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->quotes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->quotes(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gooption.ImpliedVolRequest)
}

::google::protobuf::uint8* ImpliedVolRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gooption.ImpliedVolRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double pricingdate = 1;
  if (this->pricingdate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->pricingdate(), target);
  }

  // .gooption.OptionMarket marketdata = 2;
  if (this->has_marketdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_marketdata(), deterministic, target);
  }

  // repeated .gooption.OptionQuoteSlice quotes = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->quotes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->quotes(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gooption.ImpliedVolRequest)
  return target;
}

size_t ImpliedVolRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gooption.ImpliedVolRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .gooption.OptionQuoteSlice quotes = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->quotes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->quotes(static_cast<int>(i)));
    }
  }

  // .gooption.OptionMarket marketdata = 2;
  if (this->has_marketdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *marketdata_);
  }

  // double pricingdate = 1;
  if (this->pricingdate() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImpliedVolRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gooption.ImpliedVolRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ImpliedVolRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImpliedVolRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gooption.ImpliedVolRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gooption.ImpliedVolRequest)
    MergeFrom(*source);
  }
}

void ImpliedVolRequest::MergeFrom(const ImpliedVolRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gooption.ImpliedVolRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  quotes_.MergeFrom(from.quotes_);
  if (from.has_marketdata()) {
    mutable_marketdata()->::gooption::OptionMarket::MergeFrom(from.marketdata());
  }
  if (from.pricingdate() != 0) {
    set_pricingdate(from.pricingdate());
  }
}

void ImpliedVolRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gooption.ImpliedVolRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImpliedVolRequest::CopyFrom(const ImpliedVolRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gooption.ImpliedVolRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImpliedVolRequest::IsInitialized() const {
  return true;
}

void ImpliedVolRequest::Swap(ImpliedVolRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImpliedVolRequest::InternalSwap(ImpliedVolRequest* other) {
  using std::swap;
  CastToBase(&quotes_)->InternalSwap(CastToBase(&other->quotes_));
  swap(marketdata_, other->marketdata_);
  swap(pricingdate_, other->pricingdate_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ImpliedVolRequest::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ImpliedVolResponse::InitAsDefaultInstance() {
  ::gooption::_ImpliedVolResponse_default_instance_._instance.get_mutable()->volsurface_ = const_cast< ::gooption::ImpliedVolSurface*>(
      ::gooption::ImpliedVolSurface::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImpliedVolResponse::kVolsurfaceFieldNumber;
const int ImpliedVolResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImpliedVolResponse::ImpliedVolResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_ImpliedVolResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gooption.ImpliedVolResponse)
}
ImpliedVolResponse::ImpliedVolResponse(const ImpliedVolResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error().size() > 0) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.has_volsurface()) {
    volsurface_ = new ::gooption::ImpliedVolSurface(*from.volsurface_);
  } else {
    volsurface_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:gooption.ImpliedVolResponse)
}

void ImpliedVolResponse::SharedCtor() {
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  volsurface_ = NULL;
}

ImpliedVolResponse::~ImpliedVolResponse() {
  // @@protoc_insertion_point(destructor:gooption.ImpliedVolResponse)
  SharedDtor();
}

void ImpliedVolResponse::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete volsurface_;
}

void ImpliedVolResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ImpliedVolResponse::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImpliedVolResponse& ImpliedVolResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_ImpliedVolResponse.base);
  return *internal_default_instance();
}


void ImpliedVolResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gooption.ImpliedVolResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && volsurface_ != NULL) {
    delete volsurface_;
  }
  volsurface_ = NULL;
  _internal_metadata_.Clear();
}

bool ImpliedVolResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gooption.ImpliedVolResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .gooption.ImpliedVolSurface volsurface = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_volsurface()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gooption.ImpliedVolResponse.error"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gooption.ImpliedVolResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gooption.ImpliedVolResponse)
  return false;
#undef DO_
}

void ImpliedVolResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gooption.ImpliedVolResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gooption.ImpliedVolSurface volsurface = 1;
  if (this->has_volsurface()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_volsurface(), output);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gooption.ImpliedVolResponse.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gooption.ImpliedVolResponse)
}

::google::protobuf::uint8* ImpliedVolResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gooption.ImpliedVolResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gooption.ImpliedVolSurface volsurface = 1;
  if (this->has_volsurface()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_volsurface(), deterministic, target);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gooption.ImpliedVolResponse.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gooption.ImpliedVolResponse)
  return target;
}

size_t ImpliedVolResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gooption.ImpliedVolResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string error = 2;
  if (this->error().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  // .gooption.ImpliedVolSurface volsurface = 1;
  if (this->has_volsurface()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *volsurface_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImpliedVolResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gooption.ImpliedVolResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ImpliedVolResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImpliedVolResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gooption.ImpliedVolResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gooption.ImpliedVolResponse)
    MergeFrom(*source);
  }
}

void ImpliedVolResponse::MergeFrom(const ImpliedVolResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gooption.ImpliedVolResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error().size() > 0) {

    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.has_volsurface()) {
    mutable_volsurface()->::gooption::ImpliedVolSurface::MergeFrom(from.volsurface());
  }
}

void ImpliedVolResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gooption.ImpliedVolResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImpliedVolResponse::CopyFrom(const ImpliedVolResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gooption.ImpliedVolResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImpliedVolResponse::IsInitialized() const {
  return true;
}

void ImpliedVolResponse::Swap(ImpliedVolResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImpliedVolResponse::InternalSwap(ImpliedVolResponse* other) {
  using std::swap;
  error_.Swap(&other->error_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(volsurface_, other->volsurface_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ImpliedVolResponse::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace gooption
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gooption::European* Arena::CreateMaybeMessage< ::gooption::European >(Arena* arena) {
  return Arena::CreateInternal< ::gooption::European >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gooption::Index* Arena::CreateMaybeMessage< ::gooption::Index >(Arena* arena) {
  return Arena::CreateInternal< ::gooption::Index >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gooption::Spot* Arena::CreateMaybeMessage< ::gooption::Spot >(Arena* arena) {
  return Arena::CreateInternal< ::gooption::Spot >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gooption::RiskFreeRate* Arena::CreateMaybeMessage< ::gooption::RiskFreeRate >(Arena* arena) {
  return Arena::CreateInternal< ::gooption::RiskFreeRate >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gooption::FlatVol* Arena::CreateMaybeMessage< ::gooption::FlatVol >(Arena* arena) {
  return Arena::CreateInternal< ::gooption::FlatVol >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gooption::OptionQuote* Arena::CreateMaybeMessage< ::gooption::OptionQuote >(Arena* arena) {
  return Arena::CreateInternal< ::gooption::OptionQuote >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gooption::OptionQuoteSlice* Arena::CreateMaybeMessage< ::gooption::OptionQuoteSlice >(Arena* arena) {
  return Arena::CreateInternal< ::gooption::OptionQuoteSlice >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gooption::OptionMarket* Arena::CreateMaybeMessage< ::gooption::OptionMarket >(Arena* arena) {
  return Arena::CreateInternal< ::gooption::OptionMarket >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gooption::ImpliedVolQuote* Arena::CreateMaybeMessage< ::gooption::ImpliedVolQuote >(Arena* arena) {
  return Arena::CreateInternal< ::gooption::ImpliedVolQuote >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gooption::ImpliedVolSlice* Arena::CreateMaybeMessage< ::gooption::ImpliedVolSlice >(Arena* arena) {
  return Arena::CreateInternal< ::gooption::ImpliedVolSlice >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gooption::ImpliedVolSurface* Arena::CreateMaybeMessage< ::gooption::ImpliedVolSurface >(Arena* arena) {
  return Arena::CreateInternal< ::gooption::ImpliedVolSurface >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gooption::PriceRequest* Arena::CreateMaybeMessage< ::gooption::PriceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::gooption::PriceRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gooption::PriceResponse* Arena::CreateMaybeMessage< ::gooption::PriceResponse >(Arena* arena) {
  return Arena::CreateInternal< ::gooption::PriceResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gooption::GreekRequest* Arena::CreateMaybeMessage< ::gooption::GreekRequest >(Arena* arena) {
  return Arena::CreateInternal< ::gooption::GreekRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gooption::GreekResponse_Greek* Arena::CreateMaybeMessage< ::gooption::GreekResponse_Greek >(Arena* arena) {
  return Arena::CreateInternal< ::gooption::GreekResponse_Greek >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gooption::GreekResponse* Arena::CreateMaybeMessage< ::gooption::GreekResponse >(Arena* arena) {
  return Arena::CreateInternal< ::gooption::GreekResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gooption::ImpliedVolRequest* Arena::CreateMaybeMessage< ::gooption::ImpliedVolRequest >(Arena* arena) {
  return Arena::CreateInternal< ::gooption::ImpliedVolRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gooption::ImpliedVolResponse* Arena::CreateMaybeMessage< ::gooption::ImpliedVolResponse >(Arena* arena) {
  return Arena::CreateInternal< ::gooption::ImpliedVolResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

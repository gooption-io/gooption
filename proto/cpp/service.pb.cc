// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service.proto

#include "service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_contract_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_contract_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_European;
}  // namespace protobuf_contract_2eproto
namespace protobuf_marketdata_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_marketdata_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ImpliedVolSurface;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_marketdata_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_OptionQuoteSlice;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_marketdata_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_OptionMarket;
}  // namespace protobuf_marketdata_2eproto
namespace protobuf_service_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_service_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GreekResponse_Greek;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_service_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_PriceRequest;
}  // namespace protobuf_service_2eproto
namespace proto {
class PriceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PriceRequest>
      _instance;
} _PriceRequest_default_instance_;
class PriceResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PriceResponse>
      _instance;
} _PriceResponse_default_instance_;
class GreekRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GreekRequest>
      _instance;
} _GreekRequest_default_instance_;
class GreekResponse_GreekDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GreekResponse_Greek>
      _instance;
} _GreekResponse_Greek_default_instance_;
class GreekResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GreekResponse>
      _instance;
} _GreekResponse_default_instance_;
class ImpliedVolRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImpliedVolRequest>
      _instance;
} _ImpliedVolRequest_default_instance_;
class ImpliedVolResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImpliedVolResponse>
      _instance;
} _ImpliedVolResponse_default_instance_;
}  // namespace proto
namespace protobuf_service_2eproto {
static void InitDefaultsPriceRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_PriceRequest_default_instance_;
    new (ptr) ::proto::PriceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::PriceRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_PriceRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsPriceRequest}, {
      &protobuf_contract_2eproto::scc_info_European.base,
      &protobuf_marketdata_2eproto::scc_info_OptionMarket.base,}};

static void InitDefaultsPriceResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_PriceResponse_default_instance_;
    new (ptr) ::proto::PriceResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::PriceResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PriceResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPriceResponse}, {}};

static void InitDefaultsGreekRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_GreekRequest_default_instance_;
    new (ptr) ::proto::GreekRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::GreekRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GreekRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGreekRequest}, {
      &protobuf_service_2eproto::scc_info_PriceRequest.base,}};

static void InitDefaultsGreekResponse_Greek() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_GreekResponse_Greek_default_instance_;
    new (ptr) ::proto::GreekResponse_Greek();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::GreekResponse_Greek::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GreekResponse_Greek =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGreekResponse_Greek}, {}};

static void InitDefaultsGreekResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_GreekResponse_default_instance_;
    new (ptr) ::proto::GreekResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::GreekResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GreekResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGreekResponse}, {
      &protobuf_service_2eproto::scc_info_GreekResponse_Greek.base,}};

static void InitDefaultsImpliedVolRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_ImpliedVolRequest_default_instance_;
    new (ptr) ::proto::ImpliedVolRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::ImpliedVolRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ImpliedVolRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsImpliedVolRequest}, {
      &protobuf_marketdata_2eproto::scc_info_OptionMarket.base,
      &protobuf_marketdata_2eproto::scc_info_OptionQuoteSlice.base,}};

static void InitDefaultsImpliedVolResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_ImpliedVolResponse_default_instance_;
    new (ptr) ::proto::ImpliedVolResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::ImpliedVolResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ImpliedVolResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsImpliedVolResponse}, {
      &protobuf_marketdata_2eproto::scc_info_ImpliedVolSurface.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_PriceRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PriceResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GreekRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GreekResponse_Greek.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GreekResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ImpliedVolRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ImpliedVolResponse.base);
}

::google::protobuf::Metadata file_level_metadata[7];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::PriceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::PriceRequest, pricingdate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::PriceRequest, contract_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::PriceRequest, marketdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::PriceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::PriceResponse, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::PriceResponse, error_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::GreekRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::GreekRequest, request_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::GreekRequest, greek_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::GreekResponse_Greek, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::GreekResponse_Greek, label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::GreekResponse_Greek, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::GreekResponse_Greek, error_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::GreekResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::GreekResponse, greeks_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::GreekResponse, error_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ImpliedVolRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ImpliedVolRequest, pricingdate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ImpliedVolRequest, marketdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ImpliedVolRequest, quotes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ImpliedVolResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ImpliedVolResponse, volsurface_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::ImpliedVolResponse, error_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::proto::PriceRequest)},
  { 8, -1, sizeof(::proto::PriceResponse)},
  { 15, -1, sizeof(::proto::GreekRequest)},
  { 22, -1, sizeof(::proto::GreekResponse_Greek)},
  { 30, -1, sizeof(::proto::GreekResponse)},
  { 37, -1, sizeof(::proto::ImpliedVolRequest)},
  { 45, -1, sizeof(::proto::ImpliedVolResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_PriceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_PriceResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_GreekRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_GreekResponse_Greek_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_GreekResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_ImpliedVolRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_ImpliedVolResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "service.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rservice.proto\022\005proto\032\016contract.proto\032\020"
      "marketdata.proto\032\034google/api/annotations"
      ".proto\"o\n\014PriceRequest\022\023\n\013pricingdate\030\001 "
      "\001(\001\022!\n\010contract\030\002 \001(\0132\017.proto.European\022\'"
      "\n\nmarketdata\030\003 \001(\0132\023.proto.OptionMarket\""
      "-\n\rPriceResponse\022\r\n\005price\030\002 \001(\001\022\r\n\005error"
      "\030\003 \001(\t\"C\n\014GreekRequest\022$\n\007request\030\001 \001(\0132"
      "\023.proto.PriceRequest\022\r\n\005greek\030\002 \003(\t\"\200\001\n\r"
      "GreekResponse\022*\n\006greeks\030\001 \003(\0132\032.proto.Gr"
      "eekResponse.Greek\022\r\n\005error\030\002 \001(\t\0324\n\005Gree"
      "k\022\r\n\005label\030\001 \001(\t\022\r\n\005value\030\002 \001(\001\022\r\n\005error"
      "\030\003 \001(\t\"z\n\021ImpliedVolRequest\022\023\n\013pricingda"
      "te\030\001 \001(\001\022\'\n\nmarketdata\030\002 \001(\0132\023.proto.Opt"
      "ionMarket\022\'\n\006quotes\030\003 \003(\0132\027.proto.Option"
      "QuoteSlice\"Q\n\022ImpliedVolResponse\022,\n\nvols"
      "urface\030\001 \001(\0132\030.proto.ImpliedVolSurface\022\r"
      "\n\005error\030\002 \001(\t2\207\002\n\004Gobs\022M\n\005Price\022\023.proto."
      "PriceRequest\032\024.proto.PriceResponse\"\031\202\323\344\223"
      "\002\023\"\016/v1/gobs/price:\001*\022M\n\005Greek\022\023.proto.G"
      "reekRequest\032\024.proto.GreekResponse\"\031\202\323\344\223\002"
      "\023\"\016/v1/gobs/greek:\001*\022a\n\nImpliedVol\022\030.pro"
      "to.ImpliedVolRequest\032\031.proto.ImpliedVolR"
      "esponse\"\036\202\323\344\223\002\030\"\023/v1/gobs/impliedvol:\001*b"
      "\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 927);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "service.proto", &protobuf_RegisterTypes);
  ::protobuf_contract_2eproto::AddDescriptors();
  ::protobuf_marketdata_2eproto::AddDescriptors();
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_service_2eproto
namespace proto {

// ===================================================================

void PriceRequest::InitAsDefaultInstance() {
  ::proto::_PriceRequest_default_instance_._instance.get_mutable()->contract_ = const_cast< ::proto::European*>(
      ::proto::European::internal_default_instance());
  ::proto::_PriceRequest_default_instance_._instance.get_mutable()->marketdata_ = const_cast< ::proto::OptionMarket*>(
      ::proto::OptionMarket::internal_default_instance());
}
void PriceRequest::clear_contract() {
  if (GetArenaNoVirtual() == NULL && contract_ != NULL) {
    delete contract_;
  }
  contract_ = NULL;
}
void PriceRequest::clear_marketdata() {
  if (GetArenaNoVirtual() == NULL && marketdata_ != NULL) {
    delete marketdata_;
  }
  marketdata_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PriceRequest::kPricingdateFieldNumber;
const int PriceRequest::kContractFieldNumber;
const int PriceRequest::kMarketdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PriceRequest::PriceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_PriceRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PriceRequest)
}
PriceRequest::PriceRequest(const PriceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_contract()) {
    contract_ = new ::proto::European(*from.contract_);
  } else {
    contract_ = NULL;
  }
  if (from.has_marketdata()) {
    marketdata_ = new ::proto::OptionMarket(*from.marketdata_);
  } else {
    marketdata_ = NULL;
  }
  pricingdate_ = from.pricingdate_;
  // @@protoc_insertion_point(copy_constructor:proto.PriceRequest)
}

void PriceRequest::SharedCtor() {
  ::memset(&contract_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pricingdate_) -
      reinterpret_cast<char*>(&contract_)) + sizeof(pricingdate_));
}

PriceRequest::~PriceRequest() {
  // @@protoc_insertion_point(destructor:proto.PriceRequest)
  SharedDtor();
}

void PriceRequest::SharedDtor() {
  if (this != internal_default_instance()) delete contract_;
  if (this != internal_default_instance()) delete marketdata_;
}

void PriceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PriceRequest::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PriceRequest& PriceRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_PriceRequest.base);
  return *internal_default_instance();
}


void PriceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PriceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && contract_ != NULL) {
    delete contract_;
  }
  contract_ = NULL;
  if (GetArenaNoVirtual() == NULL && marketdata_ != NULL) {
    delete marketdata_;
  }
  marketdata_ = NULL;
  pricingdate_ = 0;
  _internal_metadata_.Clear();
}

bool PriceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PriceRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double pricingdate = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pricingdate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.European contract = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_contract()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.OptionMarket marketdata = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_marketdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PriceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PriceRequest)
  return false;
#undef DO_
}

void PriceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PriceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double pricingdate = 1;
  if (this->pricingdate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->pricingdate(), output);
  }

  // .proto.European contract = 2;
  if (this->has_contract()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_contract(), output);
  }

  // .proto.OptionMarket marketdata = 3;
  if (this->has_marketdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_marketdata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PriceRequest)
}

::google::protobuf::uint8* PriceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PriceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double pricingdate = 1;
  if (this->pricingdate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->pricingdate(), target);
  }

  // .proto.European contract = 2;
  if (this->has_contract()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_contract(), deterministic, target);
  }

  // .proto.OptionMarket marketdata = 3;
  if (this->has_marketdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_marketdata(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PriceRequest)
  return target;
}

size_t PriceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PriceRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.European contract = 2;
  if (this->has_contract()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *contract_);
  }

  // .proto.OptionMarket marketdata = 3;
  if (this->has_marketdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *marketdata_);
  }

  // double pricingdate = 1;
  if (this->pricingdate() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PriceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PriceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PriceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PriceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PriceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PriceRequest)
    MergeFrom(*source);
  }
}

void PriceRequest::MergeFrom(const PriceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PriceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_contract()) {
    mutable_contract()->::proto::European::MergeFrom(from.contract());
  }
  if (from.has_marketdata()) {
    mutable_marketdata()->::proto::OptionMarket::MergeFrom(from.marketdata());
  }
  if (from.pricingdate() != 0) {
    set_pricingdate(from.pricingdate());
  }
}

void PriceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PriceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PriceRequest::CopyFrom(const PriceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PriceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PriceRequest::IsInitialized() const {
  return true;
}

void PriceRequest::Swap(PriceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PriceRequest::InternalSwap(PriceRequest* other) {
  using std::swap;
  swap(contract_, other->contract_);
  swap(marketdata_, other->marketdata_);
  swap(pricingdate_, other->pricingdate_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PriceRequest::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PriceResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PriceResponse::kPriceFieldNumber;
const int PriceResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PriceResponse::PriceResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_PriceResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PriceResponse)
}
PriceResponse::PriceResponse(const PriceResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error().size() > 0) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  price_ = from.price_;
  // @@protoc_insertion_point(copy_constructor:proto.PriceResponse)
}

void PriceResponse::SharedCtor() {
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  price_ = 0;
}

PriceResponse::~PriceResponse() {
  // @@protoc_insertion_point(destructor:proto.PriceResponse)
  SharedDtor();
}

void PriceResponse::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PriceResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PriceResponse::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PriceResponse& PriceResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_PriceResponse.base);
  return *internal_default_instance();
}


void PriceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PriceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  price_ = 0;
  _internal_metadata_.Clear();
}

bool PriceResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PriceResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double price = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PriceResponse.error"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PriceResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PriceResponse)
  return false;
#undef DO_
}

void PriceResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PriceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double price = 2;
  if (this->price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->price(), output);
  }

  // string error = 3;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PriceResponse.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->error(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PriceResponse)
}

::google::protobuf::uint8* PriceResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PriceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double price = 2;
  if (this->price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->price(), target);
  }

  // string error = 3;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PriceResponse.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->error(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PriceResponse)
  return target;
}

size_t PriceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PriceResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string error = 3;
  if (this->error().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  // double price = 2;
  if (this->price() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PriceResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PriceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PriceResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PriceResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PriceResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PriceResponse)
    MergeFrom(*source);
  }
}

void PriceResponse::MergeFrom(const PriceResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PriceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error().size() > 0) {

    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.price() != 0) {
    set_price(from.price());
  }
}

void PriceResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PriceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PriceResponse::CopyFrom(const PriceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PriceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PriceResponse::IsInitialized() const {
  return true;
}

void PriceResponse::Swap(PriceResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PriceResponse::InternalSwap(PriceResponse* other) {
  using std::swap;
  error_.Swap(&other->error_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(price_, other->price_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PriceResponse::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GreekRequest::InitAsDefaultInstance() {
  ::proto::_GreekRequest_default_instance_._instance.get_mutable()->request_ = const_cast< ::proto::PriceRequest*>(
      ::proto::PriceRequest::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GreekRequest::kRequestFieldNumber;
const int GreekRequest::kGreekFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GreekRequest::GreekRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_GreekRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GreekRequest)
}
GreekRequest::GreekRequest(const GreekRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      greek_(from.greek_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_request()) {
    request_ = new ::proto::PriceRequest(*from.request_);
  } else {
    request_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.GreekRequest)
}

void GreekRequest::SharedCtor() {
  request_ = NULL;
}

GreekRequest::~GreekRequest() {
  // @@protoc_insertion_point(destructor:proto.GreekRequest)
  SharedDtor();
}

void GreekRequest::SharedDtor() {
  if (this != internal_default_instance()) delete request_;
}

void GreekRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GreekRequest::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GreekRequest& GreekRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_GreekRequest.base);
  return *internal_default_instance();
}


void GreekRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GreekRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  greek_.Clear();
  if (GetArenaNoVirtual() == NULL && request_ != NULL) {
    delete request_;
  }
  request_ = NULL;
  _internal_metadata_.Clear();
}

bool GreekRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GreekRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.PriceRequest request = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string greek = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_greek()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->greek(this->greek_size() - 1).data(),
            static_cast<int>(this->greek(this->greek_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.GreekRequest.greek"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GreekRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GreekRequest)
  return false;
#undef DO_
}

void GreekRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GreekRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.PriceRequest request = 1;
  if (this->has_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_request(), output);
  }

  // repeated string greek = 2;
  for (int i = 0, n = this->greek_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->greek(i).data(), static_cast<int>(this->greek(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GreekRequest.greek");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->greek(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GreekRequest)
}

::google::protobuf::uint8* GreekRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GreekRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.PriceRequest request = 1;
  if (this->has_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_request(), deterministic, target);
  }

  // repeated string greek = 2;
  for (int i = 0, n = this->greek_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->greek(i).data(), static_cast<int>(this->greek(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GreekRequest.greek");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->greek(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GreekRequest)
  return target;
}

size_t GreekRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GreekRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string greek = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->greek_size());
  for (int i = 0, n = this->greek_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->greek(i));
  }

  // .proto.PriceRequest request = 1;
  if (this->has_request()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *request_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GreekRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GreekRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GreekRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GreekRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GreekRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GreekRequest)
    MergeFrom(*source);
  }
}

void GreekRequest::MergeFrom(const GreekRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GreekRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  greek_.MergeFrom(from.greek_);
  if (from.has_request()) {
    mutable_request()->::proto::PriceRequest::MergeFrom(from.request());
  }
}

void GreekRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GreekRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GreekRequest::CopyFrom(const GreekRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GreekRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GreekRequest::IsInitialized() const {
  return true;
}

void GreekRequest::Swap(GreekRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GreekRequest::InternalSwap(GreekRequest* other) {
  using std::swap;
  greek_.InternalSwap(CastToBase(&other->greek_));
  swap(request_, other->request_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GreekRequest::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GreekResponse_Greek::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GreekResponse_Greek::kLabelFieldNumber;
const int GreekResponse_Greek::kValueFieldNumber;
const int GreekResponse_Greek::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GreekResponse_Greek::GreekResponse_Greek()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_GreekResponse_Greek.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GreekResponse.Greek)
}
GreekResponse_Greek::GreekResponse_Greek(const GreekResponse_Greek& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.label().size() > 0) {
    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error().size() > 0) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:proto.GreekResponse.Greek)
}

void GreekResponse_Greek::SharedCtor() {
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = 0;
}

GreekResponse_Greek::~GreekResponse_Greek() {
  // @@protoc_insertion_point(destructor:proto.GreekResponse.Greek)
  SharedDtor();
}

void GreekResponse_Greek::SharedDtor() {
  label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GreekResponse_Greek::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GreekResponse_Greek::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GreekResponse_Greek& GreekResponse_Greek::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_GreekResponse_Greek.base);
  return *internal_default_instance();
}


void GreekResponse_Greek::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GreekResponse.Greek)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = 0;
  _internal_metadata_.Clear();
}

bool GreekResponse_Greek::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GreekResponse.Greek)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string label = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->label().data(), static_cast<int>(this->label().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.GreekResponse.Greek.label"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.GreekResponse.Greek.error"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GreekResponse.Greek)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GreekResponse.Greek)
  return false;
#undef DO_
}

void GreekResponse_Greek::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GreekResponse.Greek)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string label = 1;
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GreekResponse.Greek.label");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->label(), output);
  }

  // double value = 2;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->value(), output);
  }

  // string error = 3;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GreekResponse.Greek.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->error(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GreekResponse.Greek)
}

::google::protobuf::uint8* GreekResponse_Greek::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GreekResponse.Greek)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string label = 1;
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GreekResponse.Greek.label");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->label(), target);
  }

  // double value = 2;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->value(), target);
  }

  // string error = 3;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GreekResponse.Greek.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->error(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GreekResponse.Greek)
  return target;
}

size_t GreekResponse_Greek::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GreekResponse.Greek)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string label = 1;
  if (this->label().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->label());
  }

  // string error = 3;
  if (this->error().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  // double value = 2;
  if (this->value() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GreekResponse_Greek::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GreekResponse.Greek)
  GOOGLE_DCHECK_NE(&from, this);
  const GreekResponse_Greek* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GreekResponse_Greek>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GreekResponse.Greek)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GreekResponse.Greek)
    MergeFrom(*source);
  }
}

void GreekResponse_Greek::MergeFrom(const GreekResponse_Greek& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GreekResponse.Greek)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.label().size() > 0) {

    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  if (from.error().size() > 0) {

    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void GreekResponse_Greek::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GreekResponse.Greek)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GreekResponse_Greek::CopyFrom(const GreekResponse_Greek& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GreekResponse.Greek)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GreekResponse_Greek::IsInitialized() const {
  return true;
}

void GreekResponse_Greek::Swap(GreekResponse_Greek* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GreekResponse_Greek::InternalSwap(GreekResponse_Greek* other) {
  using std::swap;
  label_.Swap(&other->label_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  error_.Swap(&other->error_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GreekResponse_Greek::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GreekResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GreekResponse::kGreeksFieldNumber;
const int GreekResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GreekResponse::GreekResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_GreekResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GreekResponse)
}
GreekResponse::GreekResponse(const GreekResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      greeks_(from.greeks_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error().size() > 0) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.GreekResponse)
}

void GreekResponse::SharedCtor() {
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GreekResponse::~GreekResponse() {
  // @@protoc_insertion_point(destructor:proto.GreekResponse)
  SharedDtor();
}

void GreekResponse::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GreekResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GreekResponse::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GreekResponse& GreekResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_GreekResponse.base);
  return *internal_default_instance();
}


void GreekResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GreekResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  greeks_.Clear();
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GreekResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GreekResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.GreekResponse.Greek greeks = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_greeks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.GreekResponse.error"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GreekResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GreekResponse)
  return false;
#undef DO_
}

void GreekResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GreekResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.GreekResponse.Greek greeks = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->greeks_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->greeks(static_cast<int>(i)),
      output);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GreekResponse.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GreekResponse)
}

::google::protobuf::uint8* GreekResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GreekResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.GreekResponse.Greek greeks = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->greeks_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->greeks(static_cast<int>(i)), deterministic, target);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GreekResponse.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GreekResponse)
  return target;
}

size_t GreekResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GreekResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.GreekResponse.Greek greeks = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->greeks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->greeks(static_cast<int>(i)));
    }
  }

  // string error = 2;
  if (this->error().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GreekResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GreekResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GreekResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GreekResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GreekResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GreekResponse)
    MergeFrom(*source);
  }
}

void GreekResponse::MergeFrom(const GreekResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GreekResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  greeks_.MergeFrom(from.greeks_);
  if (from.error().size() > 0) {

    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
}

void GreekResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GreekResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GreekResponse::CopyFrom(const GreekResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GreekResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GreekResponse::IsInitialized() const {
  return true;
}

void GreekResponse::Swap(GreekResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GreekResponse::InternalSwap(GreekResponse* other) {
  using std::swap;
  CastToBase(&greeks_)->InternalSwap(CastToBase(&other->greeks_));
  error_.Swap(&other->error_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GreekResponse::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ImpliedVolRequest::InitAsDefaultInstance() {
  ::proto::_ImpliedVolRequest_default_instance_._instance.get_mutable()->marketdata_ = const_cast< ::proto::OptionMarket*>(
      ::proto::OptionMarket::internal_default_instance());
}
void ImpliedVolRequest::clear_marketdata() {
  if (GetArenaNoVirtual() == NULL && marketdata_ != NULL) {
    delete marketdata_;
  }
  marketdata_ = NULL;
}
void ImpliedVolRequest::clear_quotes() {
  quotes_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImpliedVolRequest::kPricingdateFieldNumber;
const int ImpliedVolRequest::kMarketdataFieldNumber;
const int ImpliedVolRequest::kQuotesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImpliedVolRequest::ImpliedVolRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_ImpliedVolRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ImpliedVolRequest)
}
ImpliedVolRequest::ImpliedVolRequest(const ImpliedVolRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      quotes_(from.quotes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_marketdata()) {
    marketdata_ = new ::proto::OptionMarket(*from.marketdata_);
  } else {
    marketdata_ = NULL;
  }
  pricingdate_ = from.pricingdate_;
  // @@protoc_insertion_point(copy_constructor:proto.ImpliedVolRequest)
}

void ImpliedVolRequest::SharedCtor() {
  ::memset(&marketdata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pricingdate_) -
      reinterpret_cast<char*>(&marketdata_)) + sizeof(pricingdate_));
}

ImpliedVolRequest::~ImpliedVolRequest() {
  // @@protoc_insertion_point(destructor:proto.ImpliedVolRequest)
  SharedDtor();
}

void ImpliedVolRequest::SharedDtor() {
  if (this != internal_default_instance()) delete marketdata_;
}

void ImpliedVolRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ImpliedVolRequest::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImpliedVolRequest& ImpliedVolRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_ImpliedVolRequest.base);
  return *internal_default_instance();
}


void ImpliedVolRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ImpliedVolRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  quotes_.Clear();
  if (GetArenaNoVirtual() == NULL && marketdata_ != NULL) {
    delete marketdata_;
  }
  marketdata_ = NULL;
  pricingdate_ = 0;
  _internal_metadata_.Clear();
}

bool ImpliedVolRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ImpliedVolRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double pricingdate = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pricingdate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.OptionMarket marketdata = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_marketdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.OptionQuoteSlice quotes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_quotes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ImpliedVolRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ImpliedVolRequest)
  return false;
#undef DO_
}

void ImpliedVolRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ImpliedVolRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double pricingdate = 1;
  if (this->pricingdate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->pricingdate(), output);
  }

  // .proto.OptionMarket marketdata = 2;
  if (this->has_marketdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_marketdata(), output);
  }

  // repeated .proto.OptionQuoteSlice quotes = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->quotes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->quotes(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ImpliedVolRequest)
}

::google::protobuf::uint8* ImpliedVolRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ImpliedVolRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double pricingdate = 1;
  if (this->pricingdate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->pricingdate(), target);
  }

  // .proto.OptionMarket marketdata = 2;
  if (this->has_marketdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_marketdata(), deterministic, target);
  }

  // repeated .proto.OptionQuoteSlice quotes = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->quotes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->quotes(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ImpliedVolRequest)
  return target;
}

size_t ImpliedVolRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ImpliedVolRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.OptionQuoteSlice quotes = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->quotes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->quotes(static_cast<int>(i)));
    }
  }

  // .proto.OptionMarket marketdata = 2;
  if (this->has_marketdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *marketdata_);
  }

  // double pricingdate = 1;
  if (this->pricingdate() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImpliedVolRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ImpliedVolRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ImpliedVolRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImpliedVolRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ImpliedVolRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ImpliedVolRequest)
    MergeFrom(*source);
  }
}

void ImpliedVolRequest::MergeFrom(const ImpliedVolRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ImpliedVolRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  quotes_.MergeFrom(from.quotes_);
  if (from.has_marketdata()) {
    mutable_marketdata()->::proto::OptionMarket::MergeFrom(from.marketdata());
  }
  if (from.pricingdate() != 0) {
    set_pricingdate(from.pricingdate());
  }
}

void ImpliedVolRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ImpliedVolRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImpliedVolRequest::CopyFrom(const ImpliedVolRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ImpliedVolRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImpliedVolRequest::IsInitialized() const {
  return true;
}

void ImpliedVolRequest::Swap(ImpliedVolRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImpliedVolRequest::InternalSwap(ImpliedVolRequest* other) {
  using std::swap;
  CastToBase(&quotes_)->InternalSwap(CastToBase(&other->quotes_));
  swap(marketdata_, other->marketdata_);
  swap(pricingdate_, other->pricingdate_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ImpliedVolRequest::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ImpliedVolResponse::InitAsDefaultInstance() {
  ::proto::_ImpliedVolResponse_default_instance_._instance.get_mutable()->volsurface_ = const_cast< ::proto::ImpliedVolSurface*>(
      ::proto::ImpliedVolSurface::internal_default_instance());
}
void ImpliedVolResponse::clear_volsurface() {
  if (GetArenaNoVirtual() == NULL && volsurface_ != NULL) {
    delete volsurface_;
  }
  volsurface_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImpliedVolResponse::kVolsurfaceFieldNumber;
const int ImpliedVolResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImpliedVolResponse::ImpliedVolResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_2eproto::scc_info_ImpliedVolResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ImpliedVolResponse)
}
ImpliedVolResponse::ImpliedVolResponse(const ImpliedVolResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error().size() > 0) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.has_volsurface()) {
    volsurface_ = new ::proto::ImpliedVolSurface(*from.volsurface_);
  } else {
    volsurface_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.ImpliedVolResponse)
}

void ImpliedVolResponse::SharedCtor() {
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  volsurface_ = NULL;
}

ImpliedVolResponse::~ImpliedVolResponse() {
  // @@protoc_insertion_point(destructor:proto.ImpliedVolResponse)
  SharedDtor();
}

void ImpliedVolResponse::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete volsurface_;
}

void ImpliedVolResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ImpliedVolResponse::descriptor() {
  ::protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImpliedVolResponse& ImpliedVolResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_2eproto::scc_info_ImpliedVolResponse.base);
  return *internal_default_instance();
}


void ImpliedVolResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ImpliedVolResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && volsurface_ != NULL) {
    delete volsurface_;
  }
  volsurface_ = NULL;
  _internal_metadata_.Clear();
}

bool ImpliedVolResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ImpliedVolResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.ImpliedVolSurface volsurface = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_volsurface()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ImpliedVolResponse.error"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ImpliedVolResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ImpliedVolResponse)
  return false;
#undef DO_
}

void ImpliedVolResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ImpliedVolResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ImpliedVolSurface volsurface = 1;
  if (this->has_volsurface()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_volsurface(), output);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ImpliedVolResponse.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ImpliedVolResponse)
}

::google::protobuf::uint8* ImpliedVolResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ImpliedVolResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ImpliedVolSurface volsurface = 1;
  if (this->has_volsurface()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_volsurface(), deterministic, target);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ImpliedVolResponse.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ImpliedVolResponse)
  return target;
}

size_t ImpliedVolResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ImpliedVolResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string error = 2;
  if (this->error().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  // .proto.ImpliedVolSurface volsurface = 1;
  if (this->has_volsurface()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *volsurface_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImpliedVolResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ImpliedVolResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ImpliedVolResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImpliedVolResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ImpliedVolResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ImpliedVolResponse)
    MergeFrom(*source);
  }
}

void ImpliedVolResponse::MergeFrom(const ImpliedVolResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ImpliedVolResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error().size() > 0) {

    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.has_volsurface()) {
    mutable_volsurface()->::proto::ImpliedVolSurface::MergeFrom(from.volsurface());
  }
}

void ImpliedVolResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ImpliedVolResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImpliedVolResponse::CopyFrom(const ImpliedVolResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ImpliedVolResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImpliedVolResponse::IsInitialized() const {
  return true;
}

void ImpliedVolResponse::Swap(ImpliedVolResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImpliedVolResponse::InternalSwap(ImpliedVolResponse* other) {
  using std::swap;
  error_.Swap(&other->error_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(volsurface_, other->volsurface_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ImpliedVolResponse::GetMetadata() const {
  protobuf_service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::PriceRequest* Arena::CreateMaybeMessage< ::proto::PriceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::proto::PriceRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::PriceResponse* Arena::CreateMaybeMessage< ::proto::PriceResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::PriceResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::GreekRequest* Arena::CreateMaybeMessage< ::proto::GreekRequest >(Arena* arena) {
  return Arena::CreateInternal< ::proto::GreekRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::GreekResponse_Greek* Arena::CreateMaybeMessage< ::proto::GreekResponse_Greek >(Arena* arena) {
  return Arena::CreateInternal< ::proto::GreekResponse_Greek >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::GreekResponse* Arena::CreateMaybeMessage< ::proto::GreekResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::GreekResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::ImpliedVolRequest* Arena::CreateMaybeMessage< ::proto::ImpliedVolRequest >(Arena* arena) {
  return Arena::CreateInternal< ::proto::ImpliedVolRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::ImpliedVolResponse* Arena::CreateMaybeMessage< ::proto::ImpliedVolResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::ImpliedVolResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

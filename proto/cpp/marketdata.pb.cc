// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: marketdata.proto

#include "marketdata.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_marketdata_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_marketdata_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Index;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_marketdata_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_OptionQuote;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_marketdata_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_FlatVol;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_marketdata_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ImpliedVolQuote;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_marketdata_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ImpliedVolSlice;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_marketdata_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_RiskFreeRate;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_marketdata_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Spot;
}  // namespace protobuf_marketdata_2eproto
namespace pb {
class IndexDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Index>
      _instance;
} _Index_default_instance_;
class SpotDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Spot>
      _instance;
} _Spot_default_instance_;
class RiskFreeRateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RiskFreeRate>
      _instance;
} _RiskFreeRate_default_instance_;
class FlatVolDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FlatVol>
      _instance;
} _FlatVol_default_instance_;
class OptionQuoteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OptionQuote>
      _instance;
} _OptionQuote_default_instance_;
class OptionQuoteSliceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OptionQuoteSlice>
      _instance;
} _OptionQuoteSlice_default_instance_;
class OptionMarketDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OptionMarket>
      _instance;
} _OptionMarket_default_instance_;
class ImpliedVolQuoteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImpliedVolQuote>
      _instance;
} _ImpliedVolQuote_default_instance_;
class ImpliedVolSliceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImpliedVolSlice>
      _instance;
} _ImpliedVolSlice_default_instance_;
class ImpliedVolSurfaceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImpliedVolSurface>
      _instance;
} _ImpliedVolSurface_default_instance_;
}  // namespace pb
namespace protobuf_marketdata_2eproto {
static void InitDefaultsIndex() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_Index_default_instance_;
    new (ptr) ::pb::Index();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::Index::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Index =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIndex}, {}};

static void InitDefaultsSpot() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_Spot_default_instance_;
    new (ptr) ::pb::Spot();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::Spot::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Spot =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSpot}, {
      &protobuf_marketdata_2eproto::scc_info_Index.base,}};

static void InitDefaultsRiskFreeRate() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_RiskFreeRate_default_instance_;
    new (ptr) ::pb::RiskFreeRate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::RiskFreeRate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RiskFreeRate =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRiskFreeRate}, {
      &protobuf_marketdata_2eproto::scc_info_Index.base,}};

static void InitDefaultsFlatVol() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_FlatVol_default_instance_;
    new (ptr) ::pb::FlatVol();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::FlatVol::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_FlatVol =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsFlatVol}, {
      &protobuf_marketdata_2eproto::scc_info_Index.base,}};

static void InitDefaultsOptionQuote() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_OptionQuote_default_instance_;
    new (ptr) ::pb::OptionQuote();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::OptionQuote::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OptionQuote =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOptionQuote}, {}};

static void InitDefaultsOptionQuoteSlice() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_OptionQuoteSlice_default_instance_;
    new (ptr) ::pb::OptionQuoteSlice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::OptionQuoteSlice::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_OptionQuoteSlice =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsOptionQuoteSlice}, {
      &protobuf_marketdata_2eproto::scc_info_OptionQuote.base,}};

static void InitDefaultsOptionMarket() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_OptionMarket_default_instance_;
    new (ptr) ::pb::OptionMarket();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::OptionMarket::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_OptionMarket =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsOptionMarket}, {
      &protobuf_marketdata_2eproto::scc_info_Spot.base,
      &protobuf_marketdata_2eproto::scc_info_FlatVol.base,
      &protobuf_marketdata_2eproto::scc_info_RiskFreeRate.base,}};

static void InitDefaultsImpliedVolQuote() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_ImpliedVolQuote_default_instance_;
    new (ptr) ::pb::ImpliedVolQuote();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::ImpliedVolQuote::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ImpliedVolQuote =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsImpliedVolQuote}, {
      &protobuf_marketdata_2eproto::scc_info_OptionQuote.base,}};

static void InitDefaultsImpliedVolSlice() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_ImpliedVolSlice_default_instance_;
    new (ptr) ::pb::ImpliedVolSlice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::ImpliedVolSlice::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ImpliedVolSlice =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsImpliedVolSlice}, {
      &protobuf_marketdata_2eproto::scc_info_ImpliedVolQuote.base,}};

static void InitDefaultsImpliedVolSurface() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_ImpliedVolSurface_default_instance_;
    new (ptr) ::pb::ImpliedVolSurface();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::ImpliedVolSurface::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ImpliedVolSurface =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsImpliedVolSurface}, {
      &protobuf_marketdata_2eproto::scc_info_ImpliedVolSlice.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Index.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Spot.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RiskFreeRate.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FlatVol.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OptionQuote.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OptionQuoteSlice.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OptionMarket.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ImpliedVolQuote.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ImpliedVolSlice.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ImpliedVolSurface.base);
}

::google::protobuf::Metadata file_level_metadata[10];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Index, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Index, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Index, ticker_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Index, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Spot, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Spot, index_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::RiskFreeRate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::RiskFreeRate, index_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::FlatVol, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::FlatVol, index_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OptionQuote, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OptionQuote, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OptionQuote, strike_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OptionQuote, bid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OptionQuote, ask_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OptionQuote, volume_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OptionQuote, openinterest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OptionQuote, putcall_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OptionQuoteSlice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OptionQuoteSlice, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OptionQuoteSlice, expiry_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OptionQuoteSlice, puts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OptionQuoteSlice, calls_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OptionMarket, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OptionMarket, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OptionMarket, spot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OptionMarket, vol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::OptionMarket, rate_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::ImpliedVolQuote, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::ImpliedVolQuote, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::ImpliedVolQuote, input_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::ImpliedVolQuote, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::ImpliedVolQuote, vol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::ImpliedVolQuote, nbiteration_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::ImpliedVolSlice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::ImpliedVolSlice, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::ImpliedVolSlice, iserror_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::ImpliedVolSlice, expiry_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::ImpliedVolSlice, quotes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::ImpliedVolSurface, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::ImpliedVolSurface, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::ImpliedVolSurface, slices_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::pb::Index)},
  { 8, -1, sizeof(::pb::Spot)},
  { 14, -1, sizeof(::pb::RiskFreeRate)},
  { 20, -1, sizeof(::pb::FlatVol)},
  { 26, -1, sizeof(::pb::OptionQuote)},
  { 38, -1, sizeof(::pb::OptionQuoteSlice)},
  { 47, -1, sizeof(::pb::OptionMarket)},
  { 56, -1, sizeof(::pb::ImpliedVolQuote)},
  { 66, -1, sizeof(::pb::ImpliedVolSlice)},
  { 75, -1, sizeof(::pb::ImpliedVolSurface)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_Index_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_Spot_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_RiskFreeRate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_FlatVol_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_OptionQuote_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_OptionQuoteSlice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_OptionMarket_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_ImpliedVolQuote_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_ImpliedVolSlice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_ImpliedVolSurface_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "marketdata.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 10);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\020marketdata.proto\022\002pb\"9\n\005Index\022\021\n\ttimes"
      "tamp\030\001 \001(\001\022\016\n\006ticker\030\002 \001(\t\022\r\n\005value\030\003 \001("
      "\001\" \n\004Spot\022\030\n\005index\030\001 \001(\0132\t.pb.Index\"(\n\014R"
      "iskFreeRate\022\030\n\005index\030\001 \001(\0132\t.pb.Index\"#\n"
      "\007FlatVol\022\030\n\005index\030\001 \001(\0132\t.pb.Index\"\201\001\n\013O"
      "ptionQuote\022\021\n\ttimestamp\030\001 \001(\001\022\016\n\006strike\030"
      "\010 \001(\001\022\013\n\003bid\030\t \001(\001\022\013\n\003ask\030\n \001(\001\022\016\n\006volum"
      "e\030\013 \001(\001\022\024\n\014openinterest\030\014 \001(\001\022\017\n\007putcall"
      "\030\r \001(\t\"t\n\020OptionQuoteSlice\022\021\n\ttimestamp\030"
      "\001 \001(\001\022\016\n\006expiry\030\002 \001(\001\022\035\n\004puts\030\003 \003(\0132\017.pb"
      ".OptionQuote\022\036\n\005calls\030\004 \003(\0132\017.pb.OptionQ"
      "uote\"s\n\014OptionMarket\022\021\n\ttimestamp\030\001 \001(\001\022"
      "\026\n\004spot\030\002 \001(\0132\010.pb.Spot\022\030\n\003vol\030\003 \001(\0132\013.p"
      "b.FlatVol\022\036\n\004rate\030\004 \001(\0132\020.pb.RiskFreeRat"
      "e\"u\n\017ImpliedVolQuote\022\021\n\ttimestamp\030\001 \001(\001\022"
      "\036\n\005input\030\002 \001(\0132\017.pb.OptionQuote\022\r\n\005error"
      "\030\003 \001(\t\022\013\n\003vol\030\004 \001(\001\022\023\n\013nbiteration\030\005 \001(\003"
      "\"j\n\017ImpliedVolSlice\022\021\n\ttimestamp\030\001 \001(\001\022\017"
      "\n\007iserror\030\002 \001(\010\022\016\n\006expiry\030\003 \001(\001\022#\n\006quote"
      "s\030\004 \003(\0132\023.pb.ImpliedVolQuote\"K\n\021ImpliedV"
      "olSurface\022\021\n\ttimestamp\030\001 \001(\001\022#\n\006slices\030\002"
      " \003(\0132\023.pb.ImpliedVolSliceb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 873);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "marketdata.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_marketdata_2eproto
namespace pb {

// ===================================================================

void Index::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Index::kTimestampFieldNumber;
const int Index::kTickerFieldNumber;
const int Index::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Index::Index()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_marketdata_2eproto::scc_info_Index.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.Index)
}
Index::Index(const Index& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ticker_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ticker().size() > 0) {
    ticker_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ticker_);
  }
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:pb.Index)
}

void Index::SharedCtor() {
  ticker_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(value_));
}

Index::~Index() {
  // @@protoc_insertion_point(destructor:pb.Index)
  SharedDtor();
}

void Index::SharedDtor() {
  ticker_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Index::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Index::descriptor() {
  ::protobuf_marketdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_marketdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Index& Index::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_marketdata_2eproto::scc_info_Index.base);
  return *internal_default_instance();
}


void Index::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.Index)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ticker_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(value_));
  _internal_metadata_.Clear();
}

bool Index::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.Index)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ticker = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ticker()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ticker().data(), static_cast<int>(this->ticker().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Index.ticker"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.Index)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.Index)
  return false;
#undef DO_
}

void Index::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.Index)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double timestamp = 1;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->timestamp(), output);
  }

  // string ticker = 2;
  if (this->ticker().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ticker().data(), static_cast<int>(this->ticker().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Index.ticker");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->ticker(), output);
  }

  // double value = 3;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.Index)
}

::google::protobuf::uint8* Index::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.Index)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double timestamp = 1;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->timestamp(), target);
  }

  // string ticker = 2;
  if (this->ticker().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ticker().data(), static_cast<int>(this->ticker().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Index.ticker");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->ticker(), target);
  }

  // double value = 3;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.Index)
  return target;
}

size_t Index::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.Index)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ticker = 2;
  if (this->ticker().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ticker());
  }

  // double timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 + 8;
  }

  // double value = 3;
  if (this->value() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Index::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.Index)
  GOOGLE_DCHECK_NE(&from, this);
  const Index* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Index>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.Index)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.Index)
    MergeFrom(*source);
  }
}

void Index::MergeFrom(const Index& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.Index)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ticker().size() > 0) {

    ticker_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ticker_);
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Index::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.Index)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Index::CopyFrom(const Index& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.Index)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Index::IsInitialized() const {
  return true;
}

void Index::Swap(Index* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Index::InternalSwap(Index* other) {
  using std::swap;
  ticker_.Swap(&other->ticker_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(timestamp_, other->timestamp_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Index::GetMetadata() const {
  protobuf_marketdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_marketdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Spot::InitAsDefaultInstance() {
  ::pb::_Spot_default_instance_._instance.get_mutable()->index_ = const_cast< ::pb::Index*>(
      ::pb::Index::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Spot::kIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Spot::Spot()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_marketdata_2eproto::scc_info_Spot.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.Spot)
}
Spot::Spot(const Spot& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_index()) {
    index_ = new ::pb::Index(*from.index_);
  } else {
    index_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:pb.Spot)
}

void Spot::SharedCtor() {
  index_ = NULL;
}

Spot::~Spot() {
  // @@protoc_insertion_point(destructor:pb.Spot)
  SharedDtor();
}

void Spot::SharedDtor() {
  if (this != internal_default_instance()) delete index_;
}

void Spot::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Spot::descriptor() {
  ::protobuf_marketdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_marketdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Spot& Spot::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_marketdata_2eproto::scc_info_Spot.base);
  return *internal_default_instance();
}


void Spot::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.Spot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && index_ != NULL) {
    delete index_;
  }
  index_ = NULL;
  _internal_metadata_.Clear();
}

bool Spot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.Spot)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .pb.Index index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_index()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.Spot)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.Spot)
  return false;
#undef DO_
}

void Spot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.Spot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pb.Index index = 1;
  if (this->has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_index(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.Spot)
}

::google::protobuf::uint8* Spot::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.Spot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pb.Index index = 1;
  if (this->has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_index(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.Spot)
  return target;
}

size_t Spot::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.Spot)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .pb.Index index = 1;
  if (this->has_index()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *index_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Spot::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.Spot)
  GOOGLE_DCHECK_NE(&from, this);
  const Spot* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Spot>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.Spot)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.Spot)
    MergeFrom(*source);
  }
}

void Spot::MergeFrom(const Spot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.Spot)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_index()) {
    mutable_index()->::pb::Index::MergeFrom(from.index());
  }
}

void Spot::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.Spot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Spot::CopyFrom(const Spot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.Spot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Spot::IsInitialized() const {
  return true;
}

void Spot::Swap(Spot* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Spot::InternalSwap(Spot* other) {
  using std::swap;
  swap(index_, other->index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Spot::GetMetadata() const {
  protobuf_marketdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_marketdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RiskFreeRate::InitAsDefaultInstance() {
  ::pb::_RiskFreeRate_default_instance_._instance.get_mutable()->index_ = const_cast< ::pb::Index*>(
      ::pb::Index::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RiskFreeRate::kIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RiskFreeRate::RiskFreeRate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_marketdata_2eproto::scc_info_RiskFreeRate.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.RiskFreeRate)
}
RiskFreeRate::RiskFreeRate(const RiskFreeRate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_index()) {
    index_ = new ::pb::Index(*from.index_);
  } else {
    index_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:pb.RiskFreeRate)
}

void RiskFreeRate::SharedCtor() {
  index_ = NULL;
}

RiskFreeRate::~RiskFreeRate() {
  // @@protoc_insertion_point(destructor:pb.RiskFreeRate)
  SharedDtor();
}

void RiskFreeRate::SharedDtor() {
  if (this != internal_default_instance()) delete index_;
}

void RiskFreeRate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RiskFreeRate::descriptor() {
  ::protobuf_marketdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_marketdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RiskFreeRate& RiskFreeRate::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_marketdata_2eproto::scc_info_RiskFreeRate.base);
  return *internal_default_instance();
}


void RiskFreeRate::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.RiskFreeRate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && index_ != NULL) {
    delete index_;
  }
  index_ = NULL;
  _internal_metadata_.Clear();
}

bool RiskFreeRate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.RiskFreeRate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .pb.Index index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_index()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.RiskFreeRate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.RiskFreeRate)
  return false;
#undef DO_
}

void RiskFreeRate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.RiskFreeRate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pb.Index index = 1;
  if (this->has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_index(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.RiskFreeRate)
}

::google::protobuf::uint8* RiskFreeRate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.RiskFreeRate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pb.Index index = 1;
  if (this->has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_index(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.RiskFreeRate)
  return target;
}

size_t RiskFreeRate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.RiskFreeRate)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .pb.Index index = 1;
  if (this->has_index()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *index_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RiskFreeRate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.RiskFreeRate)
  GOOGLE_DCHECK_NE(&from, this);
  const RiskFreeRate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RiskFreeRate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.RiskFreeRate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.RiskFreeRate)
    MergeFrom(*source);
  }
}

void RiskFreeRate::MergeFrom(const RiskFreeRate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.RiskFreeRate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_index()) {
    mutable_index()->::pb::Index::MergeFrom(from.index());
  }
}

void RiskFreeRate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.RiskFreeRate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RiskFreeRate::CopyFrom(const RiskFreeRate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.RiskFreeRate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RiskFreeRate::IsInitialized() const {
  return true;
}

void RiskFreeRate::Swap(RiskFreeRate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RiskFreeRate::InternalSwap(RiskFreeRate* other) {
  using std::swap;
  swap(index_, other->index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RiskFreeRate::GetMetadata() const {
  protobuf_marketdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_marketdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FlatVol::InitAsDefaultInstance() {
  ::pb::_FlatVol_default_instance_._instance.get_mutable()->index_ = const_cast< ::pb::Index*>(
      ::pb::Index::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FlatVol::kIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FlatVol::FlatVol()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_marketdata_2eproto::scc_info_FlatVol.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.FlatVol)
}
FlatVol::FlatVol(const FlatVol& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_index()) {
    index_ = new ::pb::Index(*from.index_);
  } else {
    index_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:pb.FlatVol)
}

void FlatVol::SharedCtor() {
  index_ = NULL;
}

FlatVol::~FlatVol() {
  // @@protoc_insertion_point(destructor:pb.FlatVol)
  SharedDtor();
}

void FlatVol::SharedDtor() {
  if (this != internal_default_instance()) delete index_;
}

void FlatVol::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FlatVol::descriptor() {
  ::protobuf_marketdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_marketdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FlatVol& FlatVol::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_marketdata_2eproto::scc_info_FlatVol.base);
  return *internal_default_instance();
}


void FlatVol::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.FlatVol)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && index_ != NULL) {
    delete index_;
  }
  index_ = NULL;
  _internal_metadata_.Clear();
}

bool FlatVol::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.FlatVol)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .pb.Index index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_index()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.FlatVol)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.FlatVol)
  return false;
#undef DO_
}

void FlatVol::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.FlatVol)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pb.Index index = 1;
  if (this->has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_index(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.FlatVol)
}

::google::protobuf::uint8* FlatVol::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.FlatVol)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pb.Index index = 1;
  if (this->has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_index(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.FlatVol)
  return target;
}

size_t FlatVol::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.FlatVol)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .pb.Index index = 1;
  if (this->has_index()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *index_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FlatVol::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.FlatVol)
  GOOGLE_DCHECK_NE(&from, this);
  const FlatVol* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FlatVol>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.FlatVol)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.FlatVol)
    MergeFrom(*source);
  }
}

void FlatVol::MergeFrom(const FlatVol& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.FlatVol)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_index()) {
    mutable_index()->::pb::Index::MergeFrom(from.index());
  }
}

void FlatVol::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.FlatVol)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FlatVol::CopyFrom(const FlatVol& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.FlatVol)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FlatVol::IsInitialized() const {
  return true;
}

void FlatVol::Swap(FlatVol* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FlatVol::InternalSwap(FlatVol* other) {
  using std::swap;
  swap(index_, other->index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FlatVol::GetMetadata() const {
  protobuf_marketdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_marketdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OptionQuote::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OptionQuote::kTimestampFieldNumber;
const int OptionQuote::kStrikeFieldNumber;
const int OptionQuote::kBidFieldNumber;
const int OptionQuote::kAskFieldNumber;
const int OptionQuote::kVolumeFieldNumber;
const int OptionQuote::kOpeninterestFieldNumber;
const int OptionQuote::kPutcallFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OptionQuote::OptionQuote()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_marketdata_2eproto::scc_info_OptionQuote.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.OptionQuote)
}
OptionQuote::OptionQuote(const OptionQuote& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  putcall_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.putcall().size() > 0) {
    putcall_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.putcall_);
  }
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&openinterest_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(openinterest_));
  // @@protoc_insertion_point(copy_constructor:pb.OptionQuote)
}

void OptionQuote::SharedCtor() {
  putcall_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&openinterest_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(openinterest_));
}

OptionQuote::~OptionQuote() {
  // @@protoc_insertion_point(destructor:pb.OptionQuote)
  SharedDtor();
}

void OptionQuote::SharedDtor() {
  putcall_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OptionQuote::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OptionQuote::descriptor() {
  ::protobuf_marketdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_marketdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OptionQuote& OptionQuote::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_marketdata_2eproto::scc_info_OptionQuote.base);
  return *internal_default_instance();
}


void OptionQuote::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.OptionQuote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  putcall_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&openinterest_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(openinterest_));
  _internal_metadata_.Clear();
}

bool OptionQuote::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.OptionQuote)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double strike = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &strike_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double bid = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &bid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double ask = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ask_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double volume = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 89 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &volume_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double openinterest = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(97u /* 97 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &openinterest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string putcall = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_putcall()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->putcall().data(), static_cast<int>(this->putcall().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.OptionQuote.putcall"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.OptionQuote)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.OptionQuote)
  return false;
#undef DO_
}

void OptionQuote::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.OptionQuote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double timestamp = 1;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->timestamp(), output);
  }

  // double strike = 8;
  if (this->strike() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->strike(), output);
  }

  // double bid = 9;
  if (this->bid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->bid(), output);
  }

  // double ask = 10;
  if (this->ask() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->ask(), output);
  }

  // double volume = 11;
  if (this->volume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->volume(), output);
  }

  // double openinterest = 12;
  if (this->openinterest() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->openinterest(), output);
  }

  // string putcall = 13;
  if (this->putcall().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->putcall().data(), static_cast<int>(this->putcall().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.OptionQuote.putcall");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->putcall(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.OptionQuote)
}

::google::protobuf::uint8* OptionQuote::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.OptionQuote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double timestamp = 1;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->timestamp(), target);
  }

  // double strike = 8;
  if (this->strike() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->strike(), target);
  }

  // double bid = 9;
  if (this->bid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->bid(), target);
  }

  // double ask = 10;
  if (this->ask() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->ask(), target);
  }

  // double volume = 11;
  if (this->volume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->volume(), target);
  }

  // double openinterest = 12;
  if (this->openinterest() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->openinterest(), target);
  }

  // string putcall = 13;
  if (this->putcall().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->putcall().data(), static_cast<int>(this->putcall().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.OptionQuote.putcall");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->putcall(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.OptionQuote)
  return target;
}

size_t OptionQuote::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.OptionQuote)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string putcall = 13;
  if (this->putcall().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->putcall());
  }

  // double timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 + 8;
  }

  // double strike = 8;
  if (this->strike() != 0) {
    total_size += 1 + 8;
  }

  // double bid = 9;
  if (this->bid() != 0) {
    total_size += 1 + 8;
  }

  // double ask = 10;
  if (this->ask() != 0) {
    total_size += 1 + 8;
  }

  // double volume = 11;
  if (this->volume() != 0) {
    total_size += 1 + 8;
  }

  // double openinterest = 12;
  if (this->openinterest() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OptionQuote::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.OptionQuote)
  GOOGLE_DCHECK_NE(&from, this);
  const OptionQuote* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OptionQuote>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.OptionQuote)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.OptionQuote)
    MergeFrom(*source);
  }
}

void OptionQuote::MergeFrom(const OptionQuote& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.OptionQuote)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.putcall().size() > 0) {

    putcall_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.putcall_);
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.strike() != 0) {
    set_strike(from.strike());
  }
  if (from.bid() != 0) {
    set_bid(from.bid());
  }
  if (from.ask() != 0) {
    set_ask(from.ask());
  }
  if (from.volume() != 0) {
    set_volume(from.volume());
  }
  if (from.openinterest() != 0) {
    set_openinterest(from.openinterest());
  }
}

void OptionQuote::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.OptionQuote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OptionQuote::CopyFrom(const OptionQuote& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.OptionQuote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OptionQuote::IsInitialized() const {
  return true;
}

void OptionQuote::Swap(OptionQuote* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OptionQuote::InternalSwap(OptionQuote* other) {
  using std::swap;
  putcall_.Swap(&other->putcall_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(timestamp_, other->timestamp_);
  swap(strike_, other->strike_);
  swap(bid_, other->bid_);
  swap(ask_, other->ask_);
  swap(volume_, other->volume_);
  swap(openinterest_, other->openinterest_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OptionQuote::GetMetadata() const {
  protobuf_marketdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_marketdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OptionQuoteSlice::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OptionQuoteSlice::kTimestampFieldNumber;
const int OptionQuoteSlice::kExpiryFieldNumber;
const int OptionQuoteSlice::kPutsFieldNumber;
const int OptionQuoteSlice::kCallsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OptionQuoteSlice::OptionQuoteSlice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_marketdata_2eproto::scc_info_OptionQuoteSlice.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.OptionQuoteSlice)
}
OptionQuoteSlice::OptionQuoteSlice(const OptionQuoteSlice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      puts_(from.puts_),
      calls_(from.calls_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&expiry_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(expiry_));
  // @@protoc_insertion_point(copy_constructor:pb.OptionQuoteSlice)
}

void OptionQuoteSlice::SharedCtor() {
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expiry_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(expiry_));
}

OptionQuoteSlice::~OptionQuoteSlice() {
  // @@protoc_insertion_point(destructor:pb.OptionQuoteSlice)
  SharedDtor();
}

void OptionQuoteSlice::SharedDtor() {
}

void OptionQuoteSlice::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OptionQuoteSlice::descriptor() {
  ::protobuf_marketdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_marketdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OptionQuoteSlice& OptionQuoteSlice::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_marketdata_2eproto::scc_info_OptionQuoteSlice.base);
  return *internal_default_instance();
}


void OptionQuoteSlice::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.OptionQuoteSlice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  puts_.Clear();
  calls_.Clear();
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expiry_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(expiry_));
  _internal_metadata_.Clear();
}

bool OptionQuoteSlice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.OptionQuoteSlice)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double expiry = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &expiry_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .pb.OptionQuote puts = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_puts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .pb.OptionQuote calls = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_calls()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.OptionQuoteSlice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.OptionQuoteSlice)
  return false;
#undef DO_
}

void OptionQuoteSlice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.OptionQuoteSlice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double timestamp = 1;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->timestamp(), output);
  }

  // double expiry = 2;
  if (this->expiry() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->expiry(), output);
  }

  // repeated .pb.OptionQuote puts = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->puts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->puts(static_cast<int>(i)),
      output);
  }

  // repeated .pb.OptionQuote calls = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->calls_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->calls(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.OptionQuoteSlice)
}

::google::protobuf::uint8* OptionQuoteSlice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.OptionQuoteSlice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double timestamp = 1;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->timestamp(), target);
  }

  // double expiry = 2;
  if (this->expiry() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->expiry(), target);
  }

  // repeated .pb.OptionQuote puts = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->puts_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->puts(static_cast<int>(i)), deterministic, target);
  }

  // repeated .pb.OptionQuote calls = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->calls_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->calls(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.OptionQuoteSlice)
  return target;
}

size_t OptionQuoteSlice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.OptionQuoteSlice)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .pb.OptionQuote puts = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->puts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->puts(static_cast<int>(i)));
    }
  }

  // repeated .pb.OptionQuote calls = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->calls_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->calls(static_cast<int>(i)));
    }
  }

  // double timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 + 8;
  }

  // double expiry = 2;
  if (this->expiry() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OptionQuoteSlice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.OptionQuoteSlice)
  GOOGLE_DCHECK_NE(&from, this);
  const OptionQuoteSlice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OptionQuoteSlice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.OptionQuoteSlice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.OptionQuoteSlice)
    MergeFrom(*source);
  }
}

void OptionQuoteSlice::MergeFrom(const OptionQuoteSlice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.OptionQuoteSlice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  puts_.MergeFrom(from.puts_);
  calls_.MergeFrom(from.calls_);
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.expiry() != 0) {
    set_expiry(from.expiry());
  }
}

void OptionQuoteSlice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.OptionQuoteSlice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OptionQuoteSlice::CopyFrom(const OptionQuoteSlice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.OptionQuoteSlice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OptionQuoteSlice::IsInitialized() const {
  return true;
}

void OptionQuoteSlice::Swap(OptionQuoteSlice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OptionQuoteSlice::InternalSwap(OptionQuoteSlice* other) {
  using std::swap;
  CastToBase(&puts_)->InternalSwap(CastToBase(&other->puts_));
  CastToBase(&calls_)->InternalSwap(CastToBase(&other->calls_));
  swap(timestamp_, other->timestamp_);
  swap(expiry_, other->expiry_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OptionQuoteSlice::GetMetadata() const {
  protobuf_marketdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_marketdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OptionMarket::InitAsDefaultInstance() {
  ::pb::_OptionMarket_default_instance_._instance.get_mutable()->spot_ = const_cast< ::pb::Spot*>(
      ::pb::Spot::internal_default_instance());
  ::pb::_OptionMarket_default_instance_._instance.get_mutable()->vol_ = const_cast< ::pb::FlatVol*>(
      ::pb::FlatVol::internal_default_instance());
  ::pb::_OptionMarket_default_instance_._instance.get_mutable()->rate_ = const_cast< ::pb::RiskFreeRate*>(
      ::pb::RiskFreeRate::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OptionMarket::kTimestampFieldNumber;
const int OptionMarket::kSpotFieldNumber;
const int OptionMarket::kVolFieldNumber;
const int OptionMarket::kRateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OptionMarket::OptionMarket()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_marketdata_2eproto::scc_info_OptionMarket.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.OptionMarket)
}
OptionMarket::OptionMarket(const OptionMarket& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_spot()) {
    spot_ = new ::pb::Spot(*from.spot_);
  } else {
    spot_ = NULL;
  }
  if (from.has_vol()) {
    vol_ = new ::pb::FlatVol(*from.vol_);
  } else {
    vol_ = NULL;
  }
  if (from.has_rate()) {
    rate_ = new ::pb::RiskFreeRate(*from.rate_);
  } else {
    rate_ = NULL;
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:pb.OptionMarket)
}

void OptionMarket::SharedCtor() {
  ::memset(&spot_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&spot_)) + sizeof(timestamp_));
}

OptionMarket::~OptionMarket() {
  // @@protoc_insertion_point(destructor:pb.OptionMarket)
  SharedDtor();
}

void OptionMarket::SharedDtor() {
  if (this != internal_default_instance()) delete spot_;
  if (this != internal_default_instance()) delete vol_;
  if (this != internal_default_instance()) delete rate_;
}

void OptionMarket::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OptionMarket::descriptor() {
  ::protobuf_marketdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_marketdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OptionMarket& OptionMarket::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_marketdata_2eproto::scc_info_OptionMarket.base);
  return *internal_default_instance();
}


void OptionMarket::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.OptionMarket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && spot_ != NULL) {
    delete spot_;
  }
  spot_ = NULL;
  if (GetArenaNoVirtual() == NULL && vol_ != NULL) {
    delete vol_;
  }
  vol_ = NULL;
  if (GetArenaNoVirtual() == NULL && rate_ != NULL) {
    delete rate_;
  }
  rate_ = NULL;
  timestamp_ = 0;
  _internal_metadata_.Clear();
}

bool OptionMarket::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.OptionMarket)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.Spot spot = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_spot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.FlatVol vol = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vol()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.RiskFreeRate rate = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.OptionMarket)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.OptionMarket)
  return false;
#undef DO_
}

void OptionMarket::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.OptionMarket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double timestamp = 1;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->timestamp(), output);
  }

  // .pb.Spot spot = 2;
  if (this->has_spot()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_spot(), output);
  }

  // .pb.FlatVol vol = 3;
  if (this->has_vol()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_vol(), output);
  }

  // .pb.RiskFreeRate rate = 4;
  if (this->has_rate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_rate(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.OptionMarket)
}

::google::protobuf::uint8* OptionMarket::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.OptionMarket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double timestamp = 1;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->timestamp(), target);
  }

  // .pb.Spot spot = 2;
  if (this->has_spot()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_spot(), deterministic, target);
  }

  // .pb.FlatVol vol = 3;
  if (this->has_vol()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_vol(), deterministic, target);
  }

  // .pb.RiskFreeRate rate = 4;
  if (this->has_rate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_rate(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.OptionMarket)
  return target;
}

size_t OptionMarket::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.OptionMarket)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .pb.Spot spot = 2;
  if (this->has_spot()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *spot_);
  }

  // .pb.FlatVol vol = 3;
  if (this->has_vol()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *vol_);
  }

  // .pb.RiskFreeRate rate = 4;
  if (this->has_rate()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *rate_);
  }

  // double timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OptionMarket::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.OptionMarket)
  GOOGLE_DCHECK_NE(&from, this);
  const OptionMarket* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OptionMarket>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.OptionMarket)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.OptionMarket)
    MergeFrom(*source);
  }
}

void OptionMarket::MergeFrom(const OptionMarket& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.OptionMarket)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_spot()) {
    mutable_spot()->::pb::Spot::MergeFrom(from.spot());
  }
  if (from.has_vol()) {
    mutable_vol()->::pb::FlatVol::MergeFrom(from.vol());
  }
  if (from.has_rate()) {
    mutable_rate()->::pb::RiskFreeRate::MergeFrom(from.rate());
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void OptionMarket::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.OptionMarket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OptionMarket::CopyFrom(const OptionMarket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.OptionMarket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OptionMarket::IsInitialized() const {
  return true;
}

void OptionMarket::Swap(OptionMarket* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OptionMarket::InternalSwap(OptionMarket* other) {
  using std::swap;
  swap(spot_, other->spot_);
  swap(vol_, other->vol_);
  swap(rate_, other->rate_);
  swap(timestamp_, other->timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OptionMarket::GetMetadata() const {
  protobuf_marketdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_marketdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ImpliedVolQuote::InitAsDefaultInstance() {
  ::pb::_ImpliedVolQuote_default_instance_._instance.get_mutable()->input_ = const_cast< ::pb::OptionQuote*>(
      ::pb::OptionQuote::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImpliedVolQuote::kTimestampFieldNumber;
const int ImpliedVolQuote::kInputFieldNumber;
const int ImpliedVolQuote::kErrorFieldNumber;
const int ImpliedVolQuote::kVolFieldNumber;
const int ImpliedVolQuote::kNbiterationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImpliedVolQuote::ImpliedVolQuote()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_marketdata_2eproto::scc_info_ImpliedVolQuote.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.ImpliedVolQuote)
}
ImpliedVolQuote::ImpliedVolQuote(const ImpliedVolQuote& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error().size() > 0) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.has_input()) {
    input_ = new ::pb::OptionQuote(*from.input_);
  } else {
    input_ = NULL;
  }
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&nbiteration_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(nbiteration_));
  // @@protoc_insertion_point(copy_constructor:pb.ImpliedVolQuote)
}

void ImpliedVolQuote::SharedCtor() {
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&input_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nbiteration_) -
      reinterpret_cast<char*>(&input_)) + sizeof(nbiteration_));
}

ImpliedVolQuote::~ImpliedVolQuote() {
  // @@protoc_insertion_point(destructor:pb.ImpliedVolQuote)
  SharedDtor();
}

void ImpliedVolQuote::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete input_;
}

void ImpliedVolQuote::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ImpliedVolQuote::descriptor() {
  ::protobuf_marketdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_marketdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImpliedVolQuote& ImpliedVolQuote::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_marketdata_2eproto::scc_info_ImpliedVolQuote.base);
  return *internal_default_instance();
}


void ImpliedVolQuote::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.ImpliedVolQuote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && input_ != NULL) {
    delete input_;
  }
  input_ = NULL;
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nbiteration_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(nbiteration_));
  _internal_metadata_.Clear();
}

bool ImpliedVolQuote::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.ImpliedVolQuote)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.OptionQuote input = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_input()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.ImpliedVolQuote.error"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double vol = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vol_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 nbiteration = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &nbiteration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.ImpliedVolQuote)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.ImpliedVolQuote)
  return false;
#undef DO_
}

void ImpliedVolQuote::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.ImpliedVolQuote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double timestamp = 1;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->timestamp(), output);
  }

  // .pb.OptionQuote input = 2;
  if (this->has_input()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_input(), output);
  }

  // string error = 3;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.ImpliedVolQuote.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->error(), output);
  }

  // double vol = 4;
  if (this->vol() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->vol(), output);
  }

  // int64 nbiteration = 5;
  if (this->nbiteration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->nbiteration(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.ImpliedVolQuote)
}

::google::protobuf::uint8* ImpliedVolQuote::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.ImpliedVolQuote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double timestamp = 1;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->timestamp(), target);
  }

  // .pb.OptionQuote input = 2;
  if (this->has_input()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_input(), deterministic, target);
  }

  // string error = 3;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.ImpliedVolQuote.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->error(), target);
  }

  // double vol = 4;
  if (this->vol() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->vol(), target);
  }

  // int64 nbiteration = 5;
  if (this->nbiteration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->nbiteration(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.ImpliedVolQuote)
  return target;
}

size_t ImpliedVolQuote::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.ImpliedVolQuote)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string error = 3;
  if (this->error().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  // .pb.OptionQuote input = 2;
  if (this->has_input()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *input_);
  }

  // double timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 + 8;
  }

  // double vol = 4;
  if (this->vol() != 0) {
    total_size += 1 + 8;
  }

  // int64 nbiteration = 5;
  if (this->nbiteration() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->nbiteration());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImpliedVolQuote::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.ImpliedVolQuote)
  GOOGLE_DCHECK_NE(&from, this);
  const ImpliedVolQuote* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImpliedVolQuote>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.ImpliedVolQuote)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.ImpliedVolQuote)
    MergeFrom(*source);
  }
}

void ImpliedVolQuote::MergeFrom(const ImpliedVolQuote& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.ImpliedVolQuote)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error().size() > 0) {

    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.has_input()) {
    mutable_input()->::pb::OptionQuote::MergeFrom(from.input());
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.vol() != 0) {
    set_vol(from.vol());
  }
  if (from.nbiteration() != 0) {
    set_nbiteration(from.nbiteration());
  }
}

void ImpliedVolQuote::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.ImpliedVolQuote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImpliedVolQuote::CopyFrom(const ImpliedVolQuote& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.ImpliedVolQuote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImpliedVolQuote::IsInitialized() const {
  return true;
}

void ImpliedVolQuote::Swap(ImpliedVolQuote* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImpliedVolQuote::InternalSwap(ImpliedVolQuote* other) {
  using std::swap;
  error_.Swap(&other->error_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(input_, other->input_);
  swap(timestamp_, other->timestamp_);
  swap(vol_, other->vol_);
  swap(nbiteration_, other->nbiteration_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ImpliedVolQuote::GetMetadata() const {
  protobuf_marketdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_marketdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ImpliedVolSlice::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImpliedVolSlice::kTimestampFieldNumber;
const int ImpliedVolSlice::kIserrorFieldNumber;
const int ImpliedVolSlice::kExpiryFieldNumber;
const int ImpliedVolSlice::kQuotesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImpliedVolSlice::ImpliedVolSlice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_marketdata_2eproto::scc_info_ImpliedVolSlice.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.ImpliedVolSlice)
}
ImpliedVolSlice::ImpliedVolSlice(const ImpliedVolSlice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      quotes_(from.quotes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&iserror_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(iserror_));
  // @@protoc_insertion_point(copy_constructor:pb.ImpliedVolSlice)
}

void ImpliedVolSlice::SharedCtor() {
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&iserror_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(iserror_));
}

ImpliedVolSlice::~ImpliedVolSlice() {
  // @@protoc_insertion_point(destructor:pb.ImpliedVolSlice)
  SharedDtor();
}

void ImpliedVolSlice::SharedDtor() {
}

void ImpliedVolSlice::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ImpliedVolSlice::descriptor() {
  ::protobuf_marketdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_marketdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImpliedVolSlice& ImpliedVolSlice::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_marketdata_2eproto::scc_info_ImpliedVolSlice.base);
  return *internal_default_instance();
}


void ImpliedVolSlice::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.ImpliedVolSlice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  quotes_.Clear();
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&iserror_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(iserror_));
  _internal_metadata_.Clear();
}

bool ImpliedVolSlice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.ImpliedVolSlice)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool iserror = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &iserror_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double expiry = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &expiry_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .pb.ImpliedVolQuote quotes = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_quotes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.ImpliedVolSlice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.ImpliedVolSlice)
  return false;
#undef DO_
}

void ImpliedVolSlice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.ImpliedVolSlice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double timestamp = 1;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->timestamp(), output);
  }

  // bool iserror = 2;
  if (this->iserror() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->iserror(), output);
  }

  // double expiry = 3;
  if (this->expiry() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->expiry(), output);
  }

  // repeated .pb.ImpliedVolQuote quotes = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->quotes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->quotes(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.ImpliedVolSlice)
}

::google::protobuf::uint8* ImpliedVolSlice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.ImpliedVolSlice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double timestamp = 1;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->timestamp(), target);
  }

  // bool iserror = 2;
  if (this->iserror() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->iserror(), target);
  }

  // double expiry = 3;
  if (this->expiry() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->expiry(), target);
  }

  // repeated .pb.ImpliedVolQuote quotes = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->quotes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->quotes(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.ImpliedVolSlice)
  return target;
}

size_t ImpliedVolSlice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.ImpliedVolSlice)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .pb.ImpliedVolQuote quotes = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->quotes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->quotes(static_cast<int>(i)));
    }
  }

  // double timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 + 8;
  }

  // double expiry = 3;
  if (this->expiry() != 0) {
    total_size += 1 + 8;
  }

  // bool iserror = 2;
  if (this->iserror() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImpliedVolSlice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.ImpliedVolSlice)
  GOOGLE_DCHECK_NE(&from, this);
  const ImpliedVolSlice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImpliedVolSlice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.ImpliedVolSlice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.ImpliedVolSlice)
    MergeFrom(*source);
  }
}

void ImpliedVolSlice::MergeFrom(const ImpliedVolSlice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.ImpliedVolSlice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  quotes_.MergeFrom(from.quotes_);
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.expiry() != 0) {
    set_expiry(from.expiry());
  }
  if (from.iserror() != 0) {
    set_iserror(from.iserror());
  }
}

void ImpliedVolSlice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.ImpliedVolSlice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImpliedVolSlice::CopyFrom(const ImpliedVolSlice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.ImpliedVolSlice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImpliedVolSlice::IsInitialized() const {
  return true;
}

void ImpliedVolSlice::Swap(ImpliedVolSlice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImpliedVolSlice::InternalSwap(ImpliedVolSlice* other) {
  using std::swap;
  CastToBase(&quotes_)->InternalSwap(CastToBase(&other->quotes_));
  swap(timestamp_, other->timestamp_);
  swap(expiry_, other->expiry_);
  swap(iserror_, other->iserror_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ImpliedVolSlice::GetMetadata() const {
  protobuf_marketdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_marketdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ImpliedVolSurface::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImpliedVolSurface::kTimestampFieldNumber;
const int ImpliedVolSurface::kSlicesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImpliedVolSurface::ImpliedVolSurface()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_marketdata_2eproto::scc_info_ImpliedVolSurface.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.ImpliedVolSurface)
}
ImpliedVolSurface::ImpliedVolSurface(const ImpliedVolSurface& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      slices_(from.slices_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:pb.ImpliedVolSurface)
}

void ImpliedVolSurface::SharedCtor() {
  timestamp_ = 0;
}

ImpliedVolSurface::~ImpliedVolSurface() {
  // @@protoc_insertion_point(destructor:pb.ImpliedVolSurface)
  SharedDtor();
}

void ImpliedVolSurface::SharedDtor() {
}

void ImpliedVolSurface::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ImpliedVolSurface::descriptor() {
  ::protobuf_marketdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_marketdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImpliedVolSurface& ImpliedVolSurface::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_marketdata_2eproto::scc_info_ImpliedVolSurface.base);
  return *internal_default_instance();
}


void ImpliedVolSurface::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.ImpliedVolSurface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  slices_.Clear();
  timestamp_ = 0;
  _internal_metadata_.Clear();
}

bool ImpliedVolSurface::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.ImpliedVolSurface)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .pb.ImpliedVolSlice slices = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_slices()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.ImpliedVolSurface)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.ImpliedVolSurface)
  return false;
#undef DO_
}

void ImpliedVolSurface::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.ImpliedVolSurface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double timestamp = 1;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->timestamp(), output);
  }

  // repeated .pb.ImpliedVolSlice slices = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->slices_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->slices(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.ImpliedVolSurface)
}

::google::protobuf::uint8* ImpliedVolSurface::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.ImpliedVolSurface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double timestamp = 1;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->timestamp(), target);
  }

  // repeated .pb.ImpliedVolSlice slices = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->slices_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->slices(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.ImpliedVolSurface)
  return target;
}

size_t ImpliedVolSurface::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.ImpliedVolSurface)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .pb.ImpliedVolSlice slices = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->slices_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->slices(static_cast<int>(i)));
    }
  }

  // double timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImpliedVolSurface::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.ImpliedVolSurface)
  GOOGLE_DCHECK_NE(&from, this);
  const ImpliedVolSurface* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImpliedVolSurface>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.ImpliedVolSurface)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.ImpliedVolSurface)
    MergeFrom(*source);
  }
}

void ImpliedVolSurface::MergeFrom(const ImpliedVolSurface& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.ImpliedVolSurface)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  slices_.MergeFrom(from.slices_);
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void ImpliedVolSurface::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.ImpliedVolSurface)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImpliedVolSurface::CopyFrom(const ImpliedVolSurface& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.ImpliedVolSurface)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImpliedVolSurface::IsInitialized() const {
  return true;
}

void ImpliedVolSurface::Swap(ImpliedVolSurface* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImpliedVolSurface::InternalSwap(ImpliedVolSurface* other) {
  using std::swap;
  CastToBase(&slices_)->InternalSwap(CastToBase(&other->slices_));
  swap(timestamp_, other->timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ImpliedVolSurface::GetMetadata() const {
  protobuf_marketdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_marketdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace pb
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::Index* Arena::CreateMaybeMessage< ::pb::Index >(Arena* arena) {
  return Arena::CreateInternal< ::pb::Index >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::Spot* Arena::CreateMaybeMessage< ::pb::Spot >(Arena* arena) {
  return Arena::CreateInternal< ::pb::Spot >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::RiskFreeRate* Arena::CreateMaybeMessage< ::pb::RiskFreeRate >(Arena* arena) {
  return Arena::CreateInternal< ::pb::RiskFreeRate >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::FlatVol* Arena::CreateMaybeMessage< ::pb::FlatVol >(Arena* arena) {
  return Arena::CreateInternal< ::pb::FlatVol >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::OptionQuote* Arena::CreateMaybeMessage< ::pb::OptionQuote >(Arena* arena) {
  return Arena::CreateInternal< ::pb::OptionQuote >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::OptionQuoteSlice* Arena::CreateMaybeMessage< ::pb::OptionQuoteSlice >(Arena* arena) {
  return Arena::CreateInternal< ::pb::OptionQuoteSlice >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::OptionMarket* Arena::CreateMaybeMessage< ::pb::OptionMarket >(Arena* arena) {
  return Arena::CreateInternal< ::pb::OptionMarket >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::ImpliedVolQuote* Arena::CreateMaybeMessage< ::pb::ImpliedVolQuote >(Arena* arena) {
  return Arena::CreateInternal< ::pb::ImpliedVolQuote >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::ImpliedVolSlice* Arena::CreateMaybeMessage< ::pb::ImpliedVolSlice >(Arena* arena) {
  return Arena::CreateInternal< ::pb::ImpliedVolSlice >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::ImpliedVolSurface* Arena::CreateMaybeMessage< ::pb::ImpliedVolSurface >(Arena* arena) {
  return Arena::CreateInternal< ::pb::ImpliedVolSurface >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

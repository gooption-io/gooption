syntax = "proto3";
package gooption;

service EuropeanOptionPricer {
  rpc Price (PriceRequest) returns (PriceResponse);
  rpc Greek (GreekRequest) returns (GreekResponse);
  rpc ImpliedVol (ImpliedVolRequest) returns (ImpliedVolResponse);
}

// contract

message European {
  double timestamp = 1;
  string ticker = 2;
  string undticker = 3;
  double strike = 4;
  double expiry = 5;
  string putcall = 6;
}

// market data

message Index {
    double timestamp = 1;
    string ticker = 2;
    double value = 3;
}

message Spot {
    Index index = 1;
}

message RiskFreeRate {
    Index index = 1;
}

message FlatVol {
    Index index = 1;
}

message OptionQuote {
    double timestamp = 1;
    double strike = 8;
    double bid = 9;
    double ask = 10;
    double volume = 11;
    double openinterest = 12;
    string putcall = 13;
}

message OptionQuoteSlice {
    double timestamp = 1;
    double expiry = 2;
    repeated OptionQuote puts = 3;
    repeated OptionQuote calls = 4;
}

message OptionMarket {
    double timestamp = 1;
    Spot spot = 2;
    FlatVol vol = 3;
    RiskFreeRate rate = 4;
}

message ImpliedVolQuote {
    double timestamp = 1;
    OptionQuote input = 2;
    string error = 3;
    double vol = 4;
    int64 nbiteration = 5;
}

message ImpliedVolSlice {
    double timestamp = 1;
    bool iserror = 2;
    double expiry = 3;
    repeated ImpliedVolQuote quotes = 4;
}

message ImpliedVolSurface {
    double timestamp = 1;
    repeated ImpliedVolSlice slices = 2;
}

// service
message PriceRequest {
  double pricingdate = 1;
  European contract = 2;
  OptionMarket marketdata = 3;
}

message PriceResponse {
  double price = 2;
  string error = 3;
}

message GreekRequest {
  PriceRequest request = 1;
  repeated string greek = 2;
}

message GreekResponse {
  message Greek {
    string label = 1;
    double value = 2;
    string error = 3;
  }
  repeated Greek greeks = 1;
  string error = 2;
}

message ImpliedVolRequest {
  double pricingdate = 1;
  OptionMarket marketdata = 2;
  repeated OptionQuoteSlice quotes = 3;
}

message ImpliedVolResponse {
  ImpliedVolSurface volsurface = 1;
  string error = 2;
}